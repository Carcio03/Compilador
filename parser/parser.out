Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    THEN
    UNTIL

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM LBRACE declarations statements RBRACE
Rule 2     declarations -> declarations declaration
Rule 3     declarations -> declaration
Rule 4     declarations -> empty
Rule 5     declaration -> type var_list SEMICOLON
Rule 6     var_list -> var_list COMMA IDENTIFIER
Rule 7     var_list -> var_list COMMA IDENTIFIER ASSIGN expression
Rule 8     var_list -> IDENTIFIER
Rule 9     var_list -> IDENTIFIER ASSIGN expression
Rule 10    type -> INT
Rule 11    type -> FLOAT
Rule 12    type -> BOOL
Rule 13    statements -> statements statement
Rule 14    statements -> statement
Rule 15    statements -> empty
Rule 16    statement -> assignment
Rule 17    statement -> if_statement
Rule 18    statement -> while_statement
Rule 19    statement -> do_while_statement
Rule 20    statement -> write_statement
Rule 21    statement -> read_statement
Rule 22    statement -> block
Rule 23    statement -> increment
Rule 24    statement -> decrement
Rule 25    assignment -> IDENTIFIER ASSIGN expression SEMICOLON
Rule 26    increment -> IDENTIFIER PLUS PLUS SEMICOLON
Rule 27    decrement -> IDENTIFIER MINUS MINUS SEMICOLON
Rule 28    if_statement -> IF expression block else_part FI
Rule 29    if_statement -> IF expression statement else_part FI
Rule 30    else_part -> ELSE block
Rule 31    else_part -> ELSE statement
Rule 32    else_part -> empty
Rule 33    while_statement -> WHILE expression LBRACE statements RBRACE
Rule 34    do_while_statement -> DO LBRACE statements RBRACE WHILE LPAREN expression RPAREN SEMICOLON
Rule 35    write_statement -> WRITE expression SEMICOLON
Rule 36    read_statement -> READ IDENTIFIER SEMICOLON
Rule 37    block -> LBRACE statements RBRACE
Rule 38    expression -> expression PLUS expression
Rule 39    expression -> expression MINUS expression
Rule 40    expression -> expression TIMES expression
Rule 41    expression -> expression DIVIDE expression
Rule 42    expression -> expression EQ expression
Rule 43    expression -> expression LT expression
Rule 44    expression -> expression GT expression
Rule 45    expression -> expression LE expression
Rule 46    expression -> expression GE expression
Rule 47    expression -> expression NE expression
Rule 48    expression -> expression AND expression
Rule 49    expression -> expression OR expression
Rule 50    expression -> MINUS expression
Rule 51    expression -> NOT expression
Rule 52    expression -> LPAREN expression RPAREN
Rule 53    expression -> NUMBER
Rule 54    expression -> IDENTIFIER
Rule 55    expression -> TRUE
Rule 56    expression -> FALSE
Rule 57    empty -> <empty>

Terminals, with rules where they appear

AND                  : 48
ASSIGN               : 7 9 25
BOOL                 : 12
COMMA                : 6 7
DIVIDE               : 41
DO                   : 34
ELSE                 : 30 31
EQ                   : 42
FALSE                : 56
FI                   : 28 29
FLOAT                : 11
GE                   : 46
GT                   : 44
IDENTIFIER           : 6 7 8 9 25 26 27 36 54
IF                   : 28 29
INT                  : 10
LBRACE               : 1 33 34 37
LE                   : 45
LPAREN               : 34 52
LT                   : 43
MINUS                : 27 27 39 50
NE                   : 47
NOT                  : 51
NUMBER               : 53
OR                   : 49
PLUS                 : 26 26 38
PROGRAM              : 1
RBRACE               : 1 33 34 37
READ                 : 36
RPAREN               : 34 52
SEMICOLON            : 5 25 26 27 34 35 36
THEN                 : 
TIMES                : 40
TRUE                 : 55
UNTIL                : 
WHILE                : 33 34
WRITE                : 35
error                : 

Nonterminals, with rules where they appear

assignment           : 16
block                : 22 28 30
declaration          : 2 3
declarations         : 1 2
decrement            : 24
do_while_statement   : 19
else_part            : 28 29
empty                : 4 15 32
expression           : 7 9 25 28 29 33 34 35 38 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48 48 49 49 50 51 52
if_statement         : 17
increment            : 23
program              : 0
read_statement       : 21
statement            : 13 14 29 31
statements           : 1 13 33 34 37
type                 : 5
var_list             : 5 6 7
while_statement      : 18
write_statement      : 20

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM LBRACE declarations statements RBRACE

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . LBRACE declarations statements RBRACE

    LBRACE          shift and go to state 3


state 3

    (1) program -> PROGRAM LBRACE . declarations statements RBRACE
    (2) declarations -> . declarations declaration
    (3) declarations -> . declaration
    (4) declarations -> . empty
    (5) declaration -> . type var_list SEMICOLON
    (57) empty -> .
    (10) type -> . INT
    (11) type -> . FLOAT
    (12) type -> . BOOL

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    IDENTIFIER      reduce using rule 57 (empty -> .)
    IF              reduce using rule 57 (empty -> .)
    WHILE           reduce using rule 57 (empty -> .)
    DO              reduce using rule 57 (empty -> .)
    WRITE           reduce using rule 57 (empty -> .)
    READ            reduce using rule 57 (empty -> .)
    LBRACE          reduce using rule 57 (empty -> .)
    RBRACE          reduce using rule 57 (empty -> .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    BOOL            shift and go to state 10

  ! INT             [ reduce using rule 57 (empty -> .) ]
  ! FLOAT           [ reduce using rule 57 (empty -> .) ]
  ! BOOL            [ reduce using rule 57 (empty -> .) ]

    declarations                   shift and go to state 4
    declaration                    shift and go to state 5
    empty                          shift and go to state 6
    type                           shift and go to state 7

state 4

    (1) program -> PROGRAM LBRACE declarations . statements RBRACE
    (2) declarations -> declarations . declaration
    (13) statements -> . statements statement
    (14) statements -> . statement
    (15) statements -> . empty
    (5) declaration -> . type var_list SEMICOLON
    (16) statement -> . assignment
    (17) statement -> . if_statement
    (18) statement -> . while_statement
    (19) statement -> . do_while_statement
    (20) statement -> . write_statement
    (21) statement -> . read_statement
    (22) statement -> . block
    (23) statement -> . increment
    (24) statement -> . decrement
    (57) empty -> .
    (10) type -> . INT
    (11) type -> . FLOAT
    (12) type -> . BOOL
    (25) assignment -> . IDENTIFIER ASSIGN expression SEMICOLON
    (28) if_statement -> . IF expression block else_part FI
    (29) if_statement -> . IF expression statement else_part FI
    (33) while_statement -> . WHILE expression LBRACE statements RBRACE
    (34) do_while_statement -> . DO LBRACE statements RBRACE WHILE LPAREN expression RPAREN SEMICOLON
    (35) write_statement -> . WRITE expression SEMICOLON
    (36) read_statement -> . READ IDENTIFIER SEMICOLON
    (37) block -> . LBRACE statements RBRACE
    (26) increment -> . IDENTIFIER PLUS PLUS SEMICOLON
    (27) decrement -> . IDENTIFIER MINUS MINUS SEMICOLON

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
    RBRACE          reduce using rule 57 (empty -> .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    BOOL            shift and go to state 10
    IDENTIFIER      shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    DO              shift and go to state 28
    WRITE           shift and go to state 29
    READ            shift and go to state 30
    LBRACE          shift and go to state 11

  ! IDENTIFIER      [ reduce using rule 57 (empty -> .) ]
  ! IF              [ reduce using rule 57 (empty -> .) ]
  ! WHILE           [ reduce using rule 57 (empty -> .) ]
  ! DO              [ reduce using rule 57 (empty -> .) ]
  ! WRITE           [ reduce using rule 57 (empty -> .) ]
  ! READ            [ reduce using rule 57 (empty -> .) ]
  ! LBRACE          [ reduce using rule 57 (empty -> .) ]

    statements                     shift and go to state 12
    declaration                    shift and go to state 13
    statement                      shift and go to state 14
    empty                          shift and go to state 15
    type                           shift and go to state 7
    assignment                     shift and go to state 16
    if_statement                   shift and go to state 17
    while_statement                shift and go to state 18
    do_while_statement             shift and go to state 19
    write_statement                shift and go to state 20
    read_statement                 shift and go to state 21
    block                          shift and go to state 22
    increment                      shift and go to state 23
    decrement                      shift and go to state 24

state 5

    (3) declarations -> declaration .

    INT             reduce using rule 3 (declarations -> declaration .)
    FLOAT           reduce using rule 3 (declarations -> declaration .)
    BOOL            reduce using rule 3 (declarations -> declaration .)
    IDENTIFIER      reduce using rule 3 (declarations -> declaration .)
    IF              reduce using rule 3 (declarations -> declaration .)
    WHILE           reduce using rule 3 (declarations -> declaration .)
    DO              reduce using rule 3 (declarations -> declaration .)
    WRITE           reduce using rule 3 (declarations -> declaration .)
    READ            reduce using rule 3 (declarations -> declaration .)
    LBRACE          reduce using rule 3 (declarations -> declaration .)
    RBRACE          reduce using rule 3 (declarations -> declaration .)


state 6

    (4) declarations -> empty .

    INT             reduce using rule 4 (declarations -> empty .)
    FLOAT           reduce using rule 4 (declarations -> empty .)
    BOOL            reduce using rule 4 (declarations -> empty .)
    IDENTIFIER      reduce using rule 4 (declarations -> empty .)
    IF              reduce using rule 4 (declarations -> empty .)
    WHILE           reduce using rule 4 (declarations -> empty .)
    DO              reduce using rule 4 (declarations -> empty .)
    WRITE           reduce using rule 4 (declarations -> empty .)
    READ            reduce using rule 4 (declarations -> empty .)
    LBRACE          reduce using rule 4 (declarations -> empty .)
    RBRACE          reduce using rule 4 (declarations -> empty .)


state 7

    (5) declaration -> type . var_list SEMICOLON
    (6) var_list -> . var_list COMMA IDENTIFIER
    (7) var_list -> . var_list COMMA IDENTIFIER ASSIGN expression
    (8) var_list -> . IDENTIFIER
    (9) var_list -> . IDENTIFIER ASSIGN expression

    IDENTIFIER      shift and go to state 32

    var_list                       shift and go to state 31

state 8

    (10) type -> INT .

    IDENTIFIER      reduce using rule 10 (type -> INT .)


state 9

    (11) type -> FLOAT .

    IDENTIFIER      reduce using rule 11 (type -> FLOAT .)


state 10

    (12) type -> BOOL .

    IDENTIFIER      reduce using rule 12 (type -> BOOL .)


state 11

    (37) block -> LBRACE . statements RBRACE
    (13) statements -> . statements statement
    (14) statements -> . statement
    (15) statements -> . empty
    (16) statement -> . assignment
    (17) statement -> . if_statement
    (18) statement -> . while_statement
    (19) statement -> . do_while_statement
    (20) statement -> . write_statement
    (21) statement -> . read_statement
    (22) statement -> . block
    (23) statement -> . increment
    (24) statement -> . decrement
    (57) empty -> .
    (25) assignment -> . IDENTIFIER ASSIGN expression SEMICOLON
    (28) if_statement -> . IF expression block else_part FI
    (29) if_statement -> . IF expression statement else_part FI
    (33) while_statement -> . WHILE expression LBRACE statements RBRACE
    (34) do_while_statement -> . DO LBRACE statements RBRACE WHILE LPAREN expression RPAREN SEMICOLON
    (35) write_statement -> . WRITE expression SEMICOLON
    (36) read_statement -> . READ IDENTIFIER SEMICOLON
    (37) block -> . LBRACE statements RBRACE
    (26) increment -> . IDENTIFIER PLUS PLUS SEMICOLON
    (27) decrement -> . IDENTIFIER MINUS MINUS SEMICOLON

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
    RBRACE          reduce using rule 57 (empty -> .)
    IDENTIFIER      shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    DO              shift and go to state 28
    WRITE           shift and go to state 29
    READ            shift and go to state 30
    LBRACE          shift and go to state 11

  ! IDENTIFIER      [ reduce using rule 57 (empty -> .) ]
  ! IF              [ reduce using rule 57 (empty -> .) ]
  ! WHILE           [ reduce using rule 57 (empty -> .) ]
  ! DO              [ reduce using rule 57 (empty -> .) ]
  ! WRITE           [ reduce using rule 57 (empty -> .) ]
  ! READ            [ reduce using rule 57 (empty -> .) ]
  ! LBRACE          [ reduce using rule 57 (empty -> .) ]

    statements                     shift and go to state 33
    statement                      shift and go to state 14
    empty                          shift and go to state 15
    assignment                     shift and go to state 16
    if_statement                   shift and go to state 17
    while_statement                shift and go to state 18
    do_while_statement             shift and go to state 19
    write_statement                shift and go to state 20
    read_statement                 shift and go to state 21
    block                          shift and go to state 22
    increment                      shift and go to state 23
    decrement                      shift and go to state 24

state 12

    (1) program -> PROGRAM LBRACE declarations statements . RBRACE
    (13) statements -> statements . statement
    (16) statement -> . assignment
    (17) statement -> . if_statement
    (18) statement -> . while_statement
    (19) statement -> . do_while_statement
    (20) statement -> . write_statement
    (21) statement -> . read_statement
    (22) statement -> . block
    (23) statement -> . increment
    (24) statement -> . decrement
    (25) assignment -> . IDENTIFIER ASSIGN expression SEMICOLON
    (28) if_statement -> . IF expression block else_part FI
    (29) if_statement -> . IF expression statement else_part FI
    (33) while_statement -> . WHILE expression LBRACE statements RBRACE
    (34) do_while_statement -> . DO LBRACE statements RBRACE WHILE LPAREN expression RPAREN SEMICOLON
    (35) write_statement -> . WRITE expression SEMICOLON
    (36) read_statement -> . READ IDENTIFIER SEMICOLON
    (37) block -> . LBRACE statements RBRACE
    (26) increment -> . IDENTIFIER PLUS PLUS SEMICOLON
    (27) decrement -> . IDENTIFIER MINUS MINUS SEMICOLON

    RBRACE          shift and go to state 34
    IDENTIFIER      shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    DO              shift and go to state 28
    WRITE           shift and go to state 29
    READ            shift and go to state 30
    LBRACE          shift and go to state 11

    statement                      shift and go to state 35
    assignment                     shift and go to state 16
    if_statement                   shift and go to state 17
    while_statement                shift and go to state 18
    do_while_statement             shift and go to state 19
    write_statement                shift and go to state 20
    read_statement                 shift and go to state 21
    block                          shift and go to state 22
    increment                      shift and go to state 23
    decrement                      shift and go to state 24

state 13

    (2) declarations -> declarations declaration .

    INT             reduce using rule 2 (declarations -> declarations declaration .)
    FLOAT           reduce using rule 2 (declarations -> declarations declaration .)
    BOOL            reduce using rule 2 (declarations -> declarations declaration .)
    IDENTIFIER      reduce using rule 2 (declarations -> declarations declaration .)
    IF              reduce using rule 2 (declarations -> declarations declaration .)
    WHILE           reduce using rule 2 (declarations -> declarations declaration .)
    DO              reduce using rule 2 (declarations -> declarations declaration .)
    WRITE           reduce using rule 2 (declarations -> declarations declaration .)
    READ            reduce using rule 2 (declarations -> declarations declaration .)
    LBRACE          reduce using rule 2 (declarations -> declarations declaration .)
    RBRACE          reduce using rule 2 (declarations -> declarations declaration .)


state 14

    (14) statements -> statement .

    RBRACE          reduce using rule 14 (statements -> statement .)
    IDENTIFIER      reduce using rule 14 (statements -> statement .)
    IF              reduce using rule 14 (statements -> statement .)
    WHILE           reduce using rule 14 (statements -> statement .)
    DO              reduce using rule 14 (statements -> statement .)
    WRITE           reduce using rule 14 (statements -> statement .)
    READ            reduce using rule 14 (statements -> statement .)
    LBRACE          reduce using rule 14 (statements -> statement .)


state 15

    (15) statements -> empty .

    RBRACE          reduce using rule 15 (statements -> empty .)
    IDENTIFIER      reduce using rule 15 (statements -> empty .)
    IF              reduce using rule 15 (statements -> empty .)
    WHILE           reduce using rule 15 (statements -> empty .)
    DO              reduce using rule 15 (statements -> empty .)
    WRITE           reduce using rule 15 (statements -> empty .)
    READ            reduce using rule 15 (statements -> empty .)
    LBRACE          reduce using rule 15 (statements -> empty .)


state 16

    (16) statement -> assignment .

    RBRACE          reduce using rule 16 (statement -> assignment .)
    IDENTIFIER      reduce using rule 16 (statement -> assignment .)
    IF              reduce using rule 16 (statement -> assignment .)
    WHILE           reduce using rule 16 (statement -> assignment .)
    DO              reduce using rule 16 (statement -> assignment .)
    WRITE           reduce using rule 16 (statement -> assignment .)
    READ            reduce using rule 16 (statement -> assignment .)
    LBRACE          reduce using rule 16 (statement -> assignment .)
    ELSE            reduce using rule 16 (statement -> assignment .)
    FI              reduce using rule 16 (statement -> assignment .)


state 17

    (17) statement -> if_statement .

    RBRACE          reduce using rule 17 (statement -> if_statement .)
    IDENTIFIER      reduce using rule 17 (statement -> if_statement .)
    IF              reduce using rule 17 (statement -> if_statement .)
    WHILE           reduce using rule 17 (statement -> if_statement .)
    DO              reduce using rule 17 (statement -> if_statement .)
    WRITE           reduce using rule 17 (statement -> if_statement .)
    READ            reduce using rule 17 (statement -> if_statement .)
    LBRACE          reduce using rule 17 (statement -> if_statement .)
    ELSE            reduce using rule 17 (statement -> if_statement .)
    FI              reduce using rule 17 (statement -> if_statement .)


state 18

    (18) statement -> while_statement .

    RBRACE          reduce using rule 18 (statement -> while_statement .)
    IDENTIFIER      reduce using rule 18 (statement -> while_statement .)
    IF              reduce using rule 18 (statement -> while_statement .)
    WHILE           reduce using rule 18 (statement -> while_statement .)
    DO              reduce using rule 18 (statement -> while_statement .)
    WRITE           reduce using rule 18 (statement -> while_statement .)
    READ            reduce using rule 18 (statement -> while_statement .)
    LBRACE          reduce using rule 18 (statement -> while_statement .)
    ELSE            reduce using rule 18 (statement -> while_statement .)
    FI              reduce using rule 18 (statement -> while_statement .)


state 19

    (19) statement -> do_while_statement .

    RBRACE          reduce using rule 19 (statement -> do_while_statement .)
    IDENTIFIER      reduce using rule 19 (statement -> do_while_statement .)
    IF              reduce using rule 19 (statement -> do_while_statement .)
    WHILE           reduce using rule 19 (statement -> do_while_statement .)
    DO              reduce using rule 19 (statement -> do_while_statement .)
    WRITE           reduce using rule 19 (statement -> do_while_statement .)
    READ            reduce using rule 19 (statement -> do_while_statement .)
    LBRACE          reduce using rule 19 (statement -> do_while_statement .)
    ELSE            reduce using rule 19 (statement -> do_while_statement .)
    FI              reduce using rule 19 (statement -> do_while_statement .)


state 20

    (20) statement -> write_statement .

    RBRACE          reduce using rule 20 (statement -> write_statement .)
    IDENTIFIER      reduce using rule 20 (statement -> write_statement .)
    IF              reduce using rule 20 (statement -> write_statement .)
    WHILE           reduce using rule 20 (statement -> write_statement .)
    DO              reduce using rule 20 (statement -> write_statement .)
    WRITE           reduce using rule 20 (statement -> write_statement .)
    READ            reduce using rule 20 (statement -> write_statement .)
    LBRACE          reduce using rule 20 (statement -> write_statement .)
    ELSE            reduce using rule 20 (statement -> write_statement .)
    FI              reduce using rule 20 (statement -> write_statement .)


state 21

    (21) statement -> read_statement .

    RBRACE          reduce using rule 21 (statement -> read_statement .)
    IDENTIFIER      reduce using rule 21 (statement -> read_statement .)
    IF              reduce using rule 21 (statement -> read_statement .)
    WHILE           reduce using rule 21 (statement -> read_statement .)
    DO              reduce using rule 21 (statement -> read_statement .)
    WRITE           reduce using rule 21 (statement -> read_statement .)
    READ            reduce using rule 21 (statement -> read_statement .)
    LBRACE          reduce using rule 21 (statement -> read_statement .)
    ELSE            reduce using rule 21 (statement -> read_statement .)
    FI              reduce using rule 21 (statement -> read_statement .)


state 22

    (22) statement -> block .

    RBRACE          reduce using rule 22 (statement -> block .)
    IDENTIFIER      reduce using rule 22 (statement -> block .)
    IF              reduce using rule 22 (statement -> block .)
    WHILE           reduce using rule 22 (statement -> block .)
    DO              reduce using rule 22 (statement -> block .)
    WRITE           reduce using rule 22 (statement -> block .)
    READ            reduce using rule 22 (statement -> block .)
    LBRACE          reduce using rule 22 (statement -> block .)


state 23

    (23) statement -> increment .

    RBRACE          reduce using rule 23 (statement -> increment .)
    IDENTIFIER      reduce using rule 23 (statement -> increment .)
    IF              reduce using rule 23 (statement -> increment .)
    WHILE           reduce using rule 23 (statement -> increment .)
    DO              reduce using rule 23 (statement -> increment .)
    WRITE           reduce using rule 23 (statement -> increment .)
    READ            reduce using rule 23 (statement -> increment .)
    LBRACE          reduce using rule 23 (statement -> increment .)
    ELSE            reduce using rule 23 (statement -> increment .)
    FI              reduce using rule 23 (statement -> increment .)


state 24

    (24) statement -> decrement .

    RBRACE          reduce using rule 24 (statement -> decrement .)
    IDENTIFIER      reduce using rule 24 (statement -> decrement .)
    IF              reduce using rule 24 (statement -> decrement .)
    WHILE           reduce using rule 24 (statement -> decrement .)
    DO              reduce using rule 24 (statement -> decrement .)
    WRITE           reduce using rule 24 (statement -> decrement .)
    READ            reduce using rule 24 (statement -> decrement .)
    LBRACE          reduce using rule 24 (statement -> decrement .)
    ELSE            reduce using rule 24 (statement -> decrement .)
    FI              reduce using rule 24 (statement -> decrement .)


state 25

    (25) assignment -> IDENTIFIER . ASSIGN expression SEMICOLON
    (26) increment -> IDENTIFIER . PLUS PLUS SEMICOLON
    (27) decrement -> IDENTIFIER . MINUS MINUS SEMICOLON

    ASSIGN          shift and go to state 36
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38


state 26

    (28) if_statement -> IF . expression block else_part FI
    (29) if_statement -> IF . expression statement else_part FI
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression LE expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression NE expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . NOT expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . IDENTIFIER
    (55) expression -> . TRUE
    (56) expression -> . FALSE

    MINUS           shift and go to state 40
    NOT             shift and go to state 41
    LPAREN          shift and go to state 42
    NUMBER          shift and go to state 43
    IDENTIFIER      shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    expression                     shift and go to state 39

state 27

    (33) while_statement -> WHILE . expression LBRACE statements RBRACE
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression LE expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression NE expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . NOT expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . IDENTIFIER
    (55) expression -> . TRUE
    (56) expression -> . FALSE

    MINUS           shift and go to state 40
    NOT             shift and go to state 41
    LPAREN          shift and go to state 42
    NUMBER          shift and go to state 43
    IDENTIFIER      shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    expression                     shift and go to state 47

state 28

    (34) do_while_statement -> DO . LBRACE statements RBRACE WHILE LPAREN expression RPAREN SEMICOLON

    LBRACE          shift and go to state 48


state 29

    (35) write_statement -> WRITE . expression SEMICOLON
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression LE expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression NE expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . NOT expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . IDENTIFIER
    (55) expression -> . TRUE
    (56) expression -> . FALSE

    MINUS           shift and go to state 40
    NOT             shift and go to state 41
    LPAREN          shift and go to state 42
    NUMBER          shift and go to state 43
    IDENTIFIER      shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    expression                     shift and go to state 49

state 30

    (36) read_statement -> READ . IDENTIFIER SEMICOLON

    IDENTIFIER      shift and go to state 50


state 31

    (5) declaration -> type var_list . SEMICOLON
    (6) var_list -> var_list . COMMA IDENTIFIER
    (7) var_list -> var_list . COMMA IDENTIFIER ASSIGN expression

    SEMICOLON       shift and go to state 51
    COMMA           shift and go to state 52


state 32

    (8) var_list -> IDENTIFIER .
    (9) var_list -> IDENTIFIER . ASSIGN expression

    SEMICOLON       reduce using rule 8 (var_list -> IDENTIFIER .)
    COMMA           reduce using rule 8 (var_list -> IDENTIFIER .)
    ASSIGN          shift and go to state 53


state 33

    (37) block -> LBRACE statements . RBRACE
    (13) statements -> statements . statement
    (16) statement -> . assignment
    (17) statement -> . if_statement
    (18) statement -> . while_statement
    (19) statement -> . do_while_statement
    (20) statement -> . write_statement
    (21) statement -> . read_statement
    (22) statement -> . block
    (23) statement -> . increment
    (24) statement -> . decrement
    (25) assignment -> . IDENTIFIER ASSIGN expression SEMICOLON
    (28) if_statement -> . IF expression block else_part FI
    (29) if_statement -> . IF expression statement else_part FI
    (33) while_statement -> . WHILE expression LBRACE statements RBRACE
    (34) do_while_statement -> . DO LBRACE statements RBRACE WHILE LPAREN expression RPAREN SEMICOLON
    (35) write_statement -> . WRITE expression SEMICOLON
    (36) read_statement -> . READ IDENTIFIER SEMICOLON
    (37) block -> . LBRACE statements RBRACE
    (26) increment -> . IDENTIFIER PLUS PLUS SEMICOLON
    (27) decrement -> . IDENTIFIER MINUS MINUS SEMICOLON

    RBRACE          shift and go to state 54
    IDENTIFIER      shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    DO              shift and go to state 28
    WRITE           shift and go to state 29
    READ            shift and go to state 30
    LBRACE          shift and go to state 11

    statement                      shift and go to state 35
    assignment                     shift and go to state 16
    if_statement                   shift and go to state 17
    while_statement                shift and go to state 18
    do_while_statement             shift and go to state 19
    write_statement                shift and go to state 20
    read_statement                 shift and go to state 21
    block                          shift and go to state 22
    increment                      shift and go to state 23
    decrement                      shift and go to state 24

state 34

    (1) program -> PROGRAM LBRACE declarations statements RBRACE .

    $end            reduce using rule 1 (program -> PROGRAM LBRACE declarations statements RBRACE .)


state 35

    (13) statements -> statements statement .

    RBRACE          reduce using rule 13 (statements -> statements statement .)
    IDENTIFIER      reduce using rule 13 (statements -> statements statement .)
    IF              reduce using rule 13 (statements -> statements statement .)
    WHILE           reduce using rule 13 (statements -> statements statement .)
    DO              reduce using rule 13 (statements -> statements statement .)
    WRITE           reduce using rule 13 (statements -> statements statement .)
    READ            reduce using rule 13 (statements -> statements statement .)
    LBRACE          reduce using rule 13 (statements -> statements statement .)


state 36

    (25) assignment -> IDENTIFIER ASSIGN . expression SEMICOLON
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression LE expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression NE expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . NOT expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . IDENTIFIER
    (55) expression -> . TRUE
    (56) expression -> . FALSE

    MINUS           shift and go to state 40
    NOT             shift and go to state 41
    LPAREN          shift and go to state 42
    NUMBER          shift and go to state 43
    IDENTIFIER      shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    expression                     shift and go to state 55

state 37

    (26) increment -> IDENTIFIER PLUS . PLUS SEMICOLON

    PLUS            shift and go to state 56


state 38

    (27) decrement -> IDENTIFIER MINUS . MINUS SEMICOLON

    MINUS           shift and go to state 57


state 39

    (28) if_statement -> IF expression . block else_part FI
    (29) if_statement -> IF expression . statement else_part FI
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . LE expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . NE expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression
    (37) block -> . LBRACE statements RBRACE
    (16) statement -> . assignment
    (17) statement -> . if_statement
    (18) statement -> . while_statement
    (19) statement -> . do_while_statement
    (20) statement -> . write_statement
    (21) statement -> . read_statement
    (22) statement -> . block
    (23) statement -> . increment
    (24) statement -> . decrement
    (25) assignment -> . IDENTIFIER ASSIGN expression SEMICOLON
    (28) if_statement -> . IF expression block else_part FI
    (29) if_statement -> . IF expression statement else_part FI
    (33) while_statement -> . WHILE expression LBRACE statements RBRACE
    (34) do_while_statement -> . DO LBRACE statements RBRACE WHILE LPAREN expression RPAREN SEMICOLON
    (35) write_statement -> . WRITE expression SEMICOLON
    (36) read_statement -> . READ IDENTIFIER SEMICOLON
    (26) increment -> . IDENTIFIER PLUS PLUS SEMICOLON
    (27) decrement -> . IDENTIFIER MINUS MINUS SEMICOLON

    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 63
    EQ              shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    NE              shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71
    LBRACE          shift and go to state 11
    IDENTIFIER      shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    DO              shift and go to state 28
    WRITE           shift and go to state 29
    READ            shift and go to state 30

    block                          shift and go to state 58
    statement                      shift and go to state 59
    assignment                     shift and go to state 16
    if_statement                   shift and go to state 17
    while_statement                shift and go to state 18
    do_while_statement             shift and go to state 19
    write_statement                shift and go to state 20
    read_statement                 shift and go to state 21
    increment                      shift and go to state 23
    decrement                      shift and go to state 24

state 40

    (50) expression -> MINUS . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression LE expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression NE expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . NOT expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . IDENTIFIER
    (55) expression -> . TRUE
    (56) expression -> . FALSE

    MINUS           shift and go to state 40
    NOT             shift and go to state 41
    LPAREN          shift and go to state 42
    NUMBER          shift and go to state 43
    IDENTIFIER      shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    expression                     shift and go to state 72

state 41

    (51) expression -> NOT . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression LE expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression NE expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . NOT expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . IDENTIFIER
    (55) expression -> . TRUE
    (56) expression -> . FALSE

    MINUS           shift and go to state 40
    NOT             shift and go to state 41
    LPAREN          shift and go to state 42
    NUMBER          shift and go to state 43
    IDENTIFIER      shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    expression                     shift and go to state 73

state 42

    (52) expression -> LPAREN . expression RPAREN
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression LE expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression NE expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . NOT expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . IDENTIFIER
    (55) expression -> . TRUE
    (56) expression -> . FALSE

    MINUS           shift and go to state 40
    NOT             shift and go to state 41
    LPAREN          shift and go to state 42
    NUMBER          shift and go to state 43
    IDENTIFIER      shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    expression                     shift and go to state 74

state 43

    (53) expression -> NUMBER .

    PLUS            reduce using rule 53 (expression -> NUMBER .)
    MINUS           reduce using rule 53 (expression -> NUMBER .)
    TIMES           reduce using rule 53 (expression -> NUMBER .)
    DIVIDE          reduce using rule 53 (expression -> NUMBER .)
    EQ              reduce using rule 53 (expression -> NUMBER .)
    LT              reduce using rule 53 (expression -> NUMBER .)
    GT              reduce using rule 53 (expression -> NUMBER .)
    LE              reduce using rule 53 (expression -> NUMBER .)
    GE              reduce using rule 53 (expression -> NUMBER .)
    NE              reduce using rule 53 (expression -> NUMBER .)
    AND             reduce using rule 53 (expression -> NUMBER .)
    OR              reduce using rule 53 (expression -> NUMBER .)
    LBRACE          reduce using rule 53 (expression -> NUMBER .)
    IDENTIFIER      reduce using rule 53 (expression -> NUMBER .)
    IF              reduce using rule 53 (expression -> NUMBER .)
    WHILE           reduce using rule 53 (expression -> NUMBER .)
    DO              reduce using rule 53 (expression -> NUMBER .)
    WRITE           reduce using rule 53 (expression -> NUMBER .)
    READ            reduce using rule 53 (expression -> NUMBER .)
    SEMICOLON       reduce using rule 53 (expression -> NUMBER .)
    RPAREN          reduce using rule 53 (expression -> NUMBER .)
    COMMA           reduce using rule 53 (expression -> NUMBER .)


state 44

    (54) expression -> IDENTIFIER .

    PLUS            reduce using rule 54 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 54 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 54 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 54 (expression -> IDENTIFIER .)
    EQ              reduce using rule 54 (expression -> IDENTIFIER .)
    LT              reduce using rule 54 (expression -> IDENTIFIER .)
    GT              reduce using rule 54 (expression -> IDENTIFIER .)
    LE              reduce using rule 54 (expression -> IDENTIFIER .)
    GE              reduce using rule 54 (expression -> IDENTIFIER .)
    NE              reduce using rule 54 (expression -> IDENTIFIER .)
    AND             reduce using rule 54 (expression -> IDENTIFIER .)
    OR              reduce using rule 54 (expression -> IDENTIFIER .)
    LBRACE          reduce using rule 54 (expression -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 54 (expression -> IDENTIFIER .)
    IF              reduce using rule 54 (expression -> IDENTIFIER .)
    WHILE           reduce using rule 54 (expression -> IDENTIFIER .)
    DO              reduce using rule 54 (expression -> IDENTIFIER .)
    WRITE           reduce using rule 54 (expression -> IDENTIFIER .)
    READ            reduce using rule 54 (expression -> IDENTIFIER .)
    SEMICOLON       reduce using rule 54 (expression -> IDENTIFIER .)
    RPAREN          reduce using rule 54 (expression -> IDENTIFIER .)
    COMMA           reduce using rule 54 (expression -> IDENTIFIER .)


state 45

    (55) expression -> TRUE .

    PLUS            reduce using rule 55 (expression -> TRUE .)
    MINUS           reduce using rule 55 (expression -> TRUE .)
    TIMES           reduce using rule 55 (expression -> TRUE .)
    DIVIDE          reduce using rule 55 (expression -> TRUE .)
    EQ              reduce using rule 55 (expression -> TRUE .)
    LT              reduce using rule 55 (expression -> TRUE .)
    GT              reduce using rule 55 (expression -> TRUE .)
    LE              reduce using rule 55 (expression -> TRUE .)
    GE              reduce using rule 55 (expression -> TRUE .)
    NE              reduce using rule 55 (expression -> TRUE .)
    AND             reduce using rule 55 (expression -> TRUE .)
    OR              reduce using rule 55 (expression -> TRUE .)
    LBRACE          reduce using rule 55 (expression -> TRUE .)
    IDENTIFIER      reduce using rule 55 (expression -> TRUE .)
    IF              reduce using rule 55 (expression -> TRUE .)
    WHILE           reduce using rule 55 (expression -> TRUE .)
    DO              reduce using rule 55 (expression -> TRUE .)
    WRITE           reduce using rule 55 (expression -> TRUE .)
    READ            reduce using rule 55 (expression -> TRUE .)
    SEMICOLON       reduce using rule 55 (expression -> TRUE .)
    RPAREN          reduce using rule 55 (expression -> TRUE .)
    COMMA           reduce using rule 55 (expression -> TRUE .)


state 46

    (56) expression -> FALSE .

    PLUS            reduce using rule 56 (expression -> FALSE .)
    MINUS           reduce using rule 56 (expression -> FALSE .)
    TIMES           reduce using rule 56 (expression -> FALSE .)
    DIVIDE          reduce using rule 56 (expression -> FALSE .)
    EQ              reduce using rule 56 (expression -> FALSE .)
    LT              reduce using rule 56 (expression -> FALSE .)
    GT              reduce using rule 56 (expression -> FALSE .)
    LE              reduce using rule 56 (expression -> FALSE .)
    GE              reduce using rule 56 (expression -> FALSE .)
    NE              reduce using rule 56 (expression -> FALSE .)
    AND             reduce using rule 56 (expression -> FALSE .)
    OR              reduce using rule 56 (expression -> FALSE .)
    LBRACE          reduce using rule 56 (expression -> FALSE .)
    IDENTIFIER      reduce using rule 56 (expression -> FALSE .)
    IF              reduce using rule 56 (expression -> FALSE .)
    WHILE           reduce using rule 56 (expression -> FALSE .)
    DO              reduce using rule 56 (expression -> FALSE .)
    WRITE           reduce using rule 56 (expression -> FALSE .)
    READ            reduce using rule 56 (expression -> FALSE .)
    SEMICOLON       reduce using rule 56 (expression -> FALSE .)
    RPAREN          reduce using rule 56 (expression -> FALSE .)
    COMMA           reduce using rule 56 (expression -> FALSE .)


state 47

    (33) while_statement -> WHILE expression . LBRACE statements RBRACE
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . LE expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . NE expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    LBRACE          shift and go to state 75
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 63
    EQ              shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    NE              shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71


state 48

    (34) do_while_statement -> DO LBRACE . statements RBRACE WHILE LPAREN expression RPAREN SEMICOLON
    (13) statements -> . statements statement
    (14) statements -> . statement
    (15) statements -> . empty
    (16) statement -> . assignment
    (17) statement -> . if_statement
    (18) statement -> . while_statement
    (19) statement -> . do_while_statement
    (20) statement -> . write_statement
    (21) statement -> . read_statement
    (22) statement -> . block
    (23) statement -> . increment
    (24) statement -> . decrement
    (57) empty -> .
    (25) assignment -> . IDENTIFIER ASSIGN expression SEMICOLON
    (28) if_statement -> . IF expression block else_part FI
    (29) if_statement -> . IF expression statement else_part FI
    (33) while_statement -> . WHILE expression LBRACE statements RBRACE
    (34) do_while_statement -> . DO LBRACE statements RBRACE WHILE LPAREN expression RPAREN SEMICOLON
    (35) write_statement -> . WRITE expression SEMICOLON
    (36) read_statement -> . READ IDENTIFIER SEMICOLON
    (37) block -> . LBRACE statements RBRACE
    (26) increment -> . IDENTIFIER PLUS PLUS SEMICOLON
    (27) decrement -> . IDENTIFIER MINUS MINUS SEMICOLON

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
    RBRACE          reduce using rule 57 (empty -> .)
    IDENTIFIER      shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    DO              shift and go to state 28
    WRITE           shift and go to state 29
    READ            shift and go to state 30
    LBRACE          shift and go to state 11

  ! IDENTIFIER      [ reduce using rule 57 (empty -> .) ]
  ! IF              [ reduce using rule 57 (empty -> .) ]
  ! WHILE           [ reduce using rule 57 (empty -> .) ]
  ! DO              [ reduce using rule 57 (empty -> .) ]
  ! WRITE           [ reduce using rule 57 (empty -> .) ]
  ! READ            [ reduce using rule 57 (empty -> .) ]
  ! LBRACE          [ reduce using rule 57 (empty -> .) ]

    statements                     shift and go to state 76
    statement                      shift and go to state 14
    empty                          shift and go to state 15
    assignment                     shift and go to state 16
    if_statement                   shift and go to state 17
    while_statement                shift and go to state 18
    do_while_statement             shift and go to state 19
    write_statement                shift and go to state 20
    read_statement                 shift and go to state 21
    block                          shift and go to state 22
    increment                      shift and go to state 23
    decrement                      shift and go to state 24

state 49

    (35) write_statement -> WRITE expression . SEMICOLON
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . LE expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . NE expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    SEMICOLON       shift and go to state 77
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 63
    EQ              shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    NE              shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71


state 50

    (36) read_statement -> READ IDENTIFIER . SEMICOLON

    SEMICOLON       shift and go to state 78


state 51

    (5) declaration -> type var_list SEMICOLON .

    INT             reduce using rule 5 (declaration -> type var_list SEMICOLON .)
    FLOAT           reduce using rule 5 (declaration -> type var_list SEMICOLON .)
    BOOL            reduce using rule 5 (declaration -> type var_list SEMICOLON .)
    IDENTIFIER      reduce using rule 5 (declaration -> type var_list SEMICOLON .)
    IF              reduce using rule 5 (declaration -> type var_list SEMICOLON .)
    WHILE           reduce using rule 5 (declaration -> type var_list SEMICOLON .)
    DO              reduce using rule 5 (declaration -> type var_list SEMICOLON .)
    WRITE           reduce using rule 5 (declaration -> type var_list SEMICOLON .)
    READ            reduce using rule 5 (declaration -> type var_list SEMICOLON .)
    LBRACE          reduce using rule 5 (declaration -> type var_list SEMICOLON .)
    RBRACE          reduce using rule 5 (declaration -> type var_list SEMICOLON .)


state 52

    (6) var_list -> var_list COMMA . IDENTIFIER
    (7) var_list -> var_list COMMA . IDENTIFIER ASSIGN expression

    IDENTIFIER      shift and go to state 79


state 53

    (9) var_list -> IDENTIFIER ASSIGN . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression LE expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression NE expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . NOT expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . IDENTIFIER
    (55) expression -> . TRUE
    (56) expression -> . FALSE

    MINUS           shift and go to state 40
    NOT             shift and go to state 41
    LPAREN          shift and go to state 42
    NUMBER          shift and go to state 43
    IDENTIFIER      shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    expression                     shift and go to state 80

state 54

    (37) block -> LBRACE statements RBRACE .

    RBRACE          reduce using rule 37 (block -> LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 37 (block -> LBRACE statements RBRACE .)
    IF              reduce using rule 37 (block -> LBRACE statements RBRACE .)
    WHILE           reduce using rule 37 (block -> LBRACE statements RBRACE .)
    DO              reduce using rule 37 (block -> LBRACE statements RBRACE .)
    WRITE           reduce using rule 37 (block -> LBRACE statements RBRACE .)
    READ            reduce using rule 37 (block -> LBRACE statements RBRACE .)
    LBRACE          reduce using rule 37 (block -> LBRACE statements RBRACE .)
    ELSE            reduce using rule 37 (block -> LBRACE statements RBRACE .)
    FI              reduce using rule 37 (block -> LBRACE statements RBRACE .)


state 55

    (25) assignment -> IDENTIFIER ASSIGN expression . SEMICOLON
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . LE expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . NE expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    SEMICOLON       shift and go to state 81
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 63
    EQ              shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    NE              shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71


state 56

    (26) increment -> IDENTIFIER PLUS PLUS . SEMICOLON

    SEMICOLON       shift and go to state 82


state 57

    (27) decrement -> IDENTIFIER MINUS MINUS . SEMICOLON

    SEMICOLON       shift and go to state 83


state 58

    (28) if_statement -> IF expression block . else_part FI
    (22) statement -> block .
    (30) else_part -> . ELSE block
    (31) else_part -> . ELSE statement
    (32) else_part -> . empty
    (57) empty -> .

  ! shift/reduce conflict for ELSE resolved as shift
  ! reduce/reduce conflict for FI resolved using rule 22 (statement -> block .)
    FI              reduce using rule 22 (statement -> block .)
    ELSE            shift and go to state 85

  ! ELSE            [ reduce using rule 22 (statement -> block .) ]
  ! FI              [ reduce using rule 57 (empty -> .) ]

    else_part                      shift and go to state 84
    empty                          shift and go to state 86

state 59

    (29) if_statement -> IF expression statement . else_part FI
    (30) else_part -> . ELSE block
    (31) else_part -> . ELSE statement
    (32) else_part -> . empty
    (57) empty -> .

    ELSE            shift and go to state 85
    FI              reduce using rule 57 (empty -> .)

    else_part                      shift and go to state 87
    empty                          shift and go to state 86

state 60

    (38) expression -> expression PLUS . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression LE expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression NE expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . NOT expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . IDENTIFIER
    (55) expression -> . TRUE
    (56) expression -> . FALSE

    MINUS           shift and go to state 40
    NOT             shift and go to state 41
    LPAREN          shift and go to state 42
    NUMBER          shift and go to state 43
    IDENTIFIER      shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    expression                     shift and go to state 88

state 61

    (39) expression -> expression MINUS . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression LE expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression NE expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . NOT expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . IDENTIFIER
    (55) expression -> . TRUE
    (56) expression -> . FALSE

    MINUS           shift and go to state 40
    NOT             shift and go to state 41
    LPAREN          shift and go to state 42
    NUMBER          shift and go to state 43
    IDENTIFIER      shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    expression                     shift and go to state 89

state 62

    (40) expression -> expression TIMES . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression LE expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression NE expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . NOT expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . IDENTIFIER
    (55) expression -> . TRUE
    (56) expression -> . FALSE

    MINUS           shift and go to state 40
    NOT             shift and go to state 41
    LPAREN          shift and go to state 42
    NUMBER          shift and go to state 43
    IDENTIFIER      shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    expression                     shift and go to state 90

state 63

    (41) expression -> expression DIVIDE . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression LE expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression NE expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . NOT expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . IDENTIFIER
    (55) expression -> . TRUE
    (56) expression -> . FALSE

    MINUS           shift and go to state 40
    NOT             shift and go to state 41
    LPAREN          shift and go to state 42
    NUMBER          shift and go to state 43
    IDENTIFIER      shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    expression                     shift and go to state 91

state 64

    (42) expression -> expression EQ . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression LE expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression NE expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . NOT expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . IDENTIFIER
    (55) expression -> . TRUE
    (56) expression -> . FALSE

    MINUS           shift and go to state 40
    NOT             shift and go to state 41
    LPAREN          shift and go to state 42
    NUMBER          shift and go to state 43
    IDENTIFIER      shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    expression                     shift and go to state 92

state 65

    (43) expression -> expression LT . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression LE expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression NE expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . NOT expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . IDENTIFIER
    (55) expression -> . TRUE
    (56) expression -> . FALSE

    MINUS           shift and go to state 40
    NOT             shift and go to state 41
    LPAREN          shift and go to state 42
    NUMBER          shift and go to state 43
    IDENTIFIER      shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    expression                     shift and go to state 93

state 66

    (44) expression -> expression GT . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression LE expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression NE expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . NOT expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . IDENTIFIER
    (55) expression -> . TRUE
    (56) expression -> . FALSE

    MINUS           shift and go to state 40
    NOT             shift and go to state 41
    LPAREN          shift and go to state 42
    NUMBER          shift and go to state 43
    IDENTIFIER      shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    expression                     shift and go to state 94

state 67

    (45) expression -> expression LE . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression LE expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression NE expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . NOT expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . IDENTIFIER
    (55) expression -> . TRUE
    (56) expression -> . FALSE

    MINUS           shift and go to state 40
    NOT             shift and go to state 41
    LPAREN          shift and go to state 42
    NUMBER          shift and go to state 43
    IDENTIFIER      shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    expression                     shift and go to state 95

state 68

    (46) expression -> expression GE . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression LE expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression NE expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . NOT expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . IDENTIFIER
    (55) expression -> . TRUE
    (56) expression -> . FALSE

    MINUS           shift and go to state 40
    NOT             shift and go to state 41
    LPAREN          shift and go to state 42
    NUMBER          shift and go to state 43
    IDENTIFIER      shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    expression                     shift and go to state 96

state 69

    (47) expression -> expression NE . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression LE expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression NE expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . NOT expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . IDENTIFIER
    (55) expression -> . TRUE
    (56) expression -> . FALSE

    MINUS           shift and go to state 40
    NOT             shift and go to state 41
    LPAREN          shift and go to state 42
    NUMBER          shift and go to state 43
    IDENTIFIER      shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    expression                     shift and go to state 97

state 70

    (48) expression -> expression AND . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression LE expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression NE expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . NOT expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . IDENTIFIER
    (55) expression -> . TRUE
    (56) expression -> . FALSE

    MINUS           shift and go to state 40
    NOT             shift and go to state 41
    LPAREN          shift and go to state 42
    NUMBER          shift and go to state 43
    IDENTIFIER      shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    expression                     shift and go to state 98

state 71

    (49) expression -> expression OR . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression LE expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression NE expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . NOT expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . IDENTIFIER
    (55) expression -> . TRUE
    (56) expression -> . FALSE

    MINUS           shift and go to state 40
    NOT             shift and go to state 41
    LPAREN          shift and go to state 42
    NUMBER          shift and go to state 43
    IDENTIFIER      shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    expression                     shift and go to state 99

state 72

    (50) expression -> MINUS expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . LE expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . NE expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    PLUS            reduce using rule 50 (expression -> MINUS expression .)
    MINUS           reduce using rule 50 (expression -> MINUS expression .)
    TIMES           reduce using rule 50 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 50 (expression -> MINUS expression .)
    EQ              reduce using rule 50 (expression -> MINUS expression .)
    LT              reduce using rule 50 (expression -> MINUS expression .)
    GT              reduce using rule 50 (expression -> MINUS expression .)
    LE              reduce using rule 50 (expression -> MINUS expression .)
    GE              reduce using rule 50 (expression -> MINUS expression .)
    NE              reduce using rule 50 (expression -> MINUS expression .)
    AND             reduce using rule 50 (expression -> MINUS expression .)
    OR              reduce using rule 50 (expression -> MINUS expression .)
    LBRACE          reduce using rule 50 (expression -> MINUS expression .)
    IDENTIFIER      reduce using rule 50 (expression -> MINUS expression .)
    IF              reduce using rule 50 (expression -> MINUS expression .)
    WHILE           reduce using rule 50 (expression -> MINUS expression .)
    DO              reduce using rule 50 (expression -> MINUS expression .)
    WRITE           reduce using rule 50 (expression -> MINUS expression .)
    READ            reduce using rule 50 (expression -> MINUS expression .)
    SEMICOLON       reduce using rule 50 (expression -> MINUS expression .)
    RPAREN          reduce using rule 50 (expression -> MINUS expression .)
    COMMA           reduce using rule 50 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 60 ]
  ! MINUS           [ shift and go to state 61 ]
  ! TIMES           [ shift and go to state 62 ]
  ! DIVIDE          [ shift and go to state 63 ]
  ! EQ              [ shift and go to state 64 ]
  ! LT              [ shift and go to state 65 ]
  ! GT              [ shift and go to state 66 ]
  ! LE              [ shift and go to state 67 ]
  ! GE              [ shift and go to state 68 ]
  ! NE              [ shift and go to state 69 ]
  ! AND             [ shift and go to state 70 ]
  ! OR              [ shift and go to state 71 ]


state 73

    (51) expression -> NOT expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . LE expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . NE expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    PLUS            reduce using rule 51 (expression -> NOT expression .)
    MINUS           reduce using rule 51 (expression -> NOT expression .)
    TIMES           reduce using rule 51 (expression -> NOT expression .)
    DIVIDE          reduce using rule 51 (expression -> NOT expression .)
    EQ              reduce using rule 51 (expression -> NOT expression .)
    LT              reduce using rule 51 (expression -> NOT expression .)
    GT              reduce using rule 51 (expression -> NOT expression .)
    LE              reduce using rule 51 (expression -> NOT expression .)
    GE              reduce using rule 51 (expression -> NOT expression .)
    NE              reduce using rule 51 (expression -> NOT expression .)
    AND             reduce using rule 51 (expression -> NOT expression .)
    OR              reduce using rule 51 (expression -> NOT expression .)
    LBRACE          reduce using rule 51 (expression -> NOT expression .)
    IDENTIFIER      reduce using rule 51 (expression -> NOT expression .)
    IF              reduce using rule 51 (expression -> NOT expression .)
    WHILE           reduce using rule 51 (expression -> NOT expression .)
    DO              reduce using rule 51 (expression -> NOT expression .)
    WRITE           reduce using rule 51 (expression -> NOT expression .)
    READ            reduce using rule 51 (expression -> NOT expression .)
    SEMICOLON       reduce using rule 51 (expression -> NOT expression .)
    RPAREN          reduce using rule 51 (expression -> NOT expression .)
    COMMA           reduce using rule 51 (expression -> NOT expression .)

  ! PLUS            [ shift and go to state 60 ]
  ! MINUS           [ shift and go to state 61 ]
  ! TIMES           [ shift and go to state 62 ]
  ! DIVIDE          [ shift and go to state 63 ]
  ! EQ              [ shift and go to state 64 ]
  ! LT              [ shift and go to state 65 ]
  ! GT              [ shift and go to state 66 ]
  ! LE              [ shift and go to state 67 ]
  ! GE              [ shift and go to state 68 ]
  ! NE              [ shift and go to state 69 ]
  ! AND             [ shift and go to state 70 ]
  ! OR              [ shift and go to state 71 ]


state 74

    (52) expression -> LPAREN expression . RPAREN
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . LE expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . NE expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    RPAREN          shift and go to state 100
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 63
    EQ              shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    NE              shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71


state 75

    (33) while_statement -> WHILE expression LBRACE . statements RBRACE
    (13) statements -> . statements statement
    (14) statements -> . statement
    (15) statements -> . empty
    (16) statement -> . assignment
    (17) statement -> . if_statement
    (18) statement -> . while_statement
    (19) statement -> . do_while_statement
    (20) statement -> . write_statement
    (21) statement -> . read_statement
    (22) statement -> . block
    (23) statement -> . increment
    (24) statement -> . decrement
    (57) empty -> .
    (25) assignment -> . IDENTIFIER ASSIGN expression SEMICOLON
    (28) if_statement -> . IF expression block else_part FI
    (29) if_statement -> . IF expression statement else_part FI
    (33) while_statement -> . WHILE expression LBRACE statements RBRACE
    (34) do_while_statement -> . DO LBRACE statements RBRACE WHILE LPAREN expression RPAREN SEMICOLON
    (35) write_statement -> . WRITE expression SEMICOLON
    (36) read_statement -> . READ IDENTIFIER SEMICOLON
    (37) block -> . LBRACE statements RBRACE
    (26) increment -> . IDENTIFIER PLUS PLUS SEMICOLON
    (27) decrement -> . IDENTIFIER MINUS MINUS SEMICOLON

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
    RBRACE          reduce using rule 57 (empty -> .)
    IDENTIFIER      shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    DO              shift and go to state 28
    WRITE           shift and go to state 29
    READ            shift and go to state 30
    LBRACE          shift and go to state 11

  ! IDENTIFIER      [ reduce using rule 57 (empty -> .) ]
  ! IF              [ reduce using rule 57 (empty -> .) ]
  ! WHILE           [ reduce using rule 57 (empty -> .) ]
  ! DO              [ reduce using rule 57 (empty -> .) ]
  ! WRITE           [ reduce using rule 57 (empty -> .) ]
  ! READ            [ reduce using rule 57 (empty -> .) ]
  ! LBRACE          [ reduce using rule 57 (empty -> .) ]

    statements                     shift and go to state 101
    statement                      shift and go to state 14
    empty                          shift and go to state 15
    assignment                     shift and go to state 16
    if_statement                   shift and go to state 17
    while_statement                shift and go to state 18
    do_while_statement             shift and go to state 19
    write_statement                shift and go to state 20
    read_statement                 shift and go to state 21
    block                          shift and go to state 22
    increment                      shift and go to state 23
    decrement                      shift and go to state 24

state 76

    (34) do_while_statement -> DO LBRACE statements . RBRACE WHILE LPAREN expression RPAREN SEMICOLON
    (13) statements -> statements . statement
    (16) statement -> . assignment
    (17) statement -> . if_statement
    (18) statement -> . while_statement
    (19) statement -> . do_while_statement
    (20) statement -> . write_statement
    (21) statement -> . read_statement
    (22) statement -> . block
    (23) statement -> . increment
    (24) statement -> . decrement
    (25) assignment -> . IDENTIFIER ASSIGN expression SEMICOLON
    (28) if_statement -> . IF expression block else_part FI
    (29) if_statement -> . IF expression statement else_part FI
    (33) while_statement -> . WHILE expression LBRACE statements RBRACE
    (34) do_while_statement -> . DO LBRACE statements RBRACE WHILE LPAREN expression RPAREN SEMICOLON
    (35) write_statement -> . WRITE expression SEMICOLON
    (36) read_statement -> . READ IDENTIFIER SEMICOLON
    (37) block -> . LBRACE statements RBRACE
    (26) increment -> . IDENTIFIER PLUS PLUS SEMICOLON
    (27) decrement -> . IDENTIFIER MINUS MINUS SEMICOLON

    RBRACE          shift and go to state 102
    IDENTIFIER      shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    DO              shift and go to state 28
    WRITE           shift and go to state 29
    READ            shift and go to state 30
    LBRACE          shift and go to state 11

    statement                      shift and go to state 35
    assignment                     shift and go to state 16
    if_statement                   shift and go to state 17
    while_statement                shift and go to state 18
    do_while_statement             shift and go to state 19
    write_statement                shift and go to state 20
    read_statement                 shift and go to state 21
    block                          shift and go to state 22
    increment                      shift and go to state 23
    decrement                      shift and go to state 24

state 77

    (35) write_statement -> WRITE expression SEMICOLON .

    RBRACE          reduce using rule 35 (write_statement -> WRITE expression SEMICOLON .)
    IDENTIFIER      reduce using rule 35 (write_statement -> WRITE expression SEMICOLON .)
    IF              reduce using rule 35 (write_statement -> WRITE expression SEMICOLON .)
    WHILE           reduce using rule 35 (write_statement -> WRITE expression SEMICOLON .)
    DO              reduce using rule 35 (write_statement -> WRITE expression SEMICOLON .)
    WRITE           reduce using rule 35 (write_statement -> WRITE expression SEMICOLON .)
    READ            reduce using rule 35 (write_statement -> WRITE expression SEMICOLON .)
    LBRACE          reduce using rule 35 (write_statement -> WRITE expression SEMICOLON .)
    ELSE            reduce using rule 35 (write_statement -> WRITE expression SEMICOLON .)
    FI              reduce using rule 35 (write_statement -> WRITE expression SEMICOLON .)


state 78

    (36) read_statement -> READ IDENTIFIER SEMICOLON .

    RBRACE          reduce using rule 36 (read_statement -> READ IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 36 (read_statement -> READ IDENTIFIER SEMICOLON .)
    IF              reduce using rule 36 (read_statement -> READ IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 36 (read_statement -> READ IDENTIFIER SEMICOLON .)
    DO              reduce using rule 36 (read_statement -> READ IDENTIFIER SEMICOLON .)
    WRITE           reduce using rule 36 (read_statement -> READ IDENTIFIER SEMICOLON .)
    READ            reduce using rule 36 (read_statement -> READ IDENTIFIER SEMICOLON .)
    LBRACE          reduce using rule 36 (read_statement -> READ IDENTIFIER SEMICOLON .)
    ELSE            reduce using rule 36 (read_statement -> READ IDENTIFIER SEMICOLON .)
    FI              reduce using rule 36 (read_statement -> READ IDENTIFIER SEMICOLON .)


state 79

    (6) var_list -> var_list COMMA IDENTIFIER .
    (7) var_list -> var_list COMMA IDENTIFIER . ASSIGN expression

    SEMICOLON       reduce using rule 6 (var_list -> var_list COMMA IDENTIFIER .)
    COMMA           reduce using rule 6 (var_list -> var_list COMMA IDENTIFIER .)
    ASSIGN          shift and go to state 103


state 80

    (9) var_list -> IDENTIFIER ASSIGN expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . LE expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . NE expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    SEMICOLON       reduce using rule 9 (var_list -> IDENTIFIER ASSIGN expression .)
    COMMA           reduce using rule 9 (var_list -> IDENTIFIER ASSIGN expression .)
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 63
    EQ              shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    NE              shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71


state 81

    (25) assignment -> IDENTIFIER ASSIGN expression SEMICOLON .

    RBRACE          reduce using rule 25 (assignment -> IDENTIFIER ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 25 (assignment -> IDENTIFIER ASSIGN expression SEMICOLON .)
    IF              reduce using rule 25 (assignment -> IDENTIFIER ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 25 (assignment -> IDENTIFIER ASSIGN expression SEMICOLON .)
    DO              reduce using rule 25 (assignment -> IDENTIFIER ASSIGN expression SEMICOLON .)
    WRITE           reduce using rule 25 (assignment -> IDENTIFIER ASSIGN expression SEMICOLON .)
    READ            reduce using rule 25 (assignment -> IDENTIFIER ASSIGN expression SEMICOLON .)
    LBRACE          reduce using rule 25 (assignment -> IDENTIFIER ASSIGN expression SEMICOLON .)
    ELSE            reduce using rule 25 (assignment -> IDENTIFIER ASSIGN expression SEMICOLON .)
    FI              reduce using rule 25 (assignment -> IDENTIFIER ASSIGN expression SEMICOLON .)


state 82

    (26) increment -> IDENTIFIER PLUS PLUS SEMICOLON .

    RBRACE          reduce using rule 26 (increment -> IDENTIFIER PLUS PLUS SEMICOLON .)
    IDENTIFIER      reduce using rule 26 (increment -> IDENTIFIER PLUS PLUS SEMICOLON .)
    IF              reduce using rule 26 (increment -> IDENTIFIER PLUS PLUS SEMICOLON .)
    WHILE           reduce using rule 26 (increment -> IDENTIFIER PLUS PLUS SEMICOLON .)
    DO              reduce using rule 26 (increment -> IDENTIFIER PLUS PLUS SEMICOLON .)
    WRITE           reduce using rule 26 (increment -> IDENTIFIER PLUS PLUS SEMICOLON .)
    READ            reduce using rule 26 (increment -> IDENTIFIER PLUS PLUS SEMICOLON .)
    LBRACE          reduce using rule 26 (increment -> IDENTIFIER PLUS PLUS SEMICOLON .)
    ELSE            reduce using rule 26 (increment -> IDENTIFIER PLUS PLUS SEMICOLON .)
    FI              reduce using rule 26 (increment -> IDENTIFIER PLUS PLUS SEMICOLON .)


state 83

    (27) decrement -> IDENTIFIER MINUS MINUS SEMICOLON .

    RBRACE          reduce using rule 27 (decrement -> IDENTIFIER MINUS MINUS SEMICOLON .)
    IDENTIFIER      reduce using rule 27 (decrement -> IDENTIFIER MINUS MINUS SEMICOLON .)
    IF              reduce using rule 27 (decrement -> IDENTIFIER MINUS MINUS SEMICOLON .)
    WHILE           reduce using rule 27 (decrement -> IDENTIFIER MINUS MINUS SEMICOLON .)
    DO              reduce using rule 27 (decrement -> IDENTIFIER MINUS MINUS SEMICOLON .)
    WRITE           reduce using rule 27 (decrement -> IDENTIFIER MINUS MINUS SEMICOLON .)
    READ            reduce using rule 27 (decrement -> IDENTIFIER MINUS MINUS SEMICOLON .)
    LBRACE          reduce using rule 27 (decrement -> IDENTIFIER MINUS MINUS SEMICOLON .)
    ELSE            reduce using rule 27 (decrement -> IDENTIFIER MINUS MINUS SEMICOLON .)
    FI              reduce using rule 27 (decrement -> IDENTIFIER MINUS MINUS SEMICOLON .)


state 84

    (28) if_statement -> IF expression block else_part . FI

    FI              shift and go to state 104


state 85

    (30) else_part -> ELSE . block
    (31) else_part -> ELSE . statement
    (37) block -> . LBRACE statements RBRACE
    (16) statement -> . assignment
    (17) statement -> . if_statement
    (18) statement -> . while_statement
    (19) statement -> . do_while_statement
    (20) statement -> . write_statement
    (21) statement -> . read_statement
    (22) statement -> . block
    (23) statement -> . increment
    (24) statement -> . decrement
    (25) assignment -> . IDENTIFIER ASSIGN expression SEMICOLON
    (28) if_statement -> . IF expression block else_part FI
    (29) if_statement -> . IF expression statement else_part FI
    (33) while_statement -> . WHILE expression LBRACE statements RBRACE
    (34) do_while_statement -> . DO LBRACE statements RBRACE WHILE LPAREN expression RPAREN SEMICOLON
    (35) write_statement -> . WRITE expression SEMICOLON
    (36) read_statement -> . READ IDENTIFIER SEMICOLON
    (26) increment -> . IDENTIFIER PLUS PLUS SEMICOLON
    (27) decrement -> . IDENTIFIER MINUS MINUS SEMICOLON

    LBRACE          shift and go to state 11
    IDENTIFIER      shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    DO              shift and go to state 28
    WRITE           shift and go to state 29
    READ            shift and go to state 30

    block                          shift and go to state 105
    statement                      shift and go to state 106
    assignment                     shift and go to state 16
    if_statement                   shift and go to state 17
    while_statement                shift and go to state 18
    do_while_statement             shift and go to state 19
    write_statement                shift and go to state 20
    read_statement                 shift and go to state 21
    increment                      shift and go to state 23
    decrement                      shift and go to state 24

state 86

    (32) else_part -> empty .

    FI              reduce using rule 32 (else_part -> empty .)


state 87

    (29) if_statement -> IF expression statement else_part . FI

    FI              shift and go to state 107


state 88

    (38) expression -> expression PLUS expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . LE expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . NE expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    LBRACE          reduce using rule 38 (expression -> expression PLUS expression .)
    IDENTIFIER      reduce using rule 38 (expression -> expression PLUS expression .)
    IF              reduce using rule 38 (expression -> expression PLUS expression .)
    WHILE           reduce using rule 38 (expression -> expression PLUS expression .)
    DO              reduce using rule 38 (expression -> expression PLUS expression .)
    WRITE           reduce using rule 38 (expression -> expression PLUS expression .)
    READ            reduce using rule 38 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 38 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 38 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 38 (expression -> expression PLUS expression .)
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 63
    EQ              shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    NE              shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71

  ! PLUS            [ reduce using rule 38 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 38 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 38 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 38 (expression -> expression PLUS expression .) ]
  ! EQ              [ reduce using rule 38 (expression -> expression PLUS expression .) ]
  ! LT              [ reduce using rule 38 (expression -> expression PLUS expression .) ]
  ! GT              [ reduce using rule 38 (expression -> expression PLUS expression .) ]
  ! LE              [ reduce using rule 38 (expression -> expression PLUS expression .) ]
  ! GE              [ reduce using rule 38 (expression -> expression PLUS expression .) ]
  ! NE              [ reduce using rule 38 (expression -> expression PLUS expression .) ]
  ! AND             [ reduce using rule 38 (expression -> expression PLUS expression .) ]
  ! OR              [ reduce using rule 38 (expression -> expression PLUS expression .) ]


state 89

    (39) expression -> expression MINUS expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . LE expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . NE expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    LBRACE          reduce using rule 39 (expression -> expression MINUS expression .)
    IDENTIFIER      reduce using rule 39 (expression -> expression MINUS expression .)
    IF              reduce using rule 39 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 39 (expression -> expression MINUS expression .)
    DO              reduce using rule 39 (expression -> expression MINUS expression .)
    WRITE           reduce using rule 39 (expression -> expression MINUS expression .)
    READ            reduce using rule 39 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 39 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 39 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 39 (expression -> expression MINUS expression .)
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 63
    EQ              shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    NE              shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71

  ! PLUS            [ reduce using rule 39 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 39 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 39 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 39 (expression -> expression MINUS expression .) ]
  ! EQ              [ reduce using rule 39 (expression -> expression MINUS expression .) ]
  ! LT              [ reduce using rule 39 (expression -> expression MINUS expression .) ]
  ! GT              [ reduce using rule 39 (expression -> expression MINUS expression .) ]
  ! LE              [ reduce using rule 39 (expression -> expression MINUS expression .) ]
  ! GE              [ reduce using rule 39 (expression -> expression MINUS expression .) ]
  ! NE              [ reduce using rule 39 (expression -> expression MINUS expression .) ]
  ! AND             [ reduce using rule 39 (expression -> expression MINUS expression .) ]
  ! OR              [ reduce using rule 39 (expression -> expression MINUS expression .) ]


state 90

    (40) expression -> expression TIMES expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . LE expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . NE expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    LBRACE          reduce using rule 40 (expression -> expression TIMES expression .)
    IDENTIFIER      reduce using rule 40 (expression -> expression TIMES expression .)
    IF              reduce using rule 40 (expression -> expression TIMES expression .)
    WHILE           reduce using rule 40 (expression -> expression TIMES expression .)
    DO              reduce using rule 40 (expression -> expression TIMES expression .)
    WRITE           reduce using rule 40 (expression -> expression TIMES expression .)
    READ            reduce using rule 40 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 40 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 40 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 40 (expression -> expression TIMES expression .)
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 63
    EQ              shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    NE              shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71

  ! PLUS            [ reduce using rule 40 (expression -> expression TIMES expression .) ]
  ! MINUS           [ reduce using rule 40 (expression -> expression TIMES expression .) ]
  ! TIMES           [ reduce using rule 40 (expression -> expression TIMES expression .) ]
  ! DIVIDE          [ reduce using rule 40 (expression -> expression TIMES expression .) ]
  ! EQ              [ reduce using rule 40 (expression -> expression TIMES expression .) ]
  ! LT              [ reduce using rule 40 (expression -> expression TIMES expression .) ]
  ! GT              [ reduce using rule 40 (expression -> expression TIMES expression .) ]
  ! LE              [ reduce using rule 40 (expression -> expression TIMES expression .) ]
  ! GE              [ reduce using rule 40 (expression -> expression TIMES expression .) ]
  ! NE              [ reduce using rule 40 (expression -> expression TIMES expression .) ]
  ! AND             [ reduce using rule 40 (expression -> expression TIMES expression .) ]
  ! OR              [ reduce using rule 40 (expression -> expression TIMES expression .) ]


state 91

    (41) expression -> expression DIVIDE expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . LE expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . NE expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    LBRACE          reduce using rule 41 (expression -> expression DIVIDE expression .)
    IDENTIFIER      reduce using rule 41 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 41 (expression -> expression DIVIDE expression .)
    WHILE           reduce using rule 41 (expression -> expression DIVIDE expression .)
    DO              reduce using rule 41 (expression -> expression DIVIDE expression .)
    WRITE           reduce using rule 41 (expression -> expression DIVIDE expression .)
    READ            reduce using rule 41 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 41 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 41 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 41 (expression -> expression DIVIDE expression .)
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 63
    EQ              shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    NE              shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71

  ! PLUS            [ reduce using rule 41 (expression -> expression DIVIDE expression .) ]
  ! MINUS           [ reduce using rule 41 (expression -> expression DIVIDE expression .) ]
  ! TIMES           [ reduce using rule 41 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 41 (expression -> expression DIVIDE expression .) ]
  ! EQ              [ reduce using rule 41 (expression -> expression DIVIDE expression .) ]
  ! LT              [ reduce using rule 41 (expression -> expression DIVIDE expression .) ]
  ! GT              [ reduce using rule 41 (expression -> expression DIVIDE expression .) ]
  ! LE              [ reduce using rule 41 (expression -> expression DIVIDE expression .) ]
  ! GE              [ reduce using rule 41 (expression -> expression DIVIDE expression .) ]
  ! NE              [ reduce using rule 41 (expression -> expression DIVIDE expression .) ]
  ! AND             [ reduce using rule 41 (expression -> expression DIVIDE expression .) ]
  ! OR              [ reduce using rule 41 (expression -> expression DIVIDE expression .) ]


state 92

    (42) expression -> expression EQ expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . LE expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . NE expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    PLUS            reduce using rule 42 (expression -> expression EQ expression .)
    MINUS           reduce using rule 42 (expression -> expression EQ expression .)
    TIMES           reduce using rule 42 (expression -> expression EQ expression .)
    DIVIDE          reduce using rule 42 (expression -> expression EQ expression .)
    EQ              reduce using rule 42 (expression -> expression EQ expression .)
    NE              reduce using rule 42 (expression -> expression EQ expression .)
    AND             reduce using rule 42 (expression -> expression EQ expression .)
    OR              reduce using rule 42 (expression -> expression EQ expression .)
    LBRACE          reduce using rule 42 (expression -> expression EQ expression .)
    IDENTIFIER      reduce using rule 42 (expression -> expression EQ expression .)
    IF              reduce using rule 42 (expression -> expression EQ expression .)
    WHILE           reduce using rule 42 (expression -> expression EQ expression .)
    DO              reduce using rule 42 (expression -> expression EQ expression .)
    WRITE           reduce using rule 42 (expression -> expression EQ expression .)
    READ            reduce using rule 42 (expression -> expression EQ expression .)
    SEMICOLON       reduce using rule 42 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 42 (expression -> expression EQ expression .)
    COMMA           reduce using rule 42 (expression -> expression EQ expression .)
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68

  ! LT              [ reduce using rule 42 (expression -> expression EQ expression .) ]
  ! GT              [ reduce using rule 42 (expression -> expression EQ expression .) ]
  ! LE              [ reduce using rule 42 (expression -> expression EQ expression .) ]
  ! GE              [ reduce using rule 42 (expression -> expression EQ expression .) ]
  ! PLUS            [ shift and go to state 60 ]
  ! MINUS           [ shift and go to state 61 ]
  ! TIMES           [ shift and go to state 62 ]
  ! DIVIDE          [ shift and go to state 63 ]
  ! EQ              [ shift and go to state 64 ]
  ! NE              [ shift and go to state 69 ]
  ! AND             [ shift and go to state 70 ]
  ! OR              [ shift and go to state 71 ]


state 93

    (43) expression -> expression LT expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . LE expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . NE expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    PLUS            reduce using rule 43 (expression -> expression LT expression .)
    MINUS           reduce using rule 43 (expression -> expression LT expression .)
    TIMES           reduce using rule 43 (expression -> expression LT expression .)
    DIVIDE          reduce using rule 43 (expression -> expression LT expression .)
    EQ              reduce using rule 43 (expression -> expression LT expression .)
    LT              reduce using rule 43 (expression -> expression LT expression .)
    GT              reduce using rule 43 (expression -> expression LT expression .)
    LE              reduce using rule 43 (expression -> expression LT expression .)
    GE              reduce using rule 43 (expression -> expression LT expression .)
    NE              reduce using rule 43 (expression -> expression LT expression .)
    AND             reduce using rule 43 (expression -> expression LT expression .)
    OR              reduce using rule 43 (expression -> expression LT expression .)
    LBRACE          reduce using rule 43 (expression -> expression LT expression .)
    IDENTIFIER      reduce using rule 43 (expression -> expression LT expression .)
    IF              reduce using rule 43 (expression -> expression LT expression .)
    WHILE           reduce using rule 43 (expression -> expression LT expression .)
    DO              reduce using rule 43 (expression -> expression LT expression .)
    WRITE           reduce using rule 43 (expression -> expression LT expression .)
    READ            reduce using rule 43 (expression -> expression LT expression .)
    SEMICOLON       reduce using rule 43 (expression -> expression LT expression .)
    RPAREN          reduce using rule 43 (expression -> expression LT expression .)
    COMMA           reduce using rule 43 (expression -> expression LT expression .)

  ! PLUS            [ shift and go to state 60 ]
  ! MINUS           [ shift and go to state 61 ]
  ! TIMES           [ shift and go to state 62 ]
  ! DIVIDE          [ shift and go to state 63 ]
  ! EQ              [ shift and go to state 64 ]
  ! LT              [ shift and go to state 65 ]
  ! GT              [ shift and go to state 66 ]
  ! LE              [ shift and go to state 67 ]
  ! GE              [ shift and go to state 68 ]
  ! NE              [ shift and go to state 69 ]
  ! AND             [ shift and go to state 70 ]
  ! OR              [ shift and go to state 71 ]


state 94

    (44) expression -> expression GT expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . LE expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . NE expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    PLUS            reduce using rule 44 (expression -> expression GT expression .)
    MINUS           reduce using rule 44 (expression -> expression GT expression .)
    TIMES           reduce using rule 44 (expression -> expression GT expression .)
    DIVIDE          reduce using rule 44 (expression -> expression GT expression .)
    EQ              reduce using rule 44 (expression -> expression GT expression .)
    LT              reduce using rule 44 (expression -> expression GT expression .)
    GT              reduce using rule 44 (expression -> expression GT expression .)
    LE              reduce using rule 44 (expression -> expression GT expression .)
    GE              reduce using rule 44 (expression -> expression GT expression .)
    NE              reduce using rule 44 (expression -> expression GT expression .)
    AND             reduce using rule 44 (expression -> expression GT expression .)
    OR              reduce using rule 44 (expression -> expression GT expression .)
    LBRACE          reduce using rule 44 (expression -> expression GT expression .)
    IDENTIFIER      reduce using rule 44 (expression -> expression GT expression .)
    IF              reduce using rule 44 (expression -> expression GT expression .)
    WHILE           reduce using rule 44 (expression -> expression GT expression .)
    DO              reduce using rule 44 (expression -> expression GT expression .)
    WRITE           reduce using rule 44 (expression -> expression GT expression .)
    READ            reduce using rule 44 (expression -> expression GT expression .)
    SEMICOLON       reduce using rule 44 (expression -> expression GT expression .)
    RPAREN          reduce using rule 44 (expression -> expression GT expression .)
    COMMA           reduce using rule 44 (expression -> expression GT expression .)

  ! PLUS            [ shift and go to state 60 ]
  ! MINUS           [ shift and go to state 61 ]
  ! TIMES           [ shift and go to state 62 ]
  ! DIVIDE          [ shift and go to state 63 ]
  ! EQ              [ shift and go to state 64 ]
  ! LT              [ shift and go to state 65 ]
  ! GT              [ shift and go to state 66 ]
  ! LE              [ shift and go to state 67 ]
  ! GE              [ shift and go to state 68 ]
  ! NE              [ shift and go to state 69 ]
  ! AND             [ shift and go to state 70 ]
  ! OR              [ shift and go to state 71 ]


state 95

    (45) expression -> expression LE expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . LE expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . NE expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    PLUS            reduce using rule 45 (expression -> expression LE expression .)
    MINUS           reduce using rule 45 (expression -> expression LE expression .)
    TIMES           reduce using rule 45 (expression -> expression LE expression .)
    DIVIDE          reduce using rule 45 (expression -> expression LE expression .)
    EQ              reduce using rule 45 (expression -> expression LE expression .)
    LT              reduce using rule 45 (expression -> expression LE expression .)
    GT              reduce using rule 45 (expression -> expression LE expression .)
    LE              reduce using rule 45 (expression -> expression LE expression .)
    GE              reduce using rule 45 (expression -> expression LE expression .)
    NE              reduce using rule 45 (expression -> expression LE expression .)
    AND             reduce using rule 45 (expression -> expression LE expression .)
    OR              reduce using rule 45 (expression -> expression LE expression .)
    LBRACE          reduce using rule 45 (expression -> expression LE expression .)
    IDENTIFIER      reduce using rule 45 (expression -> expression LE expression .)
    IF              reduce using rule 45 (expression -> expression LE expression .)
    WHILE           reduce using rule 45 (expression -> expression LE expression .)
    DO              reduce using rule 45 (expression -> expression LE expression .)
    WRITE           reduce using rule 45 (expression -> expression LE expression .)
    READ            reduce using rule 45 (expression -> expression LE expression .)
    SEMICOLON       reduce using rule 45 (expression -> expression LE expression .)
    RPAREN          reduce using rule 45 (expression -> expression LE expression .)
    COMMA           reduce using rule 45 (expression -> expression LE expression .)

  ! PLUS            [ shift and go to state 60 ]
  ! MINUS           [ shift and go to state 61 ]
  ! TIMES           [ shift and go to state 62 ]
  ! DIVIDE          [ shift and go to state 63 ]
  ! EQ              [ shift and go to state 64 ]
  ! LT              [ shift and go to state 65 ]
  ! GT              [ shift and go to state 66 ]
  ! LE              [ shift and go to state 67 ]
  ! GE              [ shift and go to state 68 ]
  ! NE              [ shift and go to state 69 ]
  ! AND             [ shift and go to state 70 ]
  ! OR              [ shift and go to state 71 ]


state 96

    (46) expression -> expression GE expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . LE expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . NE expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    PLUS            reduce using rule 46 (expression -> expression GE expression .)
    MINUS           reduce using rule 46 (expression -> expression GE expression .)
    TIMES           reduce using rule 46 (expression -> expression GE expression .)
    DIVIDE          reduce using rule 46 (expression -> expression GE expression .)
    EQ              reduce using rule 46 (expression -> expression GE expression .)
    LT              reduce using rule 46 (expression -> expression GE expression .)
    GT              reduce using rule 46 (expression -> expression GE expression .)
    LE              reduce using rule 46 (expression -> expression GE expression .)
    GE              reduce using rule 46 (expression -> expression GE expression .)
    NE              reduce using rule 46 (expression -> expression GE expression .)
    AND             reduce using rule 46 (expression -> expression GE expression .)
    OR              reduce using rule 46 (expression -> expression GE expression .)
    LBRACE          reduce using rule 46 (expression -> expression GE expression .)
    IDENTIFIER      reduce using rule 46 (expression -> expression GE expression .)
    IF              reduce using rule 46 (expression -> expression GE expression .)
    WHILE           reduce using rule 46 (expression -> expression GE expression .)
    DO              reduce using rule 46 (expression -> expression GE expression .)
    WRITE           reduce using rule 46 (expression -> expression GE expression .)
    READ            reduce using rule 46 (expression -> expression GE expression .)
    SEMICOLON       reduce using rule 46 (expression -> expression GE expression .)
    RPAREN          reduce using rule 46 (expression -> expression GE expression .)
    COMMA           reduce using rule 46 (expression -> expression GE expression .)

  ! PLUS            [ shift and go to state 60 ]
  ! MINUS           [ shift and go to state 61 ]
  ! TIMES           [ shift and go to state 62 ]
  ! DIVIDE          [ shift and go to state 63 ]
  ! EQ              [ shift and go to state 64 ]
  ! LT              [ shift and go to state 65 ]
  ! GT              [ shift and go to state 66 ]
  ! LE              [ shift and go to state 67 ]
  ! GE              [ shift and go to state 68 ]
  ! NE              [ shift and go to state 69 ]
  ! AND             [ shift and go to state 70 ]
  ! OR              [ shift and go to state 71 ]


state 97

    (47) expression -> expression NE expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . LE expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . NE expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    PLUS            reduce using rule 47 (expression -> expression NE expression .)
    MINUS           reduce using rule 47 (expression -> expression NE expression .)
    TIMES           reduce using rule 47 (expression -> expression NE expression .)
    DIVIDE          reduce using rule 47 (expression -> expression NE expression .)
    EQ              reduce using rule 47 (expression -> expression NE expression .)
    NE              reduce using rule 47 (expression -> expression NE expression .)
    AND             reduce using rule 47 (expression -> expression NE expression .)
    OR              reduce using rule 47 (expression -> expression NE expression .)
    LBRACE          reduce using rule 47 (expression -> expression NE expression .)
    IDENTIFIER      reduce using rule 47 (expression -> expression NE expression .)
    IF              reduce using rule 47 (expression -> expression NE expression .)
    WHILE           reduce using rule 47 (expression -> expression NE expression .)
    DO              reduce using rule 47 (expression -> expression NE expression .)
    WRITE           reduce using rule 47 (expression -> expression NE expression .)
    READ            reduce using rule 47 (expression -> expression NE expression .)
    SEMICOLON       reduce using rule 47 (expression -> expression NE expression .)
    RPAREN          reduce using rule 47 (expression -> expression NE expression .)
    COMMA           reduce using rule 47 (expression -> expression NE expression .)
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68

  ! LT              [ reduce using rule 47 (expression -> expression NE expression .) ]
  ! GT              [ reduce using rule 47 (expression -> expression NE expression .) ]
  ! LE              [ reduce using rule 47 (expression -> expression NE expression .) ]
  ! GE              [ reduce using rule 47 (expression -> expression NE expression .) ]
  ! PLUS            [ shift and go to state 60 ]
  ! MINUS           [ shift and go to state 61 ]
  ! TIMES           [ shift and go to state 62 ]
  ! DIVIDE          [ shift and go to state 63 ]
  ! EQ              [ shift and go to state 64 ]
  ! NE              [ shift and go to state 69 ]
  ! AND             [ shift and go to state 70 ]
  ! OR              [ shift and go to state 71 ]


state 98

    (48) expression -> expression AND expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . LE expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . NE expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    PLUS            reduce using rule 48 (expression -> expression AND expression .)
    MINUS           reduce using rule 48 (expression -> expression AND expression .)
    TIMES           reduce using rule 48 (expression -> expression AND expression .)
    DIVIDE          reduce using rule 48 (expression -> expression AND expression .)
    AND             reduce using rule 48 (expression -> expression AND expression .)
    OR              reduce using rule 48 (expression -> expression AND expression .)
    LBRACE          reduce using rule 48 (expression -> expression AND expression .)
    IDENTIFIER      reduce using rule 48 (expression -> expression AND expression .)
    IF              reduce using rule 48 (expression -> expression AND expression .)
    WHILE           reduce using rule 48 (expression -> expression AND expression .)
    DO              reduce using rule 48 (expression -> expression AND expression .)
    WRITE           reduce using rule 48 (expression -> expression AND expression .)
    READ            reduce using rule 48 (expression -> expression AND expression .)
    SEMICOLON       reduce using rule 48 (expression -> expression AND expression .)
    RPAREN          reduce using rule 48 (expression -> expression AND expression .)
    COMMA           reduce using rule 48 (expression -> expression AND expression .)
    EQ              shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    NE              shift and go to state 69

  ! EQ              [ reduce using rule 48 (expression -> expression AND expression .) ]
  ! LT              [ reduce using rule 48 (expression -> expression AND expression .) ]
  ! GT              [ reduce using rule 48 (expression -> expression AND expression .) ]
  ! LE              [ reduce using rule 48 (expression -> expression AND expression .) ]
  ! GE              [ reduce using rule 48 (expression -> expression AND expression .) ]
  ! NE              [ reduce using rule 48 (expression -> expression AND expression .) ]
  ! PLUS            [ shift and go to state 60 ]
  ! MINUS           [ shift and go to state 61 ]
  ! TIMES           [ shift and go to state 62 ]
  ! DIVIDE          [ shift and go to state 63 ]
  ! AND             [ shift and go to state 70 ]
  ! OR              [ shift and go to state 71 ]


state 99

    (49) expression -> expression OR expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . LE expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . NE expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    PLUS            reduce using rule 49 (expression -> expression OR expression .)
    MINUS           reduce using rule 49 (expression -> expression OR expression .)
    TIMES           reduce using rule 49 (expression -> expression OR expression .)
    DIVIDE          reduce using rule 49 (expression -> expression OR expression .)
    OR              reduce using rule 49 (expression -> expression OR expression .)
    LBRACE          reduce using rule 49 (expression -> expression OR expression .)
    IDENTIFIER      reduce using rule 49 (expression -> expression OR expression .)
    IF              reduce using rule 49 (expression -> expression OR expression .)
    WHILE           reduce using rule 49 (expression -> expression OR expression .)
    DO              reduce using rule 49 (expression -> expression OR expression .)
    WRITE           reduce using rule 49 (expression -> expression OR expression .)
    READ            reduce using rule 49 (expression -> expression OR expression .)
    SEMICOLON       reduce using rule 49 (expression -> expression OR expression .)
    RPAREN          reduce using rule 49 (expression -> expression OR expression .)
    COMMA           reduce using rule 49 (expression -> expression OR expression .)
    EQ              shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    NE              shift and go to state 69
    AND             shift and go to state 70

  ! EQ              [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! LT              [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! GT              [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! LE              [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! GE              [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! NE              [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! PLUS            [ shift and go to state 60 ]
  ! MINUS           [ shift and go to state 61 ]
  ! TIMES           [ shift and go to state 62 ]
  ! DIVIDE          [ shift and go to state 63 ]
  ! OR              [ shift and go to state 71 ]


state 100

    (52) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    LE              reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    GE              reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    NE              reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    LBRACE          reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    IDENTIFIER      reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    IF              reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    DO              reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    WRITE           reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    READ            reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 52 (expression -> LPAREN expression RPAREN .)


state 101

    (33) while_statement -> WHILE expression LBRACE statements . RBRACE
    (13) statements -> statements . statement
    (16) statement -> . assignment
    (17) statement -> . if_statement
    (18) statement -> . while_statement
    (19) statement -> . do_while_statement
    (20) statement -> . write_statement
    (21) statement -> . read_statement
    (22) statement -> . block
    (23) statement -> . increment
    (24) statement -> . decrement
    (25) assignment -> . IDENTIFIER ASSIGN expression SEMICOLON
    (28) if_statement -> . IF expression block else_part FI
    (29) if_statement -> . IF expression statement else_part FI
    (33) while_statement -> . WHILE expression LBRACE statements RBRACE
    (34) do_while_statement -> . DO LBRACE statements RBRACE WHILE LPAREN expression RPAREN SEMICOLON
    (35) write_statement -> . WRITE expression SEMICOLON
    (36) read_statement -> . READ IDENTIFIER SEMICOLON
    (37) block -> . LBRACE statements RBRACE
    (26) increment -> . IDENTIFIER PLUS PLUS SEMICOLON
    (27) decrement -> . IDENTIFIER MINUS MINUS SEMICOLON

    RBRACE          shift and go to state 108
    IDENTIFIER      shift and go to state 25
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    DO              shift and go to state 28
    WRITE           shift and go to state 29
    READ            shift and go to state 30
    LBRACE          shift and go to state 11

    statement                      shift and go to state 35
    assignment                     shift and go to state 16
    if_statement                   shift and go to state 17
    while_statement                shift and go to state 18
    do_while_statement             shift and go to state 19
    write_statement                shift and go to state 20
    read_statement                 shift and go to state 21
    block                          shift and go to state 22
    increment                      shift and go to state 23
    decrement                      shift and go to state 24

state 102

    (34) do_while_statement -> DO LBRACE statements RBRACE . WHILE LPAREN expression RPAREN SEMICOLON

    WHILE           shift and go to state 109


state 103

    (7) var_list -> var_list COMMA IDENTIFIER ASSIGN . expression
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression LE expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression NE expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . NOT expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . IDENTIFIER
    (55) expression -> . TRUE
    (56) expression -> . FALSE

    MINUS           shift and go to state 40
    NOT             shift and go to state 41
    LPAREN          shift and go to state 42
    NUMBER          shift and go to state 43
    IDENTIFIER      shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    expression                     shift and go to state 110

state 104

    (28) if_statement -> IF expression block else_part FI .

    RBRACE          reduce using rule 28 (if_statement -> IF expression block else_part FI .)
    IDENTIFIER      reduce using rule 28 (if_statement -> IF expression block else_part FI .)
    IF              reduce using rule 28 (if_statement -> IF expression block else_part FI .)
    WHILE           reduce using rule 28 (if_statement -> IF expression block else_part FI .)
    DO              reduce using rule 28 (if_statement -> IF expression block else_part FI .)
    WRITE           reduce using rule 28 (if_statement -> IF expression block else_part FI .)
    READ            reduce using rule 28 (if_statement -> IF expression block else_part FI .)
    LBRACE          reduce using rule 28 (if_statement -> IF expression block else_part FI .)
    ELSE            reduce using rule 28 (if_statement -> IF expression block else_part FI .)
    FI              reduce using rule 28 (if_statement -> IF expression block else_part FI .)


state 105

    (30) else_part -> ELSE block .
    (22) statement -> block .

  ! reduce/reduce conflict for FI resolved using rule 22 (statement -> block .)
    FI              reduce using rule 22 (statement -> block .)

  ! FI              [ reduce using rule 30 (else_part -> ELSE block .) ]


state 106

    (31) else_part -> ELSE statement .

    FI              reduce using rule 31 (else_part -> ELSE statement .)


state 107

    (29) if_statement -> IF expression statement else_part FI .

    RBRACE          reduce using rule 29 (if_statement -> IF expression statement else_part FI .)
    IDENTIFIER      reduce using rule 29 (if_statement -> IF expression statement else_part FI .)
    IF              reduce using rule 29 (if_statement -> IF expression statement else_part FI .)
    WHILE           reduce using rule 29 (if_statement -> IF expression statement else_part FI .)
    DO              reduce using rule 29 (if_statement -> IF expression statement else_part FI .)
    WRITE           reduce using rule 29 (if_statement -> IF expression statement else_part FI .)
    READ            reduce using rule 29 (if_statement -> IF expression statement else_part FI .)
    LBRACE          reduce using rule 29 (if_statement -> IF expression statement else_part FI .)
    ELSE            reduce using rule 29 (if_statement -> IF expression statement else_part FI .)
    FI              reduce using rule 29 (if_statement -> IF expression statement else_part FI .)


state 108

    (33) while_statement -> WHILE expression LBRACE statements RBRACE .

    RBRACE          reduce using rule 33 (while_statement -> WHILE expression LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 33 (while_statement -> WHILE expression LBRACE statements RBRACE .)
    IF              reduce using rule 33 (while_statement -> WHILE expression LBRACE statements RBRACE .)
    WHILE           reduce using rule 33 (while_statement -> WHILE expression LBRACE statements RBRACE .)
    DO              reduce using rule 33 (while_statement -> WHILE expression LBRACE statements RBRACE .)
    WRITE           reduce using rule 33 (while_statement -> WHILE expression LBRACE statements RBRACE .)
    READ            reduce using rule 33 (while_statement -> WHILE expression LBRACE statements RBRACE .)
    LBRACE          reduce using rule 33 (while_statement -> WHILE expression LBRACE statements RBRACE .)
    ELSE            reduce using rule 33 (while_statement -> WHILE expression LBRACE statements RBRACE .)
    FI              reduce using rule 33 (while_statement -> WHILE expression LBRACE statements RBRACE .)


state 109

    (34) do_while_statement -> DO LBRACE statements RBRACE WHILE . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 111


state 110

    (7) var_list -> var_list COMMA IDENTIFIER ASSIGN expression .
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . LE expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . NE expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    SEMICOLON       reduce using rule 7 (var_list -> var_list COMMA IDENTIFIER ASSIGN expression .)
    COMMA           reduce using rule 7 (var_list -> var_list COMMA IDENTIFIER ASSIGN expression .)
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 63
    EQ              shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    NE              shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71


state 111

    (34) do_while_statement -> DO LBRACE statements RBRACE WHILE LPAREN . expression RPAREN SEMICOLON
    (38) expression -> . expression PLUS expression
    (39) expression -> . expression MINUS expression
    (40) expression -> . expression TIMES expression
    (41) expression -> . expression DIVIDE expression
    (42) expression -> . expression EQ expression
    (43) expression -> . expression LT expression
    (44) expression -> . expression GT expression
    (45) expression -> . expression LE expression
    (46) expression -> . expression GE expression
    (47) expression -> . expression NE expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . MINUS expression
    (51) expression -> . NOT expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . IDENTIFIER
    (55) expression -> . TRUE
    (56) expression -> . FALSE

    MINUS           shift and go to state 40
    NOT             shift and go to state 41
    LPAREN          shift and go to state 42
    NUMBER          shift and go to state 43
    IDENTIFIER      shift and go to state 44
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    expression                     shift and go to state 112

state 112

    (34) do_while_statement -> DO LBRACE statements RBRACE WHILE LPAREN expression . RPAREN SEMICOLON
    (38) expression -> expression . PLUS expression
    (39) expression -> expression . MINUS expression
    (40) expression -> expression . TIMES expression
    (41) expression -> expression . DIVIDE expression
    (42) expression -> expression . EQ expression
    (43) expression -> expression . LT expression
    (44) expression -> expression . GT expression
    (45) expression -> expression . LE expression
    (46) expression -> expression . GE expression
    (47) expression -> expression . NE expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    RPAREN          shift and go to state 113
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 63
    EQ              shift and go to state 64
    LT              shift and go to state 65
    GT              shift and go to state 66
    LE              shift and go to state 67
    GE              shift and go to state 68
    NE              shift and go to state 69
    AND             shift and go to state 70
    OR              shift and go to state 71


state 113

    (34) do_while_statement -> DO LBRACE statements RBRACE WHILE LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 114


state 114

    (34) do_while_statement -> DO LBRACE statements RBRACE WHILE LPAREN expression RPAREN SEMICOLON .

    RBRACE          reduce using rule 34 (do_while_statement -> DO LBRACE statements RBRACE WHILE LPAREN expression RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 34 (do_while_statement -> DO LBRACE statements RBRACE WHILE LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 34 (do_while_statement -> DO LBRACE statements RBRACE WHILE LPAREN expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 34 (do_while_statement -> DO LBRACE statements RBRACE WHILE LPAREN expression RPAREN SEMICOLON .)
    DO              reduce using rule 34 (do_while_statement -> DO LBRACE statements RBRACE WHILE LPAREN expression RPAREN SEMICOLON .)
    WRITE           reduce using rule 34 (do_while_statement -> DO LBRACE statements RBRACE WHILE LPAREN expression RPAREN SEMICOLON .)
    READ            reduce using rule 34 (do_while_statement -> DO LBRACE statements RBRACE WHILE LPAREN expression RPAREN SEMICOLON .)
    LBRACE          reduce using rule 34 (do_while_statement -> DO LBRACE statements RBRACE WHILE LPAREN expression RPAREN SEMICOLON .)
    ELSE            reduce using rule 34 (do_while_statement -> DO LBRACE statements RBRACE WHILE LPAREN expression RPAREN SEMICOLON .)
    FI              reduce using rule 34 (do_while_statement -> DO LBRACE statements RBRACE WHILE LPAREN expression RPAREN SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INT in state 3 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 3 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 3 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 4 resolved as shift
WARNING: shift/reduce conflict for IF in state 4 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 4 resolved as shift
WARNING: shift/reduce conflict for DO in state 4 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 4 resolved as shift
WARNING: shift/reduce conflict for READ in state 4 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 4 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 11 resolved as shift
WARNING: shift/reduce conflict for IF in state 11 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 11 resolved as shift
WARNING: shift/reduce conflict for DO in state 11 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 11 resolved as shift
WARNING: shift/reduce conflict for READ in state 11 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 11 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 48 resolved as shift
WARNING: shift/reduce conflict for IF in state 48 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 48 resolved as shift
WARNING: shift/reduce conflict for DO in state 48 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 48 resolved as shift
WARNING: shift/reduce conflict for READ in state 48 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 48 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 58 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 75 resolved as shift
WARNING: shift/reduce conflict for IF in state 75 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 75 resolved as shift
WARNING: shift/reduce conflict for DO in state 75 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 75 resolved as shift
WARNING: shift/reduce conflict for READ in state 75 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 75 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 88 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 88 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 88 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 88 resolved as shift
WARNING: shift/reduce conflict for EQ in state 88 resolved as shift
WARNING: shift/reduce conflict for LT in state 88 resolved as shift
WARNING: shift/reduce conflict for GT in state 88 resolved as shift
WARNING: shift/reduce conflict for LE in state 88 resolved as shift
WARNING: shift/reduce conflict for GE in state 88 resolved as shift
WARNING: shift/reduce conflict for NE in state 88 resolved as shift
WARNING: shift/reduce conflict for AND in state 88 resolved as shift
WARNING: shift/reduce conflict for OR in state 88 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 89 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 89 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 89 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 89 resolved as shift
WARNING: shift/reduce conflict for EQ in state 89 resolved as shift
WARNING: shift/reduce conflict for LT in state 89 resolved as shift
WARNING: shift/reduce conflict for GT in state 89 resolved as shift
WARNING: shift/reduce conflict for LE in state 89 resolved as shift
WARNING: shift/reduce conflict for GE in state 89 resolved as shift
WARNING: shift/reduce conflict for NE in state 89 resolved as shift
WARNING: shift/reduce conflict for AND in state 89 resolved as shift
WARNING: shift/reduce conflict for OR in state 89 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 90 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 90 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 90 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 90 resolved as shift
WARNING: shift/reduce conflict for EQ in state 90 resolved as shift
WARNING: shift/reduce conflict for LT in state 90 resolved as shift
WARNING: shift/reduce conflict for GT in state 90 resolved as shift
WARNING: shift/reduce conflict for LE in state 90 resolved as shift
WARNING: shift/reduce conflict for GE in state 90 resolved as shift
WARNING: shift/reduce conflict for NE in state 90 resolved as shift
WARNING: shift/reduce conflict for AND in state 90 resolved as shift
WARNING: shift/reduce conflict for OR in state 90 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 91 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 91 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 91 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 91 resolved as shift
WARNING: shift/reduce conflict for EQ in state 91 resolved as shift
WARNING: shift/reduce conflict for LT in state 91 resolved as shift
WARNING: shift/reduce conflict for GT in state 91 resolved as shift
WARNING: shift/reduce conflict for LE in state 91 resolved as shift
WARNING: shift/reduce conflict for GE in state 91 resolved as shift
WARNING: shift/reduce conflict for NE in state 91 resolved as shift
WARNING: shift/reduce conflict for AND in state 91 resolved as shift
WARNING: shift/reduce conflict for OR in state 91 resolved as shift
WARNING: reduce/reduce conflict in state 58 resolved using rule (statement -> block)
WARNING: rejected rule (empty -> <empty>) in state 58
WARNING: reduce/reduce conflict in state 105 resolved using rule (statement -> block)
WARNING: rejected rule (else_part -> ELSE block) in state 105
WARNING: Rule (else_part -> ELSE block) is never reduced

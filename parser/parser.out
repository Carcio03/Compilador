Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    THEN
    UNTIL

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM LBRACE declarations statements RBRACE
Rule 2     declarations -> declarations declaration
Rule 3     declarations -> declaration
Rule 4     declarations -> empty
Rule 5     declaration -> type var_list SEMICOLON
Rule 6     var_list -> var_list COMMA IDENTIFIER
Rule 7     var_list -> var_list COMMA IDENTIFIER ASSIGN expression
Rule 8     var_list -> IDENTIFIER
Rule 9     var_list -> IDENTIFIER ASSIGN expression
Rule 10    type -> INT
Rule 11    type -> FLOAT
Rule 12    type -> BOOL
Rule 13    statements -> statements statement
Rule 14    statements -> statement
Rule 15    statements -> empty
Rule 16    statement -> assignment
Rule 17    statement -> if_statement
Rule 18    statement -> while_statement
Rule 19    statement -> do_while_statement
Rule 20    statement -> write_statement
Rule 21    statement -> read_statement
Rule 22    statement -> block
Rule 23    assignment -> IDENTIFIER ASSIGN expression SEMICOLON
Rule 24    if_statement -> IF expression block else_part FI
Rule 25    if_statement -> IF expression statement else_part FI
Rule 26    else_part -> ELSE block
Rule 27    else_part -> ELSE statement
Rule 28    else_part -> empty
Rule 29    while_statement -> WHILE expression LBRACE statements RBRACE
Rule 30    do_while_statement -> DO LBRACE statements RBRACE WHILE LPAREN expression RPAREN SEMICOLON
Rule 31    write_statement -> WRITE expression SEMICOLON
Rule 32    read_statement -> READ IDENTIFIER SEMICOLON
Rule 33    block -> LBRACE statements RBRACE
Rule 34    expression -> expression PLUS expression
Rule 35    expression -> expression MINUS expression
Rule 36    expression -> expression TIMES expression
Rule 37    expression -> expression DIVIDE expression
Rule 38    expression -> expression POWER expression
Rule 39    expression -> expression EQ expression
Rule 40    expression -> expression LT expression
Rule 41    expression -> expression GT expression
Rule 42    expression -> expression LE expression
Rule 43    expression -> expression GE expression
Rule 44    expression -> expression NE expression
Rule 45    expression -> expression AND expression
Rule 46    expression -> expression OR expression
Rule 47    expression -> MINUS expression
Rule 48    expression -> NOT expression
Rule 49    expression -> LPAREN expression RPAREN
Rule 50    expression -> NUMBER
Rule 51    expression -> IDENTIFIER
Rule 52    expression -> TRUE
Rule 53    expression -> FALSE
Rule 54    empty -> <empty>

Terminals, with rules where they appear

AND                  : 45
ASSIGN               : 7 9 23
BOOL                 : 12
COMMA                : 6 7
DIVIDE               : 37
DO                   : 30
ELSE                 : 26 27
EQ                   : 39
FALSE                : 53
FI                   : 24 25
FLOAT                : 11
GE                   : 43
GT                   : 41
IDENTIFIER           : 6 7 8 9 23 32 51
IF                   : 24 25
INT                  : 10
LBRACE               : 1 29 30 33
LE                   : 42
LPAREN               : 30 49
LT                   : 40
MINUS                : 35 47
NE                   : 44
NOT                  : 48
NUMBER               : 50
OR                   : 46
PLUS                 : 34
POWER                : 38
PROGRAM              : 1
RBRACE               : 1 29 30 33
READ                 : 32
RPAREN               : 30 49
SEMICOLON            : 5 23 30 31 32
THEN                 : 
TIMES                : 36
TRUE                 : 52
UNTIL                : 
WHILE                : 29 30
WRITE                : 31
error                : 

Nonterminals, with rules where they appear

assignment           : 16
block                : 22 24 26
declaration          : 2 3
declarations         : 1 2
do_while_statement   : 19
else_part            : 24 25
empty                : 4 15 28
expression           : 7 9 23 24 25 29 30 31 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 48 49
if_statement         : 17
program              : 0
read_statement       : 21
statement            : 13 14 25 27
statements           : 1 13 29 30 33
type                 : 5
var_list             : 5 6 7
while_statement      : 18
write_statement      : 20

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM LBRACE declarations statements RBRACE

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . LBRACE declarations statements RBRACE

    LBRACE          shift and go to state 3


state 3

    (1) program -> PROGRAM LBRACE . declarations statements RBRACE
    (2) declarations -> . declarations declaration
    (3) declarations -> . declaration
    (4) declarations -> . empty
    (5) declaration -> . type var_list SEMICOLON
    (54) empty -> .
    (10) type -> . INT
    (11) type -> . FLOAT
    (12) type -> . BOOL

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    IDENTIFIER      reduce using rule 54 (empty -> .)
    IF              reduce using rule 54 (empty -> .)
    WHILE           reduce using rule 54 (empty -> .)
    DO              reduce using rule 54 (empty -> .)
    WRITE           reduce using rule 54 (empty -> .)
    READ            reduce using rule 54 (empty -> .)
    LBRACE          reduce using rule 54 (empty -> .)
    RBRACE          reduce using rule 54 (empty -> .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    BOOL            shift and go to state 10

  ! INT             [ reduce using rule 54 (empty -> .) ]
  ! FLOAT           [ reduce using rule 54 (empty -> .) ]
  ! BOOL            [ reduce using rule 54 (empty -> .) ]

    declarations                   shift and go to state 4
    declaration                    shift and go to state 5
    empty                          shift and go to state 6
    type                           shift and go to state 7

state 4

    (1) program -> PROGRAM LBRACE declarations . statements RBRACE
    (2) declarations -> declarations . declaration
    (13) statements -> . statements statement
    (14) statements -> . statement
    (15) statements -> . empty
    (5) declaration -> . type var_list SEMICOLON
    (16) statement -> . assignment
    (17) statement -> . if_statement
    (18) statement -> . while_statement
    (19) statement -> . do_while_statement
    (20) statement -> . write_statement
    (21) statement -> . read_statement
    (22) statement -> . block
    (54) empty -> .
    (10) type -> . INT
    (11) type -> . FLOAT
    (12) type -> . BOOL
    (23) assignment -> . IDENTIFIER ASSIGN expression SEMICOLON
    (24) if_statement -> . IF expression block else_part FI
    (25) if_statement -> . IF expression statement else_part FI
    (29) while_statement -> . WHILE expression LBRACE statements RBRACE
    (30) do_while_statement -> . DO LBRACE statements RBRACE WHILE LPAREN expression RPAREN SEMICOLON
    (31) write_statement -> . WRITE expression SEMICOLON
    (32) read_statement -> . READ IDENTIFIER SEMICOLON
    (33) block -> . LBRACE statements RBRACE

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
    RBRACE          reduce using rule 54 (empty -> .)
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    BOOL            shift and go to state 10
    IDENTIFIER      shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    DO              shift and go to state 26
    WRITE           shift and go to state 27
    READ            shift and go to state 28
    LBRACE          shift and go to state 11

  ! IDENTIFIER      [ reduce using rule 54 (empty -> .) ]
  ! IF              [ reduce using rule 54 (empty -> .) ]
  ! WHILE           [ reduce using rule 54 (empty -> .) ]
  ! DO              [ reduce using rule 54 (empty -> .) ]
  ! WRITE           [ reduce using rule 54 (empty -> .) ]
  ! READ            [ reduce using rule 54 (empty -> .) ]
  ! LBRACE          [ reduce using rule 54 (empty -> .) ]

    statements                     shift and go to state 12
    declaration                    shift and go to state 13
    statement                      shift and go to state 14
    empty                          shift and go to state 15
    type                           shift and go to state 7
    assignment                     shift and go to state 16
    if_statement                   shift and go to state 17
    while_statement                shift and go to state 18
    do_while_statement             shift and go to state 19
    write_statement                shift and go to state 20
    read_statement                 shift and go to state 21
    block                          shift and go to state 22

state 5

    (3) declarations -> declaration .

    INT             reduce using rule 3 (declarations -> declaration .)
    FLOAT           reduce using rule 3 (declarations -> declaration .)
    BOOL            reduce using rule 3 (declarations -> declaration .)
    IDENTIFIER      reduce using rule 3 (declarations -> declaration .)
    IF              reduce using rule 3 (declarations -> declaration .)
    WHILE           reduce using rule 3 (declarations -> declaration .)
    DO              reduce using rule 3 (declarations -> declaration .)
    WRITE           reduce using rule 3 (declarations -> declaration .)
    READ            reduce using rule 3 (declarations -> declaration .)
    LBRACE          reduce using rule 3 (declarations -> declaration .)
    RBRACE          reduce using rule 3 (declarations -> declaration .)


state 6

    (4) declarations -> empty .

    INT             reduce using rule 4 (declarations -> empty .)
    FLOAT           reduce using rule 4 (declarations -> empty .)
    BOOL            reduce using rule 4 (declarations -> empty .)
    IDENTIFIER      reduce using rule 4 (declarations -> empty .)
    IF              reduce using rule 4 (declarations -> empty .)
    WHILE           reduce using rule 4 (declarations -> empty .)
    DO              reduce using rule 4 (declarations -> empty .)
    WRITE           reduce using rule 4 (declarations -> empty .)
    READ            reduce using rule 4 (declarations -> empty .)
    LBRACE          reduce using rule 4 (declarations -> empty .)
    RBRACE          reduce using rule 4 (declarations -> empty .)


state 7

    (5) declaration -> type . var_list SEMICOLON
    (6) var_list -> . var_list COMMA IDENTIFIER
    (7) var_list -> . var_list COMMA IDENTIFIER ASSIGN expression
    (8) var_list -> . IDENTIFIER
    (9) var_list -> . IDENTIFIER ASSIGN expression

    IDENTIFIER      shift and go to state 30

    var_list                       shift and go to state 29

state 8

    (10) type -> INT .

    IDENTIFIER      reduce using rule 10 (type -> INT .)


state 9

    (11) type -> FLOAT .

    IDENTIFIER      reduce using rule 11 (type -> FLOAT .)


state 10

    (12) type -> BOOL .

    IDENTIFIER      reduce using rule 12 (type -> BOOL .)


state 11

    (33) block -> LBRACE . statements RBRACE
    (13) statements -> . statements statement
    (14) statements -> . statement
    (15) statements -> . empty
    (16) statement -> . assignment
    (17) statement -> . if_statement
    (18) statement -> . while_statement
    (19) statement -> . do_while_statement
    (20) statement -> . write_statement
    (21) statement -> . read_statement
    (22) statement -> . block
    (54) empty -> .
    (23) assignment -> . IDENTIFIER ASSIGN expression SEMICOLON
    (24) if_statement -> . IF expression block else_part FI
    (25) if_statement -> . IF expression statement else_part FI
    (29) while_statement -> . WHILE expression LBRACE statements RBRACE
    (30) do_while_statement -> . DO LBRACE statements RBRACE WHILE LPAREN expression RPAREN SEMICOLON
    (31) write_statement -> . WRITE expression SEMICOLON
    (32) read_statement -> . READ IDENTIFIER SEMICOLON
    (33) block -> . LBRACE statements RBRACE

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
    RBRACE          reduce using rule 54 (empty -> .)
    IDENTIFIER      shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    DO              shift and go to state 26
    WRITE           shift and go to state 27
    READ            shift and go to state 28
    LBRACE          shift and go to state 11

  ! IDENTIFIER      [ reduce using rule 54 (empty -> .) ]
  ! IF              [ reduce using rule 54 (empty -> .) ]
  ! WHILE           [ reduce using rule 54 (empty -> .) ]
  ! DO              [ reduce using rule 54 (empty -> .) ]
  ! WRITE           [ reduce using rule 54 (empty -> .) ]
  ! READ            [ reduce using rule 54 (empty -> .) ]
  ! LBRACE          [ reduce using rule 54 (empty -> .) ]

    statements                     shift and go to state 31
    statement                      shift and go to state 14
    empty                          shift and go to state 15
    assignment                     shift and go to state 16
    if_statement                   shift and go to state 17
    while_statement                shift and go to state 18
    do_while_statement             shift and go to state 19
    write_statement                shift and go to state 20
    read_statement                 shift and go to state 21
    block                          shift and go to state 22

state 12

    (1) program -> PROGRAM LBRACE declarations statements . RBRACE
    (13) statements -> statements . statement
    (16) statement -> . assignment
    (17) statement -> . if_statement
    (18) statement -> . while_statement
    (19) statement -> . do_while_statement
    (20) statement -> . write_statement
    (21) statement -> . read_statement
    (22) statement -> . block
    (23) assignment -> . IDENTIFIER ASSIGN expression SEMICOLON
    (24) if_statement -> . IF expression block else_part FI
    (25) if_statement -> . IF expression statement else_part FI
    (29) while_statement -> . WHILE expression LBRACE statements RBRACE
    (30) do_while_statement -> . DO LBRACE statements RBRACE WHILE LPAREN expression RPAREN SEMICOLON
    (31) write_statement -> . WRITE expression SEMICOLON
    (32) read_statement -> . READ IDENTIFIER SEMICOLON
    (33) block -> . LBRACE statements RBRACE

    RBRACE          shift and go to state 32
    IDENTIFIER      shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    DO              shift and go to state 26
    WRITE           shift and go to state 27
    READ            shift and go to state 28
    LBRACE          shift and go to state 11

    statement                      shift and go to state 33
    assignment                     shift and go to state 16
    if_statement                   shift and go to state 17
    while_statement                shift and go to state 18
    do_while_statement             shift and go to state 19
    write_statement                shift and go to state 20
    read_statement                 shift and go to state 21
    block                          shift and go to state 22

state 13

    (2) declarations -> declarations declaration .

    INT             reduce using rule 2 (declarations -> declarations declaration .)
    FLOAT           reduce using rule 2 (declarations -> declarations declaration .)
    BOOL            reduce using rule 2 (declarations -> declarations declaration .)
    IDENTIFIER      reduce using rule 2 (declarations -> declarations declaration .)
    IF              reduce using rule 2 (declarations -> declarations declaration .)
    WHILE           reduce using rule 2 (declarations -> declarations declaration .)
    DO              reduce using rule 2 (declarations -> declarations declaration .)
    WRITE           reduce using rule 2 (declarations -> declarations declaration .)
    READ            reduce using rule 2 (declarations -> declarations declaration .)
    LBRACE          reduce using rule 2 (declarations -> declarations declaration .)
    RBRACE          reduce using rule 2 (declarations -> declarations declaration .)


state 14

    (14) statements -> statement .

    RBRACE          reduce using rule 14 (statements -> statement .)
    IDENTIFIER      reduce using rule 14 (statements -> statement .)
    IF              reduce using rule 14 (statements -> statement .)
    WHILE           reduce using rule 14 (statements -> statement .)
    DO              reduce using rule 14 (statements -> statement .)
    WRITE           reduce using rule 14 (statements -> statement .)
    READ            reduce using rule 14 (statements -> statement .)
    LBRACE          reduce using rule 14 (statements -> statement .)


state 15

    (15) statements -> empty .

    RBRACE          reduce using rule 15 (statements -> empty .)
    IDENTIFIER      reduce using rule 15 (statements -> empty .)
    IF              reduce using rule 15 (statements -> empty .)
    WHILE           reduce using rule 15 (statements -> empty .)
    DO              reduce using rule 15 (statements -> empty .)
    WRITE           reduce using rule 15 (statements -> empty .)
    READ            reduce using rule 15 (statements -> empty .)
    LBRACE          reduce using rule 15 (statements -> empty .)


state 16

    (16) statement -> assignment .

    RBRACE          reduce using rule 16 (statement -> assignment .)
    IDENTIFIER      reduce using rule 16 (statement -> assignment .)
    IF              reduce using rule 16 (statement -> assignment .)
    WHILE           reduce using rule 16 (statement -> assignment .)
    DO              reduce using rule 16 (statement -> assignment .)
    WRITE           reduce using rule 16 (statement -> assignment .)
    READ            reduce using rule 16 (statement -> assignment .)
    LBRACE          reduce using rule 16 (statement -> assignment .)
    ELSE            reduce using rule 16 (statement -> assignment .)
    FI              reduce using rule 16 (statement -> assignment .)


state 17

    (17) statement -> if_statement .

    RBRACE          reduce using rule 17 (statement -> if_statement .)
    IDENTIFIER      reduce using rule 17 (statement -> if_statement .)
    IF              reduce using rule 17 (statement -> if_statement .)
    WHILE           reduce using rule 17 (statement -> if_statement .)
    DO              reduce using rule 17 (statement -> if_statement .)
    WRITE           reduce using rule 17 (statement -> if_statement .)
    READ            reduce using rule 17 (statement -> if_statement .)
    LBRACE          reduce using rule 17 (statement -> if_statement .)
    ELSE            reduce using rule 17 (statement -> if_statement .)
    FI              reduce using rule 17 (statement -> if_statement .)


state 18

    (18) statement -> while_statement .

    RBRACE          reduce using rule 18 (statement -> while_statement .)
    IDENTIFIER      reduce using rule 18 (statement -> while_statement .)
    IF              reduce using rule 18 (statement -> while_statement .)
    WHILE           reduce using rule 18 (statement -> while_statement .)
    DO              reduce using rule 18 (statement -> while_statement .)
    WRITE           reduce using rule 18 (statement -> while_statement .)
    READ            reduce using rule 18 (statement -> while_statement .)
    LBRACE          reduce using rule 18 (statement -> while_statement .)
    ELSE            reduce using rule 18 (statement -> while_statement .)
    FI              reduce using rule 18 (statement -> while_statement .)


state 19

    (19) statement -> do_while_statement .

    RBRACE          reduce using rule 19 (statement -> do_while_statement .)
    IDENTIFIER      reduce using rule 19 (statement -> do_while_statement .)
    IF              reduce using rule 19 (statement -> do_while_statement .)
    WHILE           reduce using rule 19 (statement -> do_while_statement .)
    DO              reduce using rule 19 (statement -> do_while_statement .)
    WRITE           reduce using rule 19 (statement -> do_while_statement .)
    READ            reduce using rule 19 (statement -> do_while_statement .)
    LBRACE          reduce using rule 19 (statement -> do_while_statement .)
    ELSE            reduce using rule 19 (statement -> do_while_statement .)
    FI              reduce using rule 19 (statement -> do_while_statement .)


state 20

    (20) statement -> write_statement .

    RBRACE          reduce using rule 20 (statement -> write_statement .)
    IDENTIFIER      reduce using rule 20 (statement -> write_statement .)
    IF              reduce using rule 20 (statement -> write_statement .)
    WHILE           reduce using rule 20 (statement -> write_statement .)
    DO              reduce using rule 20 (statement -> write_statement .)
    WRITE           reduce using rule 20 (statement -> write_statement .)
    READ            reduce using rule 20 (statement -> write_statement .)
    LBRACE          reduce using rule 20 (statement -> write_statement .)
    ELSE            reduce using rule 20 (statement -> write_statement .)
    FI              reduce using rule 20 (statement -> write_statement .)


state 21

    (21) statement -> read_statement .

    RBRACE          reduce using rule 21 (statement -> read_statement .)
    IDENTIFIER      reduce using rule 21 (statement -> read_statement .)
    IF              reduce using rule 21 (statement -> read_statement .)
    WHILE           reduce using rule 21 (statement -> read_statement .)
    DO              reduce using rule 21 (statement -> read_statement .)
    WRITE           reduce using rule 21 (statement -> read_statement .)
    READ            reduce using rule 21 (statement -> read_statement .)
    LBRACE          reduce using rule 21 (statement -> read_statement .)
    ELSE            reduce using rule 21 (statement -> read_statement .)
    FI              reduce using rule 21 (statement -> read_statement .)


state 22

    (22) statement -> block .

    RBRACE          reduce using rule 22 (statement -> block .)
    IDENTIFIER      reduce using rule 22 (statement -> block .)
    IF              reduce using rule 22 (statement -> block .)
    WHILE           reduce using rule 22 (statement -> block .)
    DO              reduce using rule 22 (statement -> block .)
    WRITE           reduce using rule 22 (statement -> block .)
    READ            reduce using rule 22 (statement -> block .)
    LBRACE          reduce using rule 22 (statement -> block .)


state 23

    (23) assignment -> IDENTIFIER . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 34


state 24

    (24) if_statement -> IF . expression block else_part FI
    (25) if_statement -> IF . expression statement else_part FI
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression POWER expression
    (39) expression -> . expression EQ expression
    (40) expression -> . expression LT expression
    (41) expression -> . expression GT expression
    (42) expression -> . expression LE expression
    (43) expression -> . expression GE expression
    (44) expression -> . expression NE expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression OR expression
    (47) expression -> . MINUS expression
    (48) expression -> . NOT expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . IDENTIFIER
    (52) expression -> . TRUE
    (53) expression -> . FALSE

    MINUS           shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    IDENTIFIER      shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    expression                     shift and go to state 35

state 25

    (29) while_statement -> WHILE . expression LBRACE statements RBRACE
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression POWER expression
    (39) expression -> . expression EQ expression
    (40) expression -> . expression LT expression
    (41) expression -> . expression GT expression
    (42) expression -> . expression LE expression
    (43) expression -> . expression GE expression
    (44) expression -> . expression NE expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression OR expression
    (47) expression -> . MINUS expression
    (48) expression -> . NOT expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . IDENTIFIER
    (52) expression -> . TRUE
    (53) expression -> . FALSE

    MINUS           shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    IDENTIFIER      shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    expression                     shift and go to state 43

state 26

    (30) do_while_statement -> DO . LBRACE statements RBRACE WHILE LPAREN expression RPAREN SEMICOLON

    LBRACE          shift and go to state 44


state 27

    (31) write_statement -> WRITE . expression SEMICOLON
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression POWER expression
    (39) expression -> . expression EQ expression
    (40) expression -> . expression LT expression
    (41) expression -> . expression GT expression
    (42) expression -> . expression LE expression
    (43) expression -> . expression GE expression
    (44) expression -> . expression NE expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression OR expression
    (47) expression -> . MINUS expression
    (48) expression -> . NOT expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . IDENTIFIER
    (52) expression -> . TRUE
    (53) expression -> . FALSE

    MINUS           shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    IDENTIFIER      shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    expression                     shift and go to state 45

state 28

    (32) read_statement -> READ . IDENTIFIER SEMICOLON

    IDENTIFIER      shift and go to state 46


state 29

    (5) declaration -> type var_list . SEMICOLON
    (6) var_list -> var_list . COMMA IDENTIFIER
    (7) var_list -> var_list . COMMA IDENTIFIER ASSIGN expression

    SEMICOLON       shift and go to state 47
    COMMA           shift and go to state 48


state 30

    (8) var_list -> IDENTIFIER .
    (9) var_list -> IDENTIFIER . ASSIGN expression

    SEMICOLON       reduce using rule 8 (var_list -> IDENTIFIER .)
    COMMA           reduce using rule 8 (var_list -> IDENTIFIER .)
    ASSIGN          shift and go to state 49


state 31

    (33) block -> LBRACE statements . RBRACE
    (13) statements -> statements . statement
    (16) statement -> . assignment
    (17) statement -> . if_statement
    (18) statement -> . while_statement
    (19) statement -> . do_while_statement
    (20) statement -> . write_statement
    (21) statement -> . read_statement
    (22) statement -> . block
    (23) assignment -> . IDENTIFIER ASSIGN expression SEMICOLON
    (24) if_statement -> . IF expression block else_part FI
    (25) if_statement -> . IF expression statement else_part FI
    (29) while_statement -> . WHILE expression LBRACE statements RBRACE
    (30) do_while_statement -> . DO LBRACE statements RBRACE WHILE LPAREN expression RPAREN SEMICOLON
    (31) write_statement -> . WRITE expression SEMICOLON
    (32) read_statement -> . READ IDENTIFIER SEMICOLON
    (33) block -> . LBRACE statements RBRACE

    RBRACE          shift and go to state 50
    IDENTIFIER      shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    DO              shift and go to state 26
    WRITE           shift and go to state 27
    READ            shift and go to state 28
    LBRACE          shift and go to state 11

    statement                      shift and go to state 33
    assignment                     shift and go to state 16
    if_statement                   shift and go to state 17
    while_statement                shift and go to state 18
    do_while_statement             shift and go to state 19
    write_statement                shift and go to state 20
    read_statement                 shift and go to state 21
    block                          shift and go to state 22

state 32

    (1) program -> PROGRAM LBRACE declarations statements RBRACE .

    $end            reduce using rule 1 (program -> PROGRAM LBRACE declarations statements RBRACE .)


state 33

    (13) statements -> statements statement .

    RBRACE          reduce using rule 13 (statements -> statements statement .)
    IDENTIFIER      reduce using rule 13 (statements -> statements statement .)
    IF              reduce using rule 13 (statements -> statements statement .)
    WHILE           reduce using rule 13 (statements -> statements statement .)
    DO              reduce using rule 13 (statements -> statements statement .)
    WRITE           reduce using rule 13 (statements -> statements statement .)
    READ            reduce using rule 13 (statements -> statements statement .)
    LBRACE          reduce using rule 13 (statements -> statements statement .)


state 34

    (23) assignment -> IDENTIFIER ASSIGN . expression SEMICOLON
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression POWER expression
    (39) expression -> . expression EQ expression
    (40) expression -> . expression LT expression
    (41) expression -> . expression GT expression
    (42) expression -> . expression LE expression
    (43) expression -> . expression GE expression
    (44) expression -> . expression NE expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression OR expression
    (47) expression -> . MINUS expression
    (48) expression -> . NOT expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . IDENTIFIER
    (52) expression -> . TRUE
    (53) expression -> . FALSE

    MINUS           shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    IDENTIFIER      shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    expression                     shift and go to state 51

state 35

    (24) if_statement -> IF expression . block else_part FI
    (25) if_statement -> IF expression . statement else_part FI
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . POWER expression
    (39) expression -> expression . EQ expression
    (40) expression -> expression . LT expression
    (41) expression -> expression . GT expression
    (42) expression -> expression . LE expression
    (43) expression -> expression . GE expression
    (44) expression -> expression . NE expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . OR expression
    (33) block -> . LBRACE statements RBRACE
    (16) statement -> . assignment
    (17) statement -> . if_statement
    (18) statement -> . while_statement
    (19) statement -> . do_while_statement
    (20) statement -> . write_statement
    (21) statement -> . read_statement
    (22) statement -> . block
    (23) assignment -> . IDENTIFIER ASSIGN expression SEMICOLON
    (24) if_statement -> . IF expression block else_part FI
    (25) if_statement -> . IF expression statement else_part FI
    (29) while_statement -> . WHILE expression LBRACE statements RBRACE
    (30) do_while_statement -> . DO LBRACE statements RBRACE WHILE LPAREN expression RPAREN SEMICOLON
    (31) write_statement -> . WRITE expression SEMICOLON
    (32) read_statement -> . READ IDENTIFIER SEMICOLON

    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    POWER           shift and go to state 58
    EQ              shift and go to state 59
    LT              shift and go to state 60
    GT              shift and go to state 61
    LE              shift and go to state 62
    GE              shift and go to state 63
    NE              shift and go to state 64
    AND             shift and go to state 65
    OR              shift and go to state 66
    LBRACE          shift and go to state 11
    IDENTIFIER      shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    DO              shift and go to state 26
    WRITE           shift and go to state 27
    READ            shift and go to state 28

    block                          shift and go to state 52
    statement                      shift and go to state 53
    assignment                     shift and go to state 16
    if_statement                   shift and go to state 17
    while_statement                shift and go to state 18
    do_while_statement             shift and go to state 19
    write_statement                shift and go to state 20
    read_statement                 shift and go to state 21

state 36

    (47) expression -> MINUS . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression POWER expression
    (39) expression -> . expression EQ expression
    (40) expression -> . expression LT expression
    (41) expression -> . expression GT expression
    (42) expression -> . expression LE expression
    (43) expression -> . expression GE expression
    (44) expression -> . expression NE expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression OR expression
    (47) expression -> . MINUS expression
    (48) expression -> . NOT expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . IDENTIFIER
    (52) expression -> . TRUE
    (53) expression -> . FALSE

    MINUS           shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    IDENTIFIER      shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    expression                     shift and go to state 67

state 37

    (48) expression -> NOT . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression POWER expression
    (39) expression -> . expression EQ expression
    (40) expression -> . expression LT expression
    (41) expression -> . expression GT expression
    (42) expression -> . expression LE expression
    (43) expression -> . expression GE expression
    (44) expression -> . expression NE expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression OR expression
    (47) expression -> . MINUS expression
    (48) expression -> . NOT expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . IDENTIFIER
    (52) expression -> . TRUE
    (53) expression -> . FALSE

    MINUS           shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    IDENTIFIER      shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    expression                     shift and go to state 68

state 38

    (49) expression -> LPAREN . expression RPAREN
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression POWER expression
    (39) expression -> . expression EQ expression
    (40) expression -> . expression LT expression
    (41) expression -> . expression GT expression
    (42) expression -> . expression LE expression
    (43) expression -> . expression GE expression
    (44) expression -> . expression NE expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression OR expression
    (47) expression -> . MINUS expression
    (48) expression -> . NOT expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . IDENTIFIER
    (52) expression -> . TRUE
    (53) expression -> . FALSE

    MINUS           shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    IDENTIFIER      shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    expression                     shift and go to state 69

state 39

    (50) expression -> NUMBER .

    PLUS            reduce using rule 50 (expression -> NUMBER .)
    MINUS           reduce using rule 50 (expression -> NUMBER .)
    TIMES           reduce using rule 50 (expression -> NUMBER .)
    DIVIDE          reduce using rule 50 (expression -> NUMBER .)
    POWER           reduce using rule 50 (expression -> NUMBER .)
    EQ              reduce using rule 50 (expression -> NUMBER .)
    LT              reduce using rule 50 (expression -> NUMBER .)
    GT              reduce using rule 50 (expression -> NUMBER .)
    LE              reduce using rule 50 (expression -> NUMBER .)
    GE              reduce using rule 50 (expression -> NUMBER .)
    NE              reduce using rule 50 (expression -> NUMBER .)
    AND             reduce using rule 50 (expression -> NUMBER .)
    OR              reduce using rule 50 (expression -> NUMBER .)
    LBRACE          reduce using rule 50 (expression -> NUMBER .)
    IDENTIFIER      reduce using rule 50 (expression -> NUMBER .)
    IF              reduce using rule 50 (expression -> NUMBER .)
    WHILE           reduce using rule 50 (expression -> NUMBER .)
    DO              reduce using rule 50 (expression -> NUMBER .)
    WRITE           reduce using rule 50 (expression -> NUMBER .)
    READ            reduce using rule 50 (expression -> NUMBER .)
    SEMICOLON       reduce using rule 50 (expression -> NUMBER .)
    RPAREN          reduce using rule 50 (expression -> NUMBER .)
    COMMA           reduce using rule 50 (expression -> NUMBER .)


state 40

    (51) expression -> IDENTIFIER .

    PLUS            reduce using rule 51 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 51 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 51 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 51 (expression -> IDENTIFIER .)
    POWER           reduce using rule 51 (expression -> IDENTIFIER .)
    EQ              reduce using rule 51 (expression -> IDENTIFIER .)
    LT              reduce using rule 51 (expression -> IDENTIFIER .)
    GT              reduce using rule 51 (expression -> IDENTIFIER .)
    LE              reduce using rule 51 (expression -> IDENTIFIER .)
    GE              reduce using rule 51 (expression -> IDENTIFIER .)
    NE              reduce using rule 51 (expression -> IDENTIFIER .)
    AND             reduce using rule 51 (expression -> IDENTIFIER .)
    OR              reduce using rule 51 (expression -> IDENTIFIER .)
    LBRACE          reduce using rule 51 (expression -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 51 (expression -> IDENTIFIER .)
    IF              reduce using rule 51 (expression -> IDENTIFIER .)
    WHILE           reduce using rule 51 (expression -> IDENTIFIER .)
    DO              reduce using rule 51 (expression -> IDENTIFIER .)
    WRITE           reduce using rule 51 (expression -> IDENTIFIER .)
    READ            reduce using rule 51 (expression -> IDENTIFIER .)
    SEMICOLON       reduce using rule 51 (expression -> IDENTIFIER .)
    RPAREN          reduce using rule 51 (expression -> IDENTIFIER .)
    COMMA           reduce using rule 51 (expression -> IDENTIFIER .)


state 41

    (52) expression -> TRUE .

    PLUS            reduce using rule 52 (expression -> TRUE .)
    MINUS           reduce using rule 52 (expression -> TRUE .)
    TIMES           reduce using rule 52 (expression -> TRUE .)
    DIVIDE          reduce using rule 52 (expression -> TRUE .)
    POWER           reduce using rule 52 (expression -> TRUE .)
    EQ              reduce using rule 52 (expression -> TRUE .)
    LT              reduce using rule 52 (expression -> TRUE .)
    GT              reduce using rule 52 (expression -> TRUE .)
    LE              reduce using rule 52 (expression -> TRUE .)
    GE              reduce using rule 52 (expression -> TRUE .)
    NE              reduce using rule 52 (expression -> TRUE .)
    AND             reduce using rule 52 (expression -> TRUE .)
    OR              reduce using rule 52 (expression -> TRUE .)
    LBRACE          reduce using rule 52 (expression -> TRUE .)
    IDENTIFIER      reduce using rule 52 (expression -> TRUE .)
    IF              reduce using rule 52 (expression -> TRUE .)
    WHILE           reduce using rule 52 (expression -> TRUE .)
    DO              reduce using rule 52 (expression -> TRUE .)
    WRITE           reduce using rule 52 (expression -> TRUE .)
    READ            reduce using rule 52 (expression -> TRUE .)
    SEMICOLON       reduce using rule 52 (expression -> TRUE .)
    RPAREN          reduce using rule 52 (expression -> TRUE .)
    COMMA           reduce using rule 52 (expression -> TRUE .)


state 42

    (53) expression -> FALSE .

    PLUS            reduce using rule 53 (expression -> FALSE .)
    MINUS           reduce using rule 53 (expression -> FALSE .)
    TIMES           reduce using rule 53 (expression -> FALSE .)
    DIVIDE          reduce using rule 53 (expression -> FALSE .)
    POWER           reduce using rule 53 (expression -> FALSE .)
    EQ              reduce using rule 53 (expression -> FALSE .)
    LT              reduce using rule 53 (expression -> FALSE .)
    GT              reduce using rule 53 (expression -> FALSE .)
    LE              reduce using rule 53 (expression -> FALSE .)
    GE              reduce using rule 53 (expression -> FALSE .)
    NE              reduce using rule 53 (expression -> FALSE .)
    AND             reduce using rule 53 (expression -> FALSE .)
    OR              reduce using rule 53 (expression -> FALSE .)
    LBRACE          reduce using rule 53 (expression -> FALSE .)
    IDENTIFIER      reduce using rule 53 (expression -> FALSE .)
    IF              reduce using rule 53 (expression -> FALSE .)
    WHILE           reduce using rule 53 (expression -> FALSE .)
    DO              reduce using rule 53 (expression -> FALSE .)
    WRITE           reduce using rule 53 (expression -> FALSE .)
    READ            reduce using rule 53 (expression -> FALSE .)
    SEMICOLON       reduce using rule 53 (expression -> FALSE .)
    RPAREN          reduce using rule 53 (expression -> FALSE .)
    COMMA           reduce using rule 53 (expression -> FALSE .)


state 43

    (29) while_statement -> WHILE expression . LBRACE statements RBRACE
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . POWER expression
    (39) expression -> expression . EQ expression
    (40) expression -> expression . LT expression
    (41) expression -> expression . GT expression
    (42) expression -> expression . LE expression
    (43) expression -> expression . GE expression
    (44) expression -> expression . NE expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . OR expression

    LBRACE          shift and go to state 70
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    POWER           shift and go to state 58
    EQ              shift and go to state 59
    LT              shift and go to state 60
    GT              shift and go to state 61
    LE              shift and go to state 62
    GE              shift and go to state 63
    NE              shift and go to state 64
    AND             shift and go to state 65
    OR              shift and go to state 66


state 44

    (30) do_while_statement -> DO LBRACE . statements RBRACE WHILE LPAREN expression RPAREN SEMICOLON
    (13) statements -> . statements statement
    (14) statements -> . statement
    (15) statements -> . empty
    (16) statement -> . assignment
    (17) statement -> . if_statement
    (18) statement -> . while_statement
    (19) statement -> . do_while_statement
    (20) statement -> . write_statement
    (21) statement -> . read_statement
    (22) statement -> . block
    (54) empty -> .
    (23) assignment -> . IDENTIFIER ASSIGN expression SEMICOLON
    (24) if_statement -> . IF expression block else_part FI
    (25) if_statement -> . IF expression statement else_part FI
    (29) while_statement -> . WHILE expression LBRACE statements RBRACE
    (30) do_while_statement -> . DO LBRACE statements RBRACE WHILE LPAREN expression RPAREN SEMICOLON
    (31) write_statement -> . WRITE expression SEMICOLON
    (32) read_statement -> . READ IDENTIFIER SEMICOLON
    (33) block -> . LBRACE statements RBRACE

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
    RBRACE          reduce using rule 54 (empty -> .)
    IDENTIFIER      shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    DO              shift and go to state 26
    WRITE           shift and go to state 27
    READ            shift and go to state 28
    LBRACE          shift and go to state 11

  ! IDENTIFIER      [ reduce using rule 54 (empty -> .) ]
  ! IF              [ reduce using rule 54 (empty -> .) ]
  ! WHILE           [ reduce using rule 54 (empty -> .) ]
  ! DO              [ reduce using rule 54 (empty -> .) ]
  ! WRITE           [ reduce using rule 54 (empty -> .) ]
  ! READ            [ reduce using rule 54 (empty -> .) ]
  ! LBRACE          [ reduce using rule 54 (empty -> .) ]

    statements                     shift and go to state 71
    statement                      shift and go to state 14
    empty                          shift and go to state 15
    assignment                     shift and go to state 16
    if_statement                   shift and go to state 17
    while_statement                shift and go to state 18
    do_while_statement             shift and go to state 19
    write_statement                shift and go to state 20
    read_statement                 shift and go to state 21
    block                          shift and go to state 22

state 45

    (31) write_statement -> WRITE expression . SEMICOLON
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . POWER expression
    (39) expression -> expression . EQ expression
    (40) expression -> expression . LT expression
    (41) expression -> expression . GT expression
    (42) expression -> expression . LE expression
    (43) expression -> expression . GE expression
    (44) expression -> expression . NE expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . OR expression

    SEMICOLON       shift and go to state 72
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    POWER           shift and go to state 58
    EQ              shift and go to state 59
    LT              shift and go to state 60
    GT              shift and go to state 61
    LE              shift and go to state 62
    GE              shift and go to state 63
    NE              shift and go to state 64
    AND             shift and go to state 65
    OR              shift and go to state 66


state 46

    (32) read_statement -> READ IDENTIFIER . SEMICOLON

    SEMICOLON       shift and go to state 73


state 47

    (5) declaration -> type var_list SEMICOLON .

    INT             reduce using rule 5 (declaration -> type var_list SEMICOLON .)
    FLOAT           reduce using rule 5 (declaration -> type var_list SEMICOLON .)
    BOOL            reduce using rule 5 (declaration -> type var_list SEMICOLON .)
    IDENTIFIER      reduce using rule 5 (declaration -> type var_list SEMICOLON .)
    IF              reduce using rule 5 (declaration -> type var_list SEMICOLON .)
    WHILE           reduce using rule 5 (declaration -> type var_list SEMICOLON .)
    DO              reduce using rule 5 (declaration -> type var_list SEMICOLON .)
    WRITE           reduce using rule 5 (declaration -> type var_list SEMICOLON .)
    READ            reduce using rule 5 (declaration -> type var_list SEMICOLON .)
    LBRACE          reduce using rule 5 (declaration -> type var_list SEMICOLON .)
    RBRACE          reduce using rule 5 (declaration -> type var_list SEMICOLON .)


state 48

    (6) var_list -> var_list COMMA . IDENTIFIER
    (7) var_list -> var_list COMMA . IDENTIFIER ASSIGN expression

    IDENTIFIER      shift and go to state 74


state 49

    (9) var_list -> IDENTIFIER ASSIGN . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression POWER expression
    (39) expression -> . expression EQ expression
    (40) expression -> . expression LT expression
    (41) expression -> . expression GT expression
    (42) expression -> . expression LE expression
    (43) expression -> . expression GE expression
    (44) expression -> . expression NE expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression OR expression
    (47) expression -> . MINUS expression
    (48) expression -> . NOT expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . IDENTIFIER
    (52) expression -> . TRUE
    (53) expression -> . FALSE

    MINUS           shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    IDENTIFIER      shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    expression                     shift and go to state 75

state 50

    (33) block -> LBRACE statements RBRACE .

    RBRACE          reduce using rule 33 (block -> LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 33 (block -> LBRACE statements RBRACE .)
    IF              reduce using rule 33 (block -> LBRACE statements RBRACE .)
    WHILE           reduce using rule 33 (block -> LBRACE statements RBRACE .)
    DO              reduce using rule 33 (block -> LBRACE statements RBRACE .)
    WRITE           reduce using rule 33 (block -> LBRACE statements RBRACE .)
    READ            reduce using rule 33 (block -> LBRACE statements RBRACE .)
    LBRACE          reduce using rule 33 (block -> LBRACE statements RBRACE .)
    ELSE            reduce using rule 33 (block -> LBRACE statements RBRACE .)
    FI              reduce using rule 33 (block -> LBRACE statements RBRACE .)


state 51

    (23) assignment -> IDENTIFIER ASSIGN expression . SEMICOLON
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . POWER expression
    (39) expression -> expression . EQ expression
    (40) expression -> expression . LT expression
    (41) expression -> expression . GT expression
    (42) expression -> expression . LE expression
    (43) expression -> expression . GE expression
    (44) expression -> expression . NE expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . OR expression

    SEMICOLON       shift and go to state 76
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    POWER           shift and go to state 58
    EQ              shift and go to state 59
    LT              shift and go to state 60
    GT              shift and go to state 61
    LE              shift and go to state 62
    GE              shift and go to state 63
    NE              shift and go to state 64
    AND             shift and go to state 65
    OR              shift and go to state 66


state 52

    (24) if_statement -> IF expression block . else_part FI
    (22) statement -> block .
    (26) else_part -> . ELSE block
    (27) else_part -> . ELSE statement
    (28) else_part -> . empty
    (54) empty -> .

  ! shift/reduce conflict for ELSE resolved as shift
  ! reduce/reduce conflict for FI resolved using rule 22 (statement -> block .)
    FI              reduce using rule 22 (statement -> block .)
    ELSE            shift and go to state 78

  ! ELSE            [ reduce using rule 22 (statement -> block .) ]
  ! FI              [ reduce using rule 54 (empty -> .) ]

    else_part                      shift and go to state 77
    empty                          shift and go to state 79

state 53

    (25) if_statement -> IF expression statement . else_part FI
    (26) else_part -> . ELSE block
    (27) else_part -> . ELSE statement
    (28) else_part -> . empty
    (54) empty -> .

    ELSE            shift and go to state 78
    FI              reduce using rule 54 (empty -> .)

    else_part                      shift and go to state 80
    empty                          shift and go to state 79

state 54

    (34) expression -> expression PLUS . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression POWER expression
    (39) expression -> . expression EQ expression
    (40) expression -> . expression LT expression
    (41) expression -> . expression GT expression
    (42) expression -> . expression LE expression
    (43) expression -> . expression GE expression
    (44) expression -> . expression NE expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression OR expression
    (47) expression -> . MINUS expression
    (48) expression -> . NOT expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . IDENTIFIER
    (52) expression -> . TRUE
    (53) expression -> . FALSE

    MINUS           shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    IDENTIFIER      shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    expression                     shift and go to state 81

state 55

    (35) expression -> expression MINUS . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression POWER expression
    (39) expression -> . expression EQ expression
    (40) expression -> . expression LT expression
    (41) expression -> . expression GT expression
    (42) expression -> . expression LE expression
    (43) expression -> . expression GE expression
    (44) expression -> . expression NE expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression OR expression
    (47) expression -> . MINUS expression
    (48) expression -> . NOT expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . IDENTIFIER
    (52) expression -> . TRUE
    (53) expression -> . FALSE

    MINUS           shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    IDENTIFIER      shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    expression                     shift and go to state 82

state 56

    (36) expression -> expression TIMES . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression POWER expression
    (39) expression -> . expression EQ expression
    (40) expression -> . expression LT expression
    (41) expression -> . expression GT expression
    (42) expression -> . expression LE expression
    (43) expression -> . expression GE expression
    (44) expression -> . expression NE expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression OR expression
    (47) expression -> . MINUS expression
    (48) expression -> . NOT expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . IDENTIFIER
    (52) expression -> . TRUE
    (53) expression -> . FALSE

    MINUS           shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    IDENTIFIER      shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    expression                     shift and go to state 83

state 57

    (37) expression -> expression DIVIDE . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression POWER expression
    (39) expression -> . expression EQ expression
    (40) expression -> . expression LT expression
    (41) expression -> . expression GT expression
    (42) expression -> . expression LE expression
    (43) expression -> . expression GE expression
    (44) expression -> . expression NE expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression OR expression
    (47) expression -> . MINUS expression
    (48) expression -> . NOT expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . IDENTIFIER
    (52) expression -> . TRUE
    (53) expression -> . FALSE

    MINUS           shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    IDENTIFIER      shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    expression                     shift and go to state 84

state 58

    (38) expression -> expression POWER . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression POWER expression
    (39) expression -> . expression EQ expression
    (40) expression -> . expression LT expression
    (41) expression -> . expression GT expression
    (42) expression -> . expression LE expression
    (43) expression -> . expression GE expression
    (44) expression -> . expression NE expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression OR expression
    (47) expression -> . MINUS expression
    (48) expression -> . NOT expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . IDENTIFIER
    (52) expression -> . TRUE
    (53) expression -> . FALSE

    MINUS           shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    IDENTIFIER      shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    expression                     shift and go to state 85

state 59

    (39) expression -> expression EQ . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression POWER expression
    (39) expression -> . expression EQ expression
    (40) expression -> . expression LT expression
    (41) expression -> . expression GT expression
    (42) expression -> . expression LE expression
    (43) expression -> . expression GE expression
    (44) expression -> . expression NE expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression OR expression
    (47) expression -> . MINUS expression
    (48) expression -> . NOT expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . IDENTIFIER
    (52) expression -> . TRUE
    (53) expression -> . FALSE

    MINUS           shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    IDENTIFIER      shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    expression                     shift and go to state 86

state 60

    (40) expression -> expression LT . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression POWER expression
    (39) expression -> . expression EQ expression
    (40) expression -> . expression LT expression
    (41) expression -> . expression GT expression
    (42) expression -> . expression LE expression
    (43) expression -> . expression GE expression
    (44) expression -> . expression NE expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression OR expression
    (47) expression -> . MINUS expression
    (48) expression -> . NOT expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . IDENTIFIER
    (52) expression -> . TRUE
    (53) expression -> . FALSE

    MINUS           shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    IDENTIFIER      shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    expression                     shift and go to state 87

state 61

    (41) expression -> expression GT . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression POWER expression
    (39) expression -> . expression EQ expression
    (40) expression -> . expression LT expression
    (41) expression -> . expression GT expression
    (42) expression -> . expression LE expression
    (43) expression -> . expression GE expression
    (44) expression -> . expression NE expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression OR expression
    (47) expression -> . MINUS expression
    (48) expression -> . NOT expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . IDENTIFIER
    (52) expression -> . TRUE
    (53) expression -> . FALSE

    MINUS           shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    IDENTIFIER      shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    expression                     shift and go to state 88

state 62

    (42) expression -> expression LE . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression POWER expression
    (39) expression -> . expression EQ expression
    (40) expression -> . expression LT expression
    (41) expression -> . expression GT expression
    (42) expression -> . expression LE expression
    (43) expression -> . expression GE expression
    (44) expression -> . expression NE expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression OR expression
    (47) expression -> . MINUS expression
    (48) expression -> . NOT expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . IDENTIFIER
    (52) expression -> . TRUE
    (53) expression -> . FALSE

    MINUS           shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    IDENTIFIER      shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    expression                     shift and go to state 89

state 63

    (43) expression -> expression GE . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression POWER expression
    (39) expression -> . expression EQ expression
    (40) expression -> . expression LT expression
    (41) expression -> . expression GT expression
    (42) expression -> . expression LE expression
    (43) expression -> . expression GE expression
    (44) expression -> . expression NE expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression OR expression
    (47) expression -> . MINUS expression
    (48) expression -> . NOT expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . IDENTIFIER
    (52) expression -> . TRUE
    (53) expression -> . FALSE

    MINUS           shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    IDENTIFIER      shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    expression                     shift and go to state 90

state 64

    (44) expression -> expression NE . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression POWER expression
    (39) expression -> . expression EQ expression
    (40) expression -> . expression LT expression
    (41) expression -> . expression GT expression
    (42) expression -> . expression LE expression
    (43) expression -> . expression GE expression
    (44) expression -> . expression NE expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression OR expression
    (47) expression -> . MINUS expression
    (48) expression -> . NOT expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . IDENTIFIER
    (52) expression -> . TRUE
    (53) expression -> . FALSE

    MINUS           shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    IDENTIFIER      shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    expression                     shift and go to state 91

state 65

    (45) expression -> expression AND . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression POWER expression
    (39) expression -> . expression EQ expression
    (40) expression -> . expression LT expression
    (41) expression -> . expression GT expression
    (42) expression -> . expression LE expression
    (43) expression -> . expression GE expression
    (44) expression -> . expression NE expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression OR expression
    (47) expression -> . MINUS expression
    (48) expression -> . NOT expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . IDENTIFIER
    (52) expression -> . TRUE
    (53) expression -> . FALSE

    MINUS           shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    IDENTIFIER      shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    expression                     shift and go to state 92

state 66

    (46) expression -> expression OR . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression POWER expression
    (39) expression -> . expression EQ expression
    (40) expression -> . expression LT expression
    (41) expression -> . expression GT expression
    (42) expression -> . expression LE expression
    (43) expression -> . expression GE expression
    (44) expression -> . expression NE expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression OR expression
    (47) expression -> . MINUS expression
    (48) expression -> . NOT expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . IDENTIFIER
    (52) expression -> . TRUE
    (53) expression -> . FALSE

    MINUS           shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    IDENTIFIER      shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    expression                     shift and go to state 93

state 67

    (47) expression -> MINUS expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . POWER expression
    (39) expression -> expression . EQ expression
    (40) expression -> expression . LT expression
    (41) expression -> expression . GT expression
    (42) expression -> expression . LE expression
    (43) expression -> expression . GE expression
    (44) expression -> expression . NE expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . OR expression

    PLUS            reduce using rule 47 (expression -> MINUS expression .)
    MINUS           reduce using rule 47 (expression -> MINUS expression .)
    TIMES           reduce using rule 47 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 47 (expression -> MINUS expression .)
    POWER           reduce using rule 47 (expression -> MINUS expression .)
    EQ              reduce using rule 47 (expression -> MINUS expression .)
    LT              reduce using rule 47 (expression -> MINUS expression .)
    GT              reduce using rule 47 (expression -> MINUS expression .)
    LE              reduce using rule 47 (expression -> MINUS expression .)
    GE              reduce using rule 47 (expression -> MINUS expression .)
    NE              reduce using rule 47 (expression -> MINUS expression .)
    AND             reduce using rule 47 (expression -> MINUS expression .)
    OR              reduce using rule 47 (expression -> MINUS expression .)
    LBRACE          reduce using rule 47 (expression -> MINUS expression .)
    IDENTIFIER      reduce using rule 47 (expression -> MINUS expression .)
    IF              reduce using rule 47 (expression -> MINUS expression .)
    WHILE           reduce using rule 47 (expression -> MINUS expression .)
    DO              reduce using rule 47 (expression -> MINUS expression .)
    WRITE           reduce using rule 47 (expression -> MINUS expression .)
    READ            reduce using rule 47 (expression -> MINUS expression .)
    SEMICOLON       reduce using rule 47 (expression -> MINUS expression .)
    RPAREN          reduce using rule 47 (expression -> MINUS expression .)
    COMMA           reduce using rule 47 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 54 ]
  ! MINUS           [ shift and go to state 55 ]
  ! TIMES           [ shift and go to state 56 ]
  ! DIVIDE          [ shift and go to state 57 ]
  ! POWER           [ shift and go to state 58 ]
  ! EQ              [ shift and go to state 59 ]
  ! LT              [ shift and go to state 60 ]
  ! GT              [ shift and go to state 61 ]
  ! LE              [ shift and go to state 62 ]
  ! GE              [ shift and go to state 63 ]
  ! NE              [ shift and go to state 64 ]
  ! AND             [ shift and go to state 65 ]
  ! OR              [ shift and go to state 66 ]


state 68

    (48) expression -> NOT expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . POWER expression
    (39) expression -> expression . EQ expression
    (40) expression -> expression . LT expression
    (41) expression -> expression . GT expression
    (42) expression -> expression . LE expression
    (43) expression -> expression . GE expression
    (44) expression -> expression . NE expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . OR expression

    PLUS            reduce using rule 48 (expression -> NOT expression .)
    MINUS           reduce using rule 48 (expression -> NOT expression .)
    TIMES           reduce using rule 48 (expression -> NOT expression .)
    DIVIDE          reduce using rule 48 (expression -> NOT expression .)
    POWER           reduce using rule 48 (expression -> NOT expression .)
    EQ              reduce using rule 48 (expression -> NOT expression .)
    LT              reduce using rule 48 (expression -> NOT expression .)
    GT              reduce using rule 48 (expression -> NOT expression .)
    LE              reduce using rule 48 (expression -> NOT expression .)
    GE              reduce using rule 48 (expression -> NOT expression .)
    NE              reduce using rule 48 (expression -> NOT expression .)
    AND             reduce using rule 48 (expression -> NOT expression .)
    OR              reduce using rule 48 (expression -> NOT expression .)
    LBRACE          reduce using rule 48 (expression -> NOT expression .)
    IDENTIFIER      reduce using rule 48 (expression -> NOT expression .)
    IF              reduce using rule 48 (expression -> NOT expression .)
    WHILE           reduce using rule 48 (expression -> NOT expression .)
    DO              reduce using rule 48 (expression -> NOT expression .)
    WRITE           reduce using rule 48 (expression -> NOT expression .)
    READ            reduce using rule 48 (expression -> NOT expression .)
    SEMICOLON       reduce using rule 48 (expression -> NOT expression .)
    RPAREN          reduce using rule 48 (expression -> NOT expression .)
    COMMA           reduce using rule 48 (expression -> NOT expression .)

  ! PLUS            [ shift and go to state 54 ]
  ! MINUS           [ shift and go to state 55 ]
  ! TIMES           [ shift and go to state 56 ]
  ! DIVIDE          [ shift and go to state 57 ]
  ! POWER           [ shift and go to state 58 ]
  ! EQ              [ shift and go to state 59 ]
  ! LT              [ shift and go to state 60 ]
  ! GT              [ shift and go to state 61 ]
  ! LE              [ shift and go to state 62 ]
  ! GE              [ shift and go to state 63 ]
  ! NE              [ shift and go to state 64 ]
  ! AND             [ shift and go to state 65 ]
  ! OR              [ shift and go to state 66 ]


state 69

    (49) expression -> LPAREN expression . RPAREN
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . POWER expression
    (39) expression -> expression . EQ expression
    (40) expression -> expression . LT expression
    (41) expression -> expression . GT expression
    (42) expression -> expression . LE expression
    (43) expression -> expression . GE expression
    (44) expression -> expression . NE expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . OR expression

    RPAREN          shift and go to state 94
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    POWER           shift and go to state 58
    EQ              shift and go to state 59
    LT              shift and go to state 60
    GT              shift and go to state 61
    LE              shift and go to state 62
    GE              shift and go to state 63
    NE              shift and go to state 64
    AND             shift and go to state 65
    OR              shift and go to state 66


state 70

    (29) while_statement -> WHILE expression LBRACE . statements RBRACE
    (13) statements -> . statements statement
    (14) statements -> . statement
    (15) statements -> . empty
    (16) statement -> . assignment
    (17) statement -> . if_statement
    (18) statement -> . while_statement
    (19) statement -> . do_while_statement
    (20) statement -> . write_statement
    (21) statement -> . read_statement
    (22) statement -> . block
    (54) empty -> .
    (23) assignment -> . IDENTIFIER ASSIGN expression SEMICOLON
    (24) if_statement -> . IF expression block else_part FI
    (25) if_statement -> . IF expression statement else_part FI
    (29) while_statement -> . WHILE expression LBRACE statements RBRACE
    (30) do_while_statement -> . DO LBRACE statements RBRACE WHILE LPAREN expression RPAREN SEMICOLON
    (31) write_statement -> . WRITE expression SEMICOLON
    (32) read_statement -> . READ IDENTIFIER SEMICOLON
    (33) block -> . LBRACE statements RBRACE

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
    RBRACE          reduce using rule 54 (empty -> .)
    IDENTIFIER      shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    DO              shift and go to state 26
    WRITE           shift and go to state 27
    READ            shift and go to state 28
    LBRACE          shift and go to state 11

  ! IDENTIFIER      [ reduce using rule 54 (empty -> .) ]
  ! IF              [ reduce using rule 54 (empty -> .) ]
  ! WHILE           [ reduce using rule 54 (empty -> .) ]
  ! DO              [ reduce using rule 54 (empty -> .) ]
  ! WRITE           [ reduce using rule 54 (empty -> .) ]
  ! READ            [ reduce using rule 54 (empty -> .) ]
  ! LBRACE          [ reduce using rule 54 (empty -> .) ]

    statements                     shift and go to state 95
    statement                      shift and go to state 14
    empty                          shift and go to state 15
    assignment                     shift and go to state 16
    if_statement                   shift and go to state 17
    while_statement                shift and go to state 18
    do_while_statement             shift and go to state 19
    write_statement                shift and go to state 20
    read_statement                 shift and go to state 21
    block                          shift and go to state 22

state 71

    (30) do_while_statement -> DO LBRACE statements . RBRACE WHILE LPAREN expression RPAREN SEMICOLON
    (13) statements -> statements . statement
    (16) statement -> . assignment
    (17) statement -> . if_statement
    (18) statement -> . while_statement
    (19) statement -> . do_while_statement
    (20) statement -> . write_statement
    (21) statement -> . read_statement
    (22) statement -> . block
    (23) assignment -> . IDENTIFIER ASSIGN expression SEMICOLON
    (24) if_statement -> . IF expression block else_part FI
    (25) if_statement -> . IF expression statement else_part FI
    (29) while_statement -> . WHILE expression LBRACE statements RBRACE
    (30) do_while_statement -> . DO LBRACE statements RBRACE WHILE LPAREN expression RPAREN SEMICOLON
    (31) write_statement -> . WRITE expression SEMICOLON
    (32) read_statement -> . READ IDENTIFIER SEMICOLON
    (33) block -> . LBRACE statements RBRACE

    RBRACE          shift and go to state 96
    IDENTIFIER      shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    DO              shift and go to state 26
    WRITE           shift and go to state 27
    READ            shift and go to state 28
    LBRACE          shift and go to state 11

    statement                      shift and go to state 33
    assignment                     shift and go to state 16
    if_statement                   shift and go to state 17
    while_statement                shift and go to state 18
    do_while_statement             shift and go to state 19
    write_statement                shift and go to state 20
    read_statement                 shift and go to state 21
    block                          shift and go to state 22

state 72

    (31) write_statement -> WRITE expression SEMICOLON .

    RBRACE          reduce using rule 31 (write_statement -> WRITE expression SEMICOLON .)
    IDENTIFIER      reduce using rule 31 (write_statement -> WRITE expression SEMICOLON .)
    IF              reduce using rule 31 (write_statement -> WRITE expression SEMICOLON .)
    WHILE           reduce using rule 31 (write_statement -> WRITE expression SEMICOLON .)
    DO              reduce using rule 31 (write_statement -> WRITE expression SEMICOLON .)
    WRITE           reduce using rule 31 (write_statement -> WRITE expression SEMICOLON .)
    READ            reduce using rule 31 (write_statement -> WRITE expression SEMICOLON .)
    LBRACE          reduce using rule 31 (write_statement -> WRITE expression SEMICOLON .)
    ELSE            reduce using rule 31 (write_statement -> WRITE expression SEMICOLON .)
    FI              reduce using rule 31 (write_statement -> WRITE expression SEMICOLON .)


state 73

    (32) read_statement -> READ IDENTIFIER SEMICOLON .

    RBRACE          reduce using rule 32 (read_statement -> READ IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 32 (read_statement -> READ IDENTIFIER SEMICOLON .)
    IF              reduce using rule 32 (read_statement -> READ IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 32 (read_statement -> READ IDENTIFIER SEMICOLON .)
    DO              reduce using rule 32 (read_statement -> READ IDENTIFIER SEMICOLON .)
    WRITE           reduce using rule 32 (read_statement -> READ IDENTIFIER SEMICOLON .)
    READ            reduce using rule 32 (read_statement -> READ IDENTIFIER SEMICOLON .)
    LBRACE          reduce using rule 32 (read_statement -> READ IDENTIFIER SEMICOLON .)
    ELSE            reduce using rule 32 (read_statement -> READ IDENTIFIER SEMICOLON .)
    FI              reduce using rule 32 (read_statement -> READ IDENTIFIER SEMICOLON .)


state 74

    (6) var_list -> var_list COMMA IDENTIFIER .
    (7) var_list -> var_list COMMA IDENTIFIER . ASSIGN expression

    SEMICOLON       reduce using rule 6 (var_list -> var_list COMMA IDENTIFIER .)
    COMMA           reduce using rule 6 (var_list -> var_list COMMA IDENTIFIER .)
    ASSIGN          shift and go to state 97


state 75

    (9) var_list -> IDENTIFIER ASSIGN expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . POWER expression
    (39) expression -> expression . EQ expression
    (40) expression -> expression . LT expression
    (41) expression -> expression . GT expression
    (42) expression -> expression . LE expression
    (43) expression -> expression . GE expression
    (44) expression -> expression . NE expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . OR expression

    SEMICOLON       reduce using rule 9 (var_list -> IDENTIFIER ASSIGN expression .)
    COMMA           reduce using rule 9 (var_list -> IDENTIFIER ASSIGN expression .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    POWER           shift and go to state 58
    EQ              shift and go to state 59
    LT              shift and go to state 60
    GT              shift and go to state 61
    LE              shift and go to state 62
    GE              shift and go to state 63
    NE              shift and go to state 64
    AND             shift and go to state 65
    OR              shift and go to state 66


state 76

    (23) assignment -> IDENTIFIER ASSIGN expression SEMICOLON .

    RBRACE          reduce using rule 23 (assignment -> IDENTIFIER ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 23 (assignment -> IDENTIFIER ASSIGN expression SEMICOLON .)
    IF              reduce using rule 23 (assignment -> IDENTIFIER ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 23 (assignment -> IDENTIFIER ASSIGN expression SEMICOLON .)
    DO              reduce using rule 23 (assignment -> IDENTIFIER ASSIGN expression SEMICOLON .)
    WRITE           reduce using rule 23 (assignment -> IDENTIFIER ASSIGN expression SEMICOLON .)
    READ            reduce using rule 23 (assignment -> IDENTIFIER ASSIGN expression SEMICOLON .)
    LBRACE          reduce using rule 23 (assignment -> IDENTIFIER ASSIGN expression SEMICOLON .)
    ELSE            reduce using rule 23 (assignment -> IDENTIFIER ASSIGN expression SEMICOLON .)
    FI              reduce using rule 23 (assignment -> IDENTIFIER ASSIGN expression SEMICOLON .)


state 77

    (24) if_statement -> IF expression block else_part . FI

    FI              shift and go to state 98


state 78

    (26) else_part -> ELSE . block
    (27) else_part -> ELSE . statement
    (33) block -> . LBRACE statements RBRACE
    (16) statement -> . assignment
    (17) statement -> . if_statement
    (18) statement -> . while_statement
    (19) statement -> . do_while_statement
    (20) statement -> . write_statement
    (21) statement -> . read_statement
    (22) statement -> . block
    (23) assignment -> . IDENTIFIER ASSIGN expression SEMICOLON
    (24) if_statement -> . IF expression block else_part FI
    (25) if_statement -> . IF expression statement else_part FI
    (29) while_statement -> . WHILE expression LBRACE statements RBRACE
    (30) do_while_statement -> . DO LBRACE statements RBRACE WHILE LPAREN expression RPAREN SEMICOLON
    (31) write_statement -> . WRITE expression SEMICOLON
    (32) read_statement -> . READ IDENTIFIER SEMICOLON

    LBRACE          shift and go to state 11
    IDENTIFIER      shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    DO              shift and go to state 26
    WRITE           shift and go to state 27
    READ            shift and go to state 28

    block                          shift and go to state 99
    statement                      shift and go to state 100
    assignment                     shift and go to state 16
    if_statement                   shift and go to state 17
    while_statement                shift and go to state 18
    do_while_statement             shift and go to state 19
    write_statement                shift and go to state 20
    read_statement                 shift and go to state 21

state 79

    (28) else_part -> empty .

    FI              reduce using rule 28 (else_part -> empty .)


state 80

    (25) if_statement -> IF expression statement else_part . FI

    FI              shift and go to state 101


state 81

    (34) expression -> expression PLUS expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . POWER expression
    (39) expression -> expression . EQ expression
    (40) expression -> expression . LT expression
    (41) expression -> expression . GT expression
    (42) expression -> expression . LE expression
    (43) expression -> expression . GE expression
    (44) expression -> expression . NE expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . OR expression

    PLUS            reduce using rule 34 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 34 (expression -> expression PLUS expression .)
    POWER           reduce using rule 34 (expression -> expression PLUS expression .)
    EQ              reduce using rule 34 (expression -> expression PLUS expression .)
    LT              reduce using rule 34 (expression -> expression PLUS expression .)
    GT              reduce using rule 34 (expression -> expression PLUS expression .)
    LE              reduce using rule 34 (expression -> expression PLUS expression .)
    GE              reduce using rule 34 (expression -> expression PLUS expression .)
    NE              reduce using rule 34 (expression -> expression PLUS expression .)
    AND             reduce using rule 34 (expression -> expression PLUS expression .)
    OR              reduce using rule 34 (expression -> expression PLUS expression .)
    LBRACE          reduce using rule 34 (expression -> expression PLUS expression .)
    IDENTIFIER      reduce using rule 34 (expression -> expression PLUS expression .)
    IF              reduce using rule 34 (expression -> expression PLUS expression .)
    WHILE           reduce using rule 34 (expression -> expression PLUS expression .)
    DO              reduce using rule 34 (expression -> expression PLUS expression .)
    WRITE           reduce using rule 34 (expression -> expression PLUS expression .)
    READ            reduce using rule 34 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 34 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 34 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 34 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57

  ! TIMES           [ reduce using rule 34 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 34 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 54 ]
  ! MINUS           [ shift and go to state 55 ]
  ! POWER           [ shift and go to state 58 ]
  ! EQ              [ shift and go to state 59 ]
  ! LT              [ shift and go to state 60 ]
  ! GT              [ shift and go to state 61 ]
  ! LE              [ shift and go to state 62 ]
  ! GE              [ shift and go to state 63 ]
  ! NE              [ shift and go to state 64 ]
  ! AND             [ shift and go to state 65 ]
  ! OR              [ shift and go to state 66 ]


state 82

    (35) expression -> expression MINUS expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . POWER expression
    (39) expression -> expression . EQ expression
    (40) expression -> expression . LT expression
    (41) expression -> expression . GT expression
    (42) expression -> expression . LE expression
    (43) expression -> expression . GE expression
    (44) expression -> expression . NE expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . OR expression

    PLUS            reduce using rule 35 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 35 (expression -> expression MINUS expression .)
    POWER           reduce using rule 35 (expression -> expression MINUS expression .)
    EQ              reduce using rule 35 (expression -> expression MINUS expression .)
    LT              reduce using rule 35 (expression -> expression MINUS expression .)
    GT              reduce using rule 35 (expression -> expression MINUS expression .)
    LE              reduce using rule 35 (expression -> expression MINUS expression .)
    GE              reduce using rule 35 (expression -> expression MINUS expression .)
    NE              reduce using rule 35 (expression -> expression MINUS expression .)
    AND             reduce using rule 35 (expression -> expression MINUS expression .)
    OR              reduce using rule 35 (expression -> expression MINUS expression .)
    LBRACE          reduce using rule 35 (expression -> expression MINUS expression .)
    IDENTIFIER      reduce using rule 35 (expression -> expression MINUS expression .)
    IF              reduce using rule 35 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 35 (expression -> expression MINUS expression .)
    DO              reduce using rule 35 (expression -> expression MINUS expression .)
    WRITE           reduce using rule 35 (expression -> expression MINUS expression .)
    READ            reduce using rule 35 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 35 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 35 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 35 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57

  ! TIMES           [ reduce using rule 35 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 35 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 54 ]
  ! MINUS           [ shift and go to state 55 ]
  ! POWER           [ shift and go to state 58 ]
  ! EQ              [ shift and go to state 59 ]
  ! LT              [ shift and go to state 60 ]
  ! GT              [ shift and go to state 61 ]
  ! LE              [ shift and go to state 62 ]
  ! GE              [ shift and go to state 63 ]
  ! NE              [ shift and go to state 64 ]
  ! AND             [ shift and go to state 65 ]
  ! OR              [ shift and go to state 66 ]


state 83

    (36) expression -> expression TIMES expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . POWER expression
    (39) expression -> expression . EQ expression
    (40) expression -> expression . LT expression
    (41) expression -> expression . GT expression
    (42) expression -> expression . LE expression
    (43) expression -> expression . GE expression
    (44) expression -> expression . NE expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . OR expression

    PLUS            reduce using rule 36 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 36 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 36 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 36 (expression -> expression TIMES expression .)
    POWER           reduce using rule 36 (expression -> expression TIMES expression .)
    EQ              reduce using rule 36 (expression -> expression TIMES expression .)
    LT              reduce using rule 36 (expression -> expression TIMES expression .)
    GT              reduce using rule 36 (expression -> expression TIMES expression .)
    LE              reduce using rule 36 (expression -> expression TIMES expression .)
    GE              reduce using rule 36 (expression -> expression TIMES expression .)
    NE              reduce using rule 36 (expression -> expression TIMES expression .)
    AND             reduce using rule 36 (expression -> expression TIMES expression .)
    OR              reduce using rule 36 (expression -> expression TIMES expression .)
    LBRACE          reduce using rule 36 (expression -> expression TIMES expression .)
    IDENTIFIER      reduce using rule 36 (expression -> expression TIMES expression .)
    IF              reduce using rule 36 (expression -> expression TIMES expression .)
    WHILE           reduce using rule 36 (expression -> expression TIMES expression .)
    DO              reduce using rule 36 (expression -> expression TIMES expression .)
    WRITE           reduce using rule 36 (expression -> expression TIMES expression .)
    READ            reduce using rule 36 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 36 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 36 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 36 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 54 ]
  ! MINUS           [ shift and go to state 55 ]
  ! TIMES           [ shift and go to state 56 ]
  ! DIVIDE          [ shift and go to state 57 ]
  ! POWER           [ shift and go to state 58 ]
  ! EQ              [ shift and go to state 59 ]
  ! LT              [ shift and go to state 60 ]
  ! GT              [ shift and go to state 61 ]
  ! LE              [ shift and go to state 62 ]
  ! GE              [ shift and go to state 63 ]
  ! NE              [ shift and go to state 64 ]
  ! AND             [ shift and go to state 65 ]
  ! OR              [ shift and go to state 66 ]


state 84

    (37) expression -> expression DIVIDE expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . POWER expression
    (39) expression -> expression . EQ expression
    (40) expression -> expression . LT expression
    (41) expression -> expression . GT expression
    (42) expression -> expression . LE expression
    (43) expression -> expression . GE expression
    (44) expression -> expression . NE expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . OR expression

    PLUS            reduce using rule 37 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 37 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 37 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 37 (expression -> expression DIVIDE expression .)
    POWER           reduce using rule 37 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 37 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 37 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 37 (expression -> expression DIVIDE expression .)
    LE              reduce using rule 37 (expression -> expression DIVIDE expression .)
    GE              reduce using rule 37 (expression -> expression DIVIDE expression .)
    NE              reduce using rule 37 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 37 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 37 (expression -> expression DIVIDE expression .)
    LBRACE          reduce using rule 37 (expression -> expression DIVIDE expression .)
    IDENTIFIER      reduce using rule 37 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 37 (expression -> expression DIVIDE expression .)
    WHILE           reduce using rule 37 (expression -> expression DIVIDE expression .)
    DO              reduce using rule 37 (expression -> expression DIVIDE expression .)
    WRITE           reduce using rule 37 (expression -> expression DIVIDE expression .)
    READ            reduce using rule 37 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 37 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 37 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 37 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 54 ]
  ! MINUS           [ shift and go to state 55 ]
  ! TIMES           [ shift and go to state 56 ]
  ! DIVIDE          [ shift and go to state 57 ]
  ! POWER           [ shift and go to state 58 ]
  ! EQ              [ shift and go to state 59 ]
  ! LT              [ shift and go to state 60 ]
  ! GT              [ shift and go to state 61 ]
  ! LE              [ shift and go to state 62 ]
  ! GE              [ shift and go to state 63 ]
  ! NE              [ shift and go to state 64 ]
  ! AND             [ shift and go to state 65 ]
  ! OR              [ shift and go to state 66 ]


state 85

    (38) expression -> expression POWER expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . POWER expression
    (39) expression -> expression . EQ expression
    (40) expression -> expression . LT expression
    (41) expression -> expression . GT expression
    (42) expression -> expression . LE expression
    (43) expression -> expression . GE expression
    (44) expression -> expression . NE expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    LBRACE          reduce using rule 38 (expression -> expression POWER expression .)
    IDENTIFIER      reduce using rule 38 (expression -> expression POWER expression .)
    IF              reduce using rule 38 (expression -> expression POWER expression .)
    WHILE           reduce using rule 38 (expression -> expression POWER expression .)
    DO              reduce using rule 38 (expression -> expression POWER expression .)
    WRITE           reduce using rule 38 (expression -> expression POWER expression .)
    READ            reduce using rule 38 (expression -> expression POWER expression .)
    SEMICOLON       reduce using rule 38 (expression -> expression POWER expression .)
    RPAREN          reduce using rule 38 (expression -> expression POWER expression .)
    COMMA           reduce using rule 38 (expression -> expression POWER expression .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    POWER           shift and go to state 58
    EQ              shift and go to state 59
    LT              shift and go to state 60
    GT              shift and go to state 61
    LE              shift and go to state 62
    GE              shift and go to state 63
    NE              shift and go to state 64
    AND             shift and go to state 65
    OR              shift and go to state 66

  ! PLUS            [ reduce using rule 38 (expression -> expression POWER expression .) ]
  ! MINUS           [ reduce using rule 38 (expression -> expression POWER expression .) ]
  ! TIMES           [ reduce using rule 38 (expression -> expression POWER expression .) ]
  ! DIVIDE          [ reduce using rule 38 (expression -> expression POWER expression .) ]
  ! POWER           [ reduce using rule 38 (expression -> expression POWER expression .) ]
  ! EQ              [ reduce using rule 38 (expression -> expression POWER expression .) ]
  ! LT              [ reduce using rule 38 (expression -> expression POWER expression .) ]
  ! GT              [ reduce using rule 38 (expression -> expression POWER expression .) ]
  ! LE              [ reduce using rule 38 (expression -> expression POWER expression .) ]
  ! GE              [ reduce using rule 38 (expression -> expression POWER expression .) ]
  ! NE              [ reduce using rule 38 (expression -> expression POWER expression .) ]
  ! AND             [ reduce using rule 38 (expression -> expression POWER expression .) ]
  ! OR              [ reduce using rule 38 (expression -> expression POWER expression .) ]


state 86

    (39) expression -> expression EQ expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . POWER expression
    (39) expression -> expression . EQ expression
    (40) expression -> expression . LT expression
    (41) expression -> expression . GT expression
    (42) expression -> expression . LE expression
    (43) expression -> expression . GE expression
    (44) expression -> expression . NE expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . OR expression

    POWER           reduce using rule 39 (expression -> expression EQ expression .)
    EQ              reduce using rule 39 (expression -> expression EQ expression .)
    NE              reduce using rule 39 (expression -> expression EQ expression .)
    AND             reduce using rule 39 (expression -> expression EQ expression .)
    OR              reduce using rule 39 (expression -> expression EQ expression .)
    LBRACE          reduce using rule 39 (expression -> expression EQ expression .)
    IDENTIFIER      reduce using rule 39 (expression -> expression EQ expression .)
    IF              reduce using rule 39 (expression -> expression EQ expression .)
    WHILE           reduce using rule 39 (expression -> expression EQ expression .)
    DO              reduce using rule 39 (expression -> expression EQ expression .)
    WRITE           reduce using rule 39 (expression -> expression EQ expression .)
    READ            reduce using rule 39 (expression -> expression EQ expression .)
    SEMICOLON       reduce using rule 39 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 39 (expression -> expression EQ expression .)
    COMMA           reduce using rule 39 (expression -> expression EQ expression .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    LT              shift and go to state 60
    GT              shift and go to state 61
    LE              shift and go to state 62
    GE              shift and go to state 63

  ! PLUS            [ reduce using rule 39 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 39 (expression -> expression EQ expression .) ]
  ! TIMES           [ reduce using rule 39 (expression -> expression EQ expression .) ]
  ! DIVIDE          [ reduce using rule 39 (expression -> expression EQ expression .) ]
  ! LT              [ reduce using rule 39 (expression -> expression EQ expression .) ]
  ! GT              [ reduce using rule 39 (expression -> expression EQ expression .) ]
  ! LE              [ reduce using rule 39 (expression -> expression EQ expression .) ]
  ! GE              [ reduce using rule 39 (expression -> expression EQ expression .) ]
  ! POWER           [ shift and go to state 58 ]
  ! EQ              [ shift and go to state 59 ]
  ! NE              [ shift and go to state 64 ]
  ! AND             [ shift and go to state 65 ]
  ! OR              [ shift and go to state 66 ]


state 87

    (40) expression -> expression LT expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . POWER expression
    (39) expression -> expression . EQ expression
    (40) expression -> expression . LT expression
    (41) expression -> expression . GT expression
    (42) expression -> expression . LE expression
    (43) expression -> expression . GE expression
    (44) expression -> expression . NE expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . OR expression

    POWER           reduce using rule 40 (expression -> expression LT expression .)
    EQ              reduce using rule 40 (expression -> expression LT expression .)
    LT              reduce using rule 40 (expression -> expression LT expression .)
    GT              reduce using rule 40 (expression -> expression LT expression .)
    LE              reduce using rule 40 (expression -> expression LT expression .)
    GE              reduce using rule 40 (expression -> expression LT expression .)
    NE              reduce using rule 40 (expression -> expression LT expression .)
    AND             reduce using rule 40 (expression -> expression LT expression .)
    OR              reduce using rule 40 (expression -> expression LT expression .)
    LBRACE          reduce using rule 40 (expression -> expression LT expression .)
    IDENTIFIER      reduce using rule 40 (expression -> expression LT expression .)
    IF              reduce using rule 40 (expression -> expression LT expression .)
    WHILE           reduce using rule 40 (expression -> expression LT expression .)
    DO              reduce using rule 40 (expression -> expression LT expression .)
    WRITE           reduce using rule 40 (expression -> expression LT expression .)
    READ            reduce using rule 40 (expression -> expression LT expression .)
    SEMICOLON       reduce using rule 40 (expression -> expression LT expression .)
    RPAREN          reduce using rule 40 (expression -> expression LT expression .)
    COMMA           reduce using rule 40 (expression -> expression LT expression .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57

  ! PLUS            [ reduce using rule 40 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 40 (expression -> expression LT expression .) ]
  ! TIMES           [ reduce using rule 40 (expression -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 40 (expression -> expression LT expression .) ]
  ! POWER           [ shift and go to state 58 ]
  ! EQ              [ shift and go to state 59 ]
  ! LT              [ shift and go to state 60 ]
  ! GT              [ shift and go to state 61 ]
  ! LE              [ shift and go to state 62 ]
  ! GE              [ shift and go to state 63 ]
  ! NE              [ shift and go to state 64 ]
  ! AND             [ shift and go to state 65 ]
  ! OR              [ shift and go to state 66 ]


state 88

    (41) expression -> expression GT expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . POWER expression
    (39) expression -> expression . EQ expression
    (40) expression -> expression . LT expression
    (41) expression -> expression . GT expression
    (42) expression -> expression . LE expression
    (43) expression -> expression . GE expression
    (44) expression -> expression . NE expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . OR expression

    POWER           reduce using rule 41 (expression -> expression GT expression .)
    EQ              reduce using rule 41 (expression -> expression GT expression .)
    LT              reduce using rule 41 (expression -> expression GT expression .)
    GT              reduce using rule 41 (expression -> expression GT expression .)
    LE              reduce using rule 41 (expression -> expression GT expression .)
    GE              reduce using rule 41 (expression -> expression GT expression .)
    NE              reduce using rule 41 (expression -> expression GT expression .)
    AND             reduce using rule 41 (expression -> expression GT expression .)
    OR              reduce using rule 41 (expression -> expression GT expression .)
    LBRACE          reduce using rule 41 (expression -> expression GT expression .)
    IDENTIFIER      reduce using rule 41 (expression -> expression GT expression .)
    IF              reduce using rule 41 (expression -> expression GT expression .)
    WHILE           reduce using rule 41 (expression -> expression GT expression .)
    DO              reduce using rule 41 (expression -> expression GT expression .)
    WRITE           reduce using rule 41 (expression -> expression GT expression .)
    READ            reduce using rule 41 (expression -> expression GT expression .)
    SEMICOLON       reduce using rule 41 (expression -> expression GT expression .)
    RPAREN          reduce using rule 41 (expression -> expression GT expression .)
    COMMA           reduce using rule 41 (expression -> expression GT expression .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57

  ! PLUS            [ reduce using rule 41 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 41 (expression -> expression GT expression .) ]
  ! TIMES           [ reduce using rule 41 (expression -> expression GT expression .) ]
  ! DIVIDE          [ reduce using rule 41 (expression -> expression GT expression .) ]
  ! POWER           [ shift and go to state 58 ]
  ! EQ              [ shift and go to state 59 ]
  ! LT              [ shift and go to state 60 ]
  ! GT              [ shift and go to state 61 ]
  ! LE              [ shift and go to state 62 ]
  ! GE              [ shift and go to state 63 ]
  ! NE              [ shift and go to state 64 ]
  ! AND             [ shift and go to state 65 ]
  ! OR              [ shift and go to state 66 ]


state 89

    (42) expression -> expression LE expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . POWER expression
    (39) expression -> expression . EQ expression
    (40) expression -> expression . LT expression
    (41) expression -> expression . GT expression
    (42) expression -> expression . LE expression
    (43) expression -> expression . GE expression
    (44) expression -> expression . NE expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . OR expression

    POWER           reduce using rule 42 (expression -> expression LE expression .)
    EQ              reduce using rule 42 (expression -> expression LE expression .)
    LT              reduce using rule 42 (expression -> expression LE expression .)
    GT              reduce using rule 42 (expression -> expression LE expression .)
    LE              reduce using rule 42 (expression -> expression LE expression .)
    GE              reduce using rule 42 (expression -> expression LE expression .)
    NE              reduce using rule 42 (expression -> expression LE expression .)
    AND             reduce using rule 42 (expression -> expression LE expression .)
    OR              reduce using rule 42 (expression -> expression LE expression .)
    LBRACE          reduce using rule 42 (expression -> expression LE expression .)
    IDENTIFIER      reduce using rule 42 (expression -> expression LE expression .)
    IF              reduce using rule 42 (expression -> expression LE expression .)
    WHILE           reduce using rule 42 (expression -> expression LE expression .)
    DO              reduce using rule 42 (expression -> expression LE expression .)
    WRITE           reduce using rule 42 (expression -> expression LE expression .)
    READ            reduce using rule 42 (expression -> expression LE expression .)
    SEMICOLON       reduce using rule 42 (expression -> expression LE expression .)
    RPAREN          reduce using rule 42 (expression -> expression LE expression .)
    COMMA           reduce using rule 42 (expression -> expression LE expression .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57

  ! PLUS            [ reduce using rule 42 (expression -> expression LE expression .) ]
  ! MINUS           [ reduce using rule 42 (expression -> expression LE expression .) ]
  ! TIMES           [ reduce using rule 42 (expression -> expression LE expression .) ]
  ! DIVIDE          [ reduce using rule 42 (expression -> expression LE expression .) ]
  ! POWER           [ shift and go to state 58 ]
  ! EQ              [ shift and go to state 59 ]
  ! LT              [ shift and go to state 60 ]
  ! GT              [ shift and go to state 61 ]
  ! LE              [ shift and go to state 62 ]
  ! GE              [ shift and go to state 63 ]
  ! NE              [ shift and go to state 64 ]
  ! AND             [ shift and go to state 65 ]
  ! OR              [ shift and go to state 66 ]


state 90

    (43) expression -> expression GE expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . POWER expression
    (39) expression -> expression . EQ expression
    (40) expression -> expression . LT expression
    (41) expression -> expression . GT expression
    (42) expression -> expression . LE expression
    (43) expression -> expression . GE expression
    (44) expression -> expression . NE expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . OR expression

    POWER           reduce using rule 43 (expression -> expression GE expression .)
    EQ              reduce using rule 43 (expression -> expression GE expression .)
    LT              reduce using rule 43 (expression -> expression GE expression .)
    GT              reduce using rule 43 (expression -> expression GE expression .)
    LE              reduce using rule 43 (expression -> expression GE expression .)
    GE              reduce using rule 43 (expression -> expression GE expression .)
    NE              reduce using rule 43 (expression -> expression GE expression .)
    AND             reduce using rule 43 (expression -> expression GE expression .)
    OR              reduce using rule 43 (expression -> expression GE expression .)
    LBRACE          reduce using rule 43 (expression -> expression GE expression .)
    IDENTIFIER      reduce using rule 43 (expression -> expression GE expression .)
    IF              reduce using rule 43 (expression -> expression GE expression .)
    WHILE           reduce using rule 43 (expression -> expression GE expression .)
    DO              reduce using rule 43 (expression -> expression GE expression .)
    WRITE           reduce using rule 43 (expression -> expression GE expression .)
    READ            reduce using rule 43 (expression -> expression GE expression .)
    SEMICOLON       reduce using rule 43 (expression -> expression GE expression .)
    RPAREN          reduce using rule 43 (expression -> expression GE expression .)
    COMMA           reduce using rule 43 (expression -> expression GE expression .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57

  ! PLUS            [ reduce using rule 43 (expression -> expression GE expression .) ]
  ! MINUS           [ reduce using rule 43 (expression -> expression GE expression .) ]
  ! TIMES           [ reduce using rule 43 (expression -> expression GE expression .) ]
  ! DIVIDE          [ reduce using rule 43 (expression -> expression GE expression .) ]
  ! POWER           [ shift and go to state 58 ]
  ! EQ              [ shift and go to state 59 ]
  ! LT              [ shift and go to state 60 ]
  ! GT              [ shift and go to state 61 ]
  ! LE              [ shift and go to state 62 ]
  ! GE              [ shift and go to state 63 ]
  ! NE              [ shift and go to state 64 ]
  ! AND             [ shift and go to state 65 ]
  ! OR              [ shift and go to state 66 ]


state 91

    (44) expression -> expression NE expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . POWER expression
    (39) expression -> expression . EQ expression
    (40) expression -> expression . LT expression
    (41) expression -> expression . GT expression
    (42) expression -> expression . LE expression
    (43) expression -> expression . GE expression
    (44) expression -> expression . NE expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . OR expression

    POWER           reduce using rule 44 (expression -> expression NE expression .)
    EQ              reduce using rule 44 (expression -> expression NE expression .)
    NE              reduce using rule 44 (expression -> expression NE expression .)
    AND             reduce using rule 44 (expression -> expression NE expression .)
    OR              reduce using rule 44 (expression -> expression NE expression .)
    LBRACE          reduce using rule 44 (expression -> expression NE expression .)
    IDENTIFIER      reduce using rule 44 (expression -> expression NE expression .)
    IF              reduce using rule 44 (expression -> expression NE expression .)
    WHILE           reduce using rule 44 (expression -> expression NE expression .)
    DO              reduce using rule 44 (expression -> expression NE expression .)
    WRITE           reduce using rule 44 (expression -> expression NE expression .)
    READ            reduce using rule 44 (expression -> expression NE expression .)
    SEMICOLON       reduce using rule 44 (expression -> expression NE expression .)
    RPAREN          reduce using rule 44 (expression -> expression NE expression .)
    COMMA           reduce using rule 44 (expression -> expression NE expression .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    LT              shift and go to state 60
    GT              shift and go to state 61
    LE              shift and go to state 62
    GE              shift and go to state 63

  ! PLUS            [ reduce using rule 44 (expression -> expression NE expression .) ]
  ! MINUS           [ reduce using rule 44 (expression -> expression NE expression .) ]
  ! TIMES           [ reduce using rule 44 (expression -> expression NE expression .) ]
  ! DIVIDE          [ reduce using rule 44 (expression -> expression NE expression .) ]
  ! LT              [ reduce using rule 44 (expression -> expression NE expression .) ]
  ! GT              [ reduce using rule 44 (expression -> expression NE expression .) ]
  ! LE              [ reduce using rule 44 (expression -> expression NE expression .) ]
  ! GE              [ reduce using rule 44 (expression -> expression NE expression .) ]
  ! POWER           [ shift and go to state 58 ]
  ! EQ              [ shift and go to state 59 ]
  ! NE              [ shift and go to state 64 ]
  ! AND             [ shift and go to state 65 ]
  ! OR              [ shift and go to state 66 ]


state 92

    (45) expression -> expression AND expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . POWER expression
    (39) expression -> expression . EQ expression
    (40) expression -> expression . LT expression
    (41) expression -> expression . GT expression
    (42) expression -> expression . LE expression
    (43) expression -> expression . GE expression
    (44) expression -> expression . NE expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . OR expression

    POWER           reduce using rule 45 (expression -> expression AND expression .)
    AND             reduce using rule 45 (expression -> expression AND expression .)
    OR              reduce using rule 45 (expression -> expression AND expression .)
    LBRACE          reduce using rule 45 (expression -> expression AND expression .)
    IDENTIFIER      reduce using rule 45 (expression -> expression AND expression .)
    IF              reduce using rule 45 (expression -> expression AND expression .)
    WHILE           reduce using rule 45 (expression -> expression AND expression .)
    DO              reduce using rule 45 (expression -> expression AND expression .)
    WRITE           reduce using rule 45 (expression -> expression AND expression .)
    READ            reduce using rule 45 (expression -> expression AND expression .)
    SEMICOLON       reduce using rule 45 (expression -> expression AND expression .)
    RPAREN          reduce using rule 45 (expression -> expression AND expression .)
    COMMA           reduce using rule 45 (expression -> expression AND expression .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    EQ              shift and go to state 59
    LT              shift and go to state 60
    GT              shift and go to state 61
    LE              shift and go to state 62
    GE              shift and go to state 63
    NE              shift and go to state 64

  ! PLUS            [ reduce using rule 45 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 45 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 45 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 45 (expression -> expression AND expression .) ]
  ! EQ              [ reduce using rule 45 (expression -> expression AND expression .) ]
  ! LT              [ reduce using rule 45 (expression -> expression AND expression .) ]
  ! GT              [ reduce using rule 45 (expression -> expression AND expression .) ]
  ! LE              [ reduce using rule 45 (expression -> expression AND expression .) ]
  ! GE              [ reduce using rule 45 (expression -> expression AND expression .) ]
  ! NE              [ reduce using rule 45 (expression -> expression AND expression .) ]
  ! POWER           [ shift and go to state 58 ]
  ! AND             [ shift and go to state 65 ]
  ! OR              [ shift and go to state 66 ]


state 93

    (46) expression -> expression OR expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . POWER expression
    (39) expression -> expression . EQ expression
    (40) expression -> expression . LT expression
    (41) expression -> expression . GT expression
    (42) expression -> expression . LE expression
    (43) expression -> expression . GE expression
    (44) expression -> expression . NE expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . OR expression

    POWER           reduce using rule 46 (expression -> expression OR expression .)
    OR              reduce using rule 46 (expression -> expression OR expression .)
    LBRACE          reduce using rule 46 (expression -> expression OR expression .)
    IDENTIFIER      reduce using rule 46 (expression -> expression OR expression .)
    IF              reduce using rule 46 (expression -> expression OR expression .)
    WHILE           reduce using rule 46 (expression -> expression OR expression .)
    DO              reduce using rule 46 (expression -> expression OR expression .)
    WRITE           reduce using rule 46 (expression -> expression OR expression .)
    READ            reduce using rule 46 (expression -> expression OR expression .)
    SEMICOLON       reduce using rule 46 (expression -> expression OR expression .)
    RPAREN          reduce using rule 46 (expression -> expression OR expression .)
    COMMA           reduce using rule 46 (expression -> expression OR expression .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    EQ              shift and go to state 59
    LT              shift and go to state 60
    GT              shift and go to state 61
    LE              shift and go to state 62
    GE              shift and go to state 63
    NE              shift and go to state 64
    AND             shift and go to state 65

  ! PLUS            [ reduce using rule 46 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 46 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 46 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 46 (expression -> expression OR expression .) ]
  ! EQ              [ reduce using rule 46 (expression -> expression OR expression .) ]
  ! LT              [ reduce using rule 46 (expression -> expression OR expression .) ]
  ! GT              [ reduce using rule 46 (expression -> expression OR expression .) ]
  ! LE              [ reduce using rule 46 (expression -> expression OR expression .) ]
  ! GE              [ reduce using rule 46 (expression -> expression OR expression .) ]
  ! NE              [ reduce using rule 46 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 46 (expression -> expression OR expression .) ]
  ! POWER           [ shift and go to state 58 ]
  ! OR              [ shift and go to state 66 ]


state 94

    (49) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    POWER           reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    LE              reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    GE              reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    NE              reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    LBRACE          reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    IDENTIFIER      reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    IF              reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    DO              reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    WRITE           reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    READ            reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 49 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 49 (expression -> LPAREN expression RPAREN .)


state 95

    (29) while_statement -> WHILE expression LBRACE statements . RBRACE
    (13) statements -> statements . statement
    (16) statement -> . assignment
    (17) statement -> . if_statement
    (18) statement -> . while_statement
    (19) statement -> . do_while_statement
    (20) statement -> . write_statement
    (21) statement -> . read_statement
    (22) statement -> . block
    (23) assignment -> . IDENTIFIER ASSIGN expression SEMICOLON
    (24) if_statement -> . IF expression block else_part FI
    (25) if_statement -> . IF expression statement else_part FI
    (29) while_statement -> . WHILE expression LBRACE statements RBRACE
    (30) do_while_statement -> . DO LBRACE statements RBRACE WHILE LPAREN expression RPAREN SEMICOLON
    (31) write_statement -> . WRITE expression SEMICOLON
    (32) read_statement -> . READ IDENTIFIER SEMICOLON
    (33) block -> . LBRACE statements RBRACE

    RBRACE          shift and go to state 102
    IDENTIFIER      shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    DO              shift and go to state 26
    WRITE           shift and go to state 27
    READ            shift and go to state 28
    LBRACE          shift and go to state 11

    statement                      shift and go to state 33
    assignment                     shift and go to state 16
    if_statement                   shift and go to state 17
    while_statement                shift and go to state 18
    do_while_statement             shift and go to state 19
    write_statement                shift and go to state 20
    read_statement                 shift and go to state 21
    block                          shift and go to state 22

state 96

    (30) do_while_statement -> DO LBRACE statements RBRACE . WHILE LPAREN expression RPAREN SEMICOLON

    WHILE           shift and go to state 103


state 97

    (7) var_list -> var_list COMMA IDENTIFIER ASSIGN . expression
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression POWER expression
    (39) expression -> . expression EQ expression
    (40) expression -> . expression LT expression
    (41) expression -> . expression GT expression
    (42) expression -> . expression LE expression
    (43) expression -> . expression GE expression
    (44) expression -> . expression NE expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression OR expression
    (47) expression -> . MINUS expression
    (48) expression -> . NOT expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . IDENTIFIER
    (52) expression -> . TRUE
    (53) expression -> . FALSE

    MINUS           shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    IDENTIFIER      shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    expression                     shift and go to state 104

state 98

    (24) if_statement -> IF expression block else_part FI .

    RBRACE          reduce using rule 24 (if_statement -> IF expression block else_part FI .)
    IDENTIFIER      reduce using rule 24 (if_statement -> IF expression block else_part FI .)
    IF              reduce using rule 24 (if_statement -> IF expression block else_part FI .)
    WHILE           reduce using rule 24 (if_statement -> IF expression block else_part FI .)
    DO              reduce using rule 24 (if_statement -> IF expression block else_part FI .)
    WRITE           reduce using rule 24 (if_statement -> IF expression block else_part FI .)
    READ            reduce using rule 24 (if_statement -> IF expression block else_part FI .)
    LBRACE          reduce using rule 24 (if_statement -> IF expression block else_part FI .)
    ELSE            reduce using rule 24 (if_statement -> IF expression block else_part FI .)
    FI              reduce using rule 24 (if_statement -> IF expression block else_part FI .)


state 99

    (26) else_part -> ELSE block .
    (22) statement -> block .

  ! reduce/reduce conflict for FI resolved using rule 22 (statement -> block .)
    FI              reduce using rule 22 (statement -> block .)

  ! FI              [ reduce using rule 26 (else_part -> ELSE block .) ]


state 100

    (27) else_part -> ELSE statement .

    FI              reduce using rule 27 (else_part -> ELSE statement .)


state 101

    (25) if_statement -> IF expression statement else_part FI .

    RBRACE          reduce using rule 25 (if_statement -> IF expression statement else_part FI .)
    IDENTIFIER      reduce using rule 25 (if_statement -> IF expression statement else_part FI .)
    IF              reduce using rule 25 (if_statement -> IF expression statement else_part FI .)
    WHILE           reduce using rule 25 (if_statement -> IF expression statement else_part FI .)
    DO              reduce using rule 25 (if_statement -> IF expression statement else_part FI .)
    WRITE           reduce using rule 25 (if_statement -> IF expression statement else_part FI .)
    READ            reduce using rule 25 (if_statement -> IF expression statement else_part FI .)
    LBRACE          reduce using rule 25 (if_statement -> IF expression statement else_part FI .)
    ELSE            reduce using rule 25 (if_statement -> IF expression statement else_part FI .)
    FI              reduce using rule 25 (if_statement -> IF expression statement else_part FI .)


state 102

    (29) while_statement -> WHILE expression LBRACE statements RBRACE .

    RBRACE          reduce using rule 29 (while_statement -> WHILE expression LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 29 (while_statement -> WHILE expression LBRACE statements RBRACE .)
    IF              reduce using rule 29 (while_statement -> WHILE expression LBRACE statements RBRACE .)
    WHILE           reduce using rule 29 (while_statement -> WHILE expression LBRACE statements RBRACE .)
    DO              reduce using rule 29 (while_statement -> WHILE expression LBRACE statements RBRACE .)
    WRITE           reduce using rule 29 (while_statement -> WHILE expression LBRACE statements RBRACE .)
    READ            reduce using rule 29 (while_statement -> WHILE expression LBRACE statements RBRACE .)
    LBRACE          reduce using rule 29 (while_statement -> WHILE expression LBRACE statements RBRACE .)
    ELSE            reduce using rule 29 (while_statement -> WHILE expression LBRACE statements RBRACE .)
    FI              reduce using rule 29 (while_statement -> WHILE expression LBRACE statements RBRACE .)


state 103

    (30) do_while_statement -> DO LBRACE statements RBRACE WHILE . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 105


state 104

    (7) var_list -> var_list COMMA IDENTIFIER ASSIGN expression .
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . POWER expression
    (39) expression -> expression . EQ expression
    (40) expression -> expression . LT expression
    (41) expression -> expression . GT expression
    (42) expression -> expression . LE expression
    (43) expression -> expression . GE expression
    (44) expression -> expression . NE expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . OR expression

    SEMICOLON       reduce using rule 7 (var_list -> var_list COMMA IDENTIFIER ASSIGN expression .)
    COMMA           reduce using rule 7 (var_list -> var_list COMMA IDENTIFIER ASSIGN expression .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    POWER           shift and go to state 58
    EQ              shift and go to state 59
    LT              shift and go to state 60
    GT              shift and go to state 61
    LE              shift and go to state 62
    GE              shift and go to state 63
    NE              shift and go to state 64
    AND             shift and go to state 65
    OR              shift and go to state 66


state 105

    (30) do_while_statement -> DO LBRACE statements RBRACE WHILE LPAREN . expression RPAREN SEMICOLON
    (34) expression -> . expression PLUS expression
    (35) expression -> . expression MINUS expression
    (36) expression -> . expression TIMES expression
    (37) expression -> . expression DIVIDE expression
    (38) expression -> . expression POWER expression
    (39) expression -> . expression EQ expression
    (40) expression -> . expression LT expression
    (41) expression -> . expression GT expression
    (42) expression -> . expression LE expression
    (43) expression -> . expression GE expression
    (44) expression -> . expression NE expression
    (45) expression -> . expression AND expression
    (46) expression -> . expression OR expression
    (47) expression -> . MINUS expression
    (48) expression -> . NOT expression
    (49) expression -> . LPAREN expression RPAREN
    (50) expression -> . NUMBER
    (51) expression -> . IDENTIFIER
    (52) expression -> . TRUE
    (53) expression -> . FALSE

    MINUS           shift and go to state 36
    NOT             shift and go to state 37
    LPAREN          shift and go to state 38
    NUMBER          shift and go to state 39
    IDENTIFIER      shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    expression                     shift and go to state 106

state 106

    (30) do_while_statement -> DO LBRACE statements RBRACE WHILE LPAREN expression . RPAREN SEMICOLON
    (34) expression -> expression . PLUS expression
    (35) expression -> expression . MINUS expression
    (36) expression -> expression . TIMES expression
    (37) expression -> expression . DIVIDE expression
    (38) expression -> expression . POWER expression
    (39) expression -> expression . EQ expression
    (40) expression -> expression . LT expression
    (41) expression -> expression . GT expression
    (42) expression -> expression . LE expression
    (43) expression -> expression . GE expression
    (44) expression -> expression . NE expression
    (45) expression -> expression . AND expression
    (46) expression -> expression . OR expression

    RPAREN          shift and go to state 107
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    POWER           shift and go to state 58
    EQ              shift and go to state 59
    LT              shift and go to state 60
    GT              shift and go to state 61
    LE              shift and go to state 62
    GE              shift and go to state 63
    NE              shift and go to state 64
    AND             shift and go to state 65
    OR              shift and go to state 66


state 107

    (30) do_while_statement -> DO LBRACE statements RBRACE WHILE LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 108


state 108

    (30) do_while_statement -> DO LBRACE statements RBRACE WHILE LPAREN expression RPAREN SEMICOLON .

    RBRACE          reduce using rule 30 (do_while_statement -> DO LBRACE statements RBRACE WHILE LPAREN expression RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 30 (do_while_statement -> DO LBRACE statements RBRACE WHILE LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 30 (do_while_statement -> DO LBRACE statements RBRACE WHILE LPAREN expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 30 (do_while_statement -> DO LBRACE statements RBRACE WHILE LPAREN expression RPAREN SEMICOLON .)
    DO              reduce using rule 30 (do_while_statement -> DO LBRACE statements RBRACE WHILE LPAREN expression RPAREN SEMICOLON .)
    WRITE           reduce using rule 30 (do_while_statement -> DO LBRACE statements RBRACE WHILE LPAREN expression RPAREN SEMICOLON .)
    READ            reduce using rule 30 (do_while_statement -> DO LBRACE statements RBRACE WHILE LPAREN expression RPAREN SEMICOLON .)
    LBRACE          reduce using rule 30 (do_while_statement -> DO LBRACE statements RBRACE WHILE LPAREN expression RPAREN SEMICOLON .)
    ELSE            reduce using rule 30 (do_while_statement -> DO LBRACE statements RBRACE WHILE LPAREN expression RPAREN SEMICOLON .)
    FI              reduce using rule 30 (do_while_statement -> DO LBRACE statements RBRACE WHILE LPAREN expression RPAREN SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INT in state 3 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 3 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 3 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 4 resolved as shift
WARNING: shift/reduce conflict for IF in state 4 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 4 resolved as shift
WARNING: shift/reduce conflict for DO in state 4 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 4 resolved as shift
WARNING: shift/reduce conflict for READ in state 4 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 4 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 11 resolved as shift
WARNING: shift/reduce conflict for IF in state 11 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 11 resolved as shift
WARNING: shift/reduce conflict for DO in state 11 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 11 resolved as shift
WARNING: shift/reduce conflict for READ in state 11 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 11 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 44 resolved as shift
WARNING: shift/reduce conflict for IF in state 44 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 44 resolved as shift
WARNING: shift/reduce conflict for DO in state 44 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 44 resolved as shift
WARNING: shift/reduce conflict for READ in state 44 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 44 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 52 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 70 resolved as shift
WARNING: shift/reduce conflict for IF in state 70 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 70 resolved as shift
WARNING: shift/reduce conflict for DO in state 70 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 70 resolved as shift
WARNING: shift/reduce conflict for READ in state 70 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 70 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 85 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 85 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 85 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 85 resolved as shift
WARNING: shift/reduce conflict for POWER in state 85 resolved as shift
WARNING: shift/reduce conflict for EQ in state 85 resolved as shift
WARNING: shift/reduce conflict for LT in state 85 resolved as shift
WARNING: shift/reduce conflict for GT in state 85 resolved as shift
WARNING: shift/reduce conflict for LE in state 85 resolved as shift
WARNING: shift/reduce conflict for GE in state 85 resolved as shift
WARNING: shift/reduce conflict for NE in state 85 resolved as shift
WARNING: shift/reduce conflict for AND in state 85 resolved as shift
WARNING: shift/reduce conflict for OR in state 85 resolved as shift
WARNING: reduce/reduce conflict in state 52 resolved using rule (statement -> block)
WARNING: rejected rule (empty -> <empty>) in state 52
WARNING: reduce/reduce conflict in state 99 resolved using rule (statement -> block)
WARNING: rejected rule (else_part -> ELSE block) in state 99
WARNING: Rule (else_part -> ELSE block) is never reduced
